

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue May 30 11:48:42 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F707
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	psect	text35,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F707 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0106                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0110                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0113                     	;# 
   161  0114                     	;# 
   162  0185                     	;# 
   163  0186                     	;# 
   164  0187                     	;# 
   165  0188                     	;# 
   166  0189                     	;# 
   167  018C                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  008F                     	;# 
   213  0090                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0106                     	;# 
   233  0107                     	;# 
   234  0108                     	;# 
   235  0109                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  0110                     	;# 
   241  0111                     	;# 
   242  0112                     	;# 
   243  0113                     	;# 
   244  0114                     	;# 
   245  0185                     	;# 
   246  0186                     	;# 
   247  0187                     	;# 
   248  0188                     	;# 
   249  0189                     	;# 
   250  018C                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0008                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  0088                     	;# 
   291  0089                     	;# 
   292  008C                     	;# 
   293  008D                     	;# 
   294  008E                     	;# 
   295  008F                     	;# 
   296  0090                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0095                     	;# 
   303  0096                     	;# 
   304  0097                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009A                     	;# 
   308  009A                     	;# 
   309  009B                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  009F                     	;# 
   314  0105                     	;# 
   315  0106                     	;# 
   316  0107                     	;# 
   317  0108                     	;# 
   318  0109                     	;# 
   319  010C                     	;# 
   320  010D                     	;# 
   321  010E                     	;# 
   322  010F                     	;# 
   323  0110                     	;# 
   324  0111                     	;# 
   325  0112                     	;# 
   326  0113                     	;# 
   327  0114                     	;# 
   328  0185                     	;# 
   329  0186                     	;# 
   330  0187                     	;# 
   331  0188                     	;# 
   332  0189                     	;# 
   333  018C                     	;# 
   334                           
   335                           	psect	strings
   336  1000                     __pstrings:
   337  1000                     stringtab:
   338  1000                     __stringtab:
   339  1000                     stringcode:	
   340                           ;	String table - string pointers are 1 byte each
   341                           
   342  1000                     stringdir:
   343  1000  3010               	movlw	high stringdir
   344  1001  008A               	movwf	10
   345  1002  0804               	movf	4,w
   346  1003  0A84               	incf	4,f
   347  1004  0782               	addwf	2,f
   348  1005                     __stringbase:
   349  1005  3400               	retlw	0
   350  1006                     __end_of__stringtab:
   351  1006                     __powers_:
   352  1006  3400               	retlw	0
   353  1007  3400               	retlw	0
   354  1008  3480               	retlw	128
   355  1009  343F               	retlw	63
   356  100A  3400               	retlw	0
   357  100B  3400               	retlw	0
   358  100C  3420               	retlw	32
   359  100D  3441               	retlw	65
   360  100E  3400               	retlw	0
   361  100F  3400               	retlw	0
   362  1010  34C8               	retlw	200
   363  1011  3442               	retlw	66
   364  1012  3400               	retlw	0
   365  1013  3400               	retlw	0
   366  1014  347A               	retlw	122
   367  1015  3444               	retlw	68
   368  1016  3400               	retlw	0
   369  1017  3440               	retlw	64
   370  1018  341C               	retlw	28
   371  1019  3446               	retlw	70
   372  101A  3400               	retlw	0
   373  101B  3450               	retlw	80
   374  101C  34C3               	retlw	195
   375  101D  3447               	retlw	71
   376  101E  3400               	retlw	0
   377  101F  3424               	retlw	36
   378  1020  3474               	retlw	116
   379  1021  3449               	retlw	73
   380  1022  3480               	retlw	128
   381  1023  3496               	retlw	150
   382  1024  3418               	retlw	24
   383  1025  344B               	retlw	75
   384  1026  3420               	retlw	32
   385  1027  34BC               	retlw	188
   386  1028  34BE               	retlw	190
   387  1029  344C               	retlw	76
   388  102A  3428               	retlw	40
   389  102B  346B               	retlw	107
   390  102C  346E               	retlw	110
   391  102D  344E               	retlw	78
   392  102E  34F9               	retlw	249
   393  102F  3402               	retlw	2
   394  1030  3415               	retlw	21
   395  1031  3450               	retlw	80
   396  1032  34EC               	retlw	236
   397  1033  3478               	retlw	120
   398  1034  34AD               	retlw	173
   399  1035  3460               	retlw	96
   400  1036  34CA               	retlw	202
   401  1037  34F2               	retlw	242
   402  1038  3449               	retlw	73
   403  1039  3471               	retlw	113
   404  103A                     __end_of__powers_:
   405  103A                     __npowers_:
   406  103A  3400               	retlw	0
   407  103B  3400               	retlw	0
   408  103C  3480               	retlw	128
   409  103D  343F               	retlw	63
   410  103E  34CD               	retlw	205
   411  103F  34CC               	retlw	204
   412  1040  34CC               	retlw	204
   413  1041  343D               	retlw	61
   414  1042  340A               	retlw	10
   415  1043  34D7               	retlw	215
   416  1044  3423               	retlw	35
   417  1045  343C               	retlw	60
   418  1046  346F               	retlw	111
   419  1047  3412               	retlw	18
   420  1048  3483               	retlw	131
   421  1049  343A               	retlw	58
   422  104A  3417               	retlw	23
   423  104B  34B7               	retlw	183
   424  104C  34D1               	retlw	209
   425  104D  3438               	retlw	56
   426  104E  34AC               	retlw	172
   427  104F  34C5               	retlw	197
   428  1050  3427               	retlw	39
   429  1051  3437               	retlw	55
   430  1052  34BD               	retlw	189
   431  1053  3437               	retlw	55
   432  1054  3486               	retlw	134
   433  1055  3435               	retlw	53
   434  1056  3495               	retlw	149
   435  1057  34BF               	retlw	191
   436  1058  34D6               	retlw	214
   437  1059  3433               	retlw	51
   438  105A  3477               	retlw	119
   439  105B  34CC               	retlw	204
   440  105C  342B               	retlw	43
   441  105D  3432               	retlw	50
   442  105E  345F               	retlw	95
   443  105F  3470               	retlw	112
   444  1060  3489               	retlw	137
   445  1061  3430               	retlw	48
   446  1062  34FF               	retlw	255
   447  1063  34E6               	retlw	230
   448  1064  34DB               	retlw	219
   449  1065  342E               	retlw	46
   450  1066  3408               	retlw	8
   451  1067  34E5               	retlw	229
   452  1068  343C               	retlw	60
   453  1069  341E               	retlw	30
   454  106A  3460               	retlw	96
   455  106B  3442               	retlw	66
   456  106C  34A2               	retlw	162
   457  106D  340D               	retlw	13
   458  106E                     __end_of__npowers_:
   459  106E                     _dpowers:
   460  106E  3401               	retlw	1
   461  106F  3400               	retlw	0
   462  1070  3400               	retlw	0
   463  1071  3400               	retlw	0
   464  1072  340A               	retlw	10
   465  1073  3400               	retlw	0
   466  1074  3400               	retlw	0
   467  1075  3400               	retlw	0
   468  1076  3464               	retlw	100
   469  1077  3400               	retlw	0
   470  1078  3400               	retlw	0
   471  1079  3400               	retlw	0
   472  107A  34E8               	retlw	232
   473  107B  3403               	retlw	3
   474  107C  3400               	retlw	0
   475  107D  3400               	retlw	0
   476  107E  3410               	retlw	16
   477  107F  3427               	retlw	39
   478  1080  3400               	retlw	0
   479  1081  3400               	retlw	0
   480  1082  34A0               	retlw	160
   481  1083  3486               	retlw	134
   482  1084  3401               	retlw	1
   483  1085  3400               	retlw	0
   484  1086  3440               	retlw	64
   485  1087  3442               	retlw	66
   486  1088  340F               	retlw	15
   487  1089  3400               	retlw	0
   488  108A  3480               	retlw	128
   489  108B  3496               	retlw	150
   490  108C  3498               	retlw	152
   491  108D  3400               	retlw	0
   492  108E  3400               	retlw	0
   493  108F  34E1               	retlw	225
   494  1090  34F5               	retlw	245
   495  1091  3405               	retlw	5
   496  1092  3400               	retlw	0
   497  1093  34CA               	retlw	202
   498  1094  349A               	retlw	154
   499  1095  343B               	retlw	59
   500  1096                     __end_of_dpowers:
   501  0019                     _TXREG	set	25
   502  001E                     _ADRES	set	30
   503  0008                     _PORTD	set	8
   504  0006                     _PORTBbits	set	6
   505  001F                     _ADCON0	set	31
   506  0018                     _RCSTA	set	24
   507  006C                     _TMRAIF	set	108
   508  0060                     _TMR1IF	set	96
   509  0080                     _TMR1ON	set	128
   510  0082                     _T1SYNC	set	130
   511  0085                     _T1CKPS1	set	133
   512  0084                     _T1CKPS0	set	132
   513  0086                     _TMRCS0	set	134
   514  0087                     _TMRCS1	set	135
   515  0083                     _T1OSCEN	set	131
   516  00F9                     _GO_nDONE	set	249
   517  009D                     _FVRCON	set	157
   518  009F                     _ADCON1	set	159
   519  0088                     _TRISD	set	136
   520  0085                     _TRISA	set	133
   521  0090                     _OSCCON	set	144
   522  0086                     _TRISB	set	134
   523  0095                     _WPUB	set	149
   524  0098                     _TXSTA	set	152
   525  0099                     _SPBRG	set	153
   526  0087                     _TRISC	set	135
   527  0460                     _TMR1IE	set	1120
   528  047F                     _TMR1GE	set	1151
   529  0110                     _TMRA	set	272
   530  0114                     _DACCON1	set	276
   531  0113                     _DACCON0	set	275
   532  0185                     _ANSELA	set	389
   533  0188                     _ANSELD	set	392
   534  0186                     _ANSELB	set	390
   535  1096                     STR_1:
   536  1096  3474               	retlw	116	;'t'
   537  1097  3465               	retlw	101	;'e'
   538  1098  346E               	retlw	110	;'n'
   539  1099  3473               	retlw	115	;'s'
   540  109A  3469               	retlw	105	;'i'
   541  109B  346F               	retlw	111	;'o'
   542  109C  346E               	retlw	110	;'n'
   543  109D  3420               	retlw	32	;' '
   544  109E  3443               	retlw	67	;'C'
   545  109F  3461               	retlw	97	;'a'
   546  10A0  3470               	retlw	112	;'p'
   547  10A1  3474               	retlw	116	;'t'
   548  10A2  3465               	retlw	101	;'e'
   549  10A3  3475               	retlw	117	;'u'
   550  10A4  3472               	retlw	114	;'r'
   551  10A5  3420               	retlw	32	;' '
   552  10A6  3425               	retlw	37	;'%'
   553  10A7  3432               	retlw	50	;'2'
   554  10A8  342E               	retlw	46	;'.'
   555  10A9  3432               	retlw	50	;'2'
   556  10AA  3466               	retlw	102	;'f'
   557  10AB  3420               	retlw	32	;' '
   558  10AC  3456               	retlw	86	;'V'
   559  10AD  3420               	retlw	32	;' '
   560  10AE  340A               	retlw	10
   561  10AF  3400               	retlw	0
   562                           
   563                           	psect	cinit
   564  07F9                     start_initialization:	
   565                           ; #config settings
   566                           
   567  07F9                     __initialization:
   568                           
   569                           ; Clear objects allocated to BANK1
   570  07F9  1683               	bsf	3,5	;RP0=1, select bank1
   571  07FA  1303               	bcf	3,6	;RP1=0, select bank1
   572  07FB  01E4               	clrf	__pbssBANK1& (0+127)
   573  07FC                     end_of_initialization:	
   574                           ;End of C runtime variable initialization code
   575                           
   576  07FC                     __end_of__initialization:
   577  07FC  0183               	clrf	3
   578  07FD  160A  118A  28C9   	ljmp	_main	;jump to C main() function
   579                           
   580                           	psect	bssBANK1
   581  00E4                     __pbssBANK1:
   582  00E4                     _Fincompt1:
   583  00E4                     	ds	1
   584                           
   585                           	psect	cstackBANK1
   586  00A0                     __pcstackBANK1:
   587  00A0                     ?___flsub:
   588  00A0                     ___flsub@a:	
   589                           ; 4 bytes @ 0x0
   590                           
   591                           
   592                           ; 4 bytes @ 0x0
   593  00A0                     	ds	4
   594  00A4                     ___flsub@b:
   595                           
   596                           ; 4 bytes @ 0x4
   597  00A4                     	ds	4
   598  00A8                     ??_sprintf:
   599                           
   600                           ; 1 bytes @ 0x8
   601  00A8                     	ds	5
   602  00AD                     _sprintf$734:
   603                           
   604                           ; 4 bytes @ 0xD
   605  00AD                     	ds	4
   606  00B1                     sprintf@ap:
   607                           
   608                           ; 1 bytes @ 0x11
   609  00B1                     	ds	1
   610  00B2                     sprintf@val:
   611                           
   612                           ; 4 bytes @ 0x12
   613  00B2                     	ds	4
   614  00B6                     sprintf@flag:
   615                           
   616                           ; 2 bytes @ 0x16
   617  00B6                     	ds	2
   618  00B8                     sprintf@width:
   619                           
   620                           ; 2 bytes @ 0x18
   621  00B8                     	ds	2
   622  00BA                     sprintf@tmpval:
   623                           
   624                           ; 4 bytes @ 0x1A
   625  00BA                     	ds	4
   626  00BE                     sprintf@eexp:
   627                           
   628                           ; 2 bytes @ 0x1E
   629  00BE                     	ds	2
   630  00C0                     sprintf@fval:
   631                           
   632                           ; 4 bytes @ 0x20
   633  00C0                     	ds	4
   634  00C4                     sprintf@sp:
   635                           
   636                           ; 1 bytes @ 0x24
   637  00C4                     	ds	1
   638  00C5                     sprintf@prec:
   639                           
   640                           ; 2 bytes @ 0x25
   641  00C5                     	ds	2
   642  00C7                     sprintf@c:
   643                           
   644                           ; 1 bytes @ 0x27
   645  00C7                     	ds	1
   646  00C8                     main@tab:
   647                           
   648                           ; 20 bytes @ 0x28
   649  00C8                     	ds	23
   650  00DF                     main@Vs:
   651                           
   652                           ; 4 bytes @ 0x3F
   653  00DF                     	ds	4
   654  00E3                     main@sensor1:
   655                           
   656                           ; 1 bytes @ 0x43
   657  00E3                     	ds	1
   658                           
   659                           	psect	cstackCOMMON
   660  0071                     __pcstackCOMMON:
   661  0071                     ?_isdigit:
   662  0071                     ?_PORT_Init:	
   663                           ; 1 bit 
   664                           
   665  0071                     ?_TIMER_init_timer1:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0071                     ?_PORT_Select_Mux0:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0071                     ?_PORT_Blink_LED:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0071                     ?_ADC_GetValue:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0071                     ?_PORT_putString:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0071                     ?_PORT_putchar:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0071                     ?_PORT_Choose_Mux:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0071                     ?_PORT_Start_ADC:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0071                     ?_PORT_Get_Value_Adc:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0071                     ?_main:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0071                     ?_PORT_Init_Serial:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0071                     ?_isr:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0071                     ??_isr:	
   702                           ; 1 bytes @ 0x0
   703                           
   704                           
   705                           ; 1 bytes @ 0x0
   706  0071                     	ds	2
   707  0073                     ?___fleq:
   708  0073                     ?___flge:	
   709                           ; 1 bit 
   710                           
   711  0073                     ??_PORT_Init:	
   712                           ; 1 bit 
   713                           
   714  0073                     ??_TIMER_init_timer1:	
   715                           ; 1 bytes @ 0x2
   716                           
   717  0073                     ??_PORT_Select_Mux0:	
   718                           ; 1 bytes @ 0x2
   719                           
   720  0073                     ??_PORT_Blink_LED:	
   721                           ; 1 bytes @ 0x2
   722                           
   723  0073                     ??_PORT_putchar:	
   724                           ; 1 bytes @ 0x2
   725                           
   726  0073                     ??_PORT_Choose_Mux:	
   727                           ; 1 bytes @ 0x2
   728                           
   729  0073                     ??_PORT_Start_ADC:	
   730                           ; 1 bytes @ 0x2
   731                           
   732  0073                     ??_PORT_Get_Value_Adc:	
   733                           ; 1 bytes @ 0x2
   734                           
   735  0073                     ??_isdigit:	
   736                           ; 1 bytes @ 0x2
   737                           
   738  0073                     ??_PORT_Init_Serial:	
   739                           ; 1 bytes @ 0x2
   740                           
   741  0073                     ?__Umul8_16:	
   742                           ; 1 bytes @ 0x2
   743                           
   744  0073                     ?___wmul:	
   745                           ; 2 bytes @ 0x2
   746                           
   747  0073                     ?___awmod:	
   748                           ; 2 bytes @ 0x2
   749                           
   750  0073                     ?___lwmod:	
   751                           ; 2 bytes @ 0x2
   752                           
   753  0073                     ?__tdiv_to_l_:	
   754                           ; 2 bytes @ 0x2
   755                           
   756  0073                     ?__div_to_l_:	
   757                           ; 4 bytes @ 0x2
   758                           
   759  0073                     ?___lldiv:	
   760                           ; 4 bytes @ 0x2
   761                           
   762  0073                     ?___flneg:	
   763                           ; 4 bytes @ 0x2
   764                           
   765  0073                     ?___llmod:	
   766                           ; 4 bytes @ 0x2
   767                           
   768  0073                     ?___xxtofl:	
   769                           ; 4 bytes @ 0x2
   770                           
   771  0073                     PORT_Choose_Mux@_value:	
   772                           ; 4 bytes @ 0x2
   773                           
   774  0073                     PORT_putchar@c:	
   775                           ; 1 bytes @ 0x2
   776                           
   777  0073                     __Umul8_16@multiplicand:	
   778                           ; 1 bytes @ 0x2
   779                           
   780  0073                     _isdigit$600:	
   781                           ; 1 bytes @ 0x2
   782                           
   783  0073                     ___wmul@multiplier:	
   784                           ; 1 bytes @ 0x2
   785                           
   786  0073                     ___awmod@divisor:	
   787                           ; 2 bytes @ 0x2
   788                           
   789  0073                     ___lwmod@divisor:	
   790                           ; 2 bytes @ 0x2
   791                           
   792  0073                     ___lldiv@divisor:	
   793                           ; 2 bytes @ 0x2
   794                           
   795  0073                     __div_to_l_@f1:	
   796                           ; 4 bytes @ 0x2
   797                           
   798  0073                     ___fleq@ff1:	
   799                           ; 4 bytes @ 0x2
   800                           
   801  0073                     ___flge@ff1:	
   802                           ; 4 bytes @ 0x2
   803                           
   804  0073                     ___flneg@f1:	
   805                           ; 4 bytes @ 0x2
   806                           
   807  0073                     __tdiv_to_l_@f1:	
   808                           ; 4 bytes @ 0x2
   809                           
   810  0073                     ___llmod@divisor:	
   811                           ; 4 bytes @ 0x2
   812                           
   813  0073                     ___xxtofl@val:	
   814                           ; 4 bytes @ 0x2
   815                           
   816                           
   817                           ; 4 bytes @ 0x2
   818  0073                     	ds	1
   819  0074                     ??_ADC_GetValue:
   820  0074                     ??_PORT_putString:	
   821                           ; 1 bytes @ 0x3
   822                           
   823  0074                     ADC_GetValue@channel:	
   824                           ; 1 bytes @ 0x3
   825                           
   826  0074                     isdigit@c:	
   827                           ; 1 bytes @ 0x3
   828                           
   829                           
   830                           ; 1 bytes @ 0x3
   831  0074                     	ds	1
   832  0075                     ??__Umul8_16:
   833  0075                     PORT_putString@i:	
   834                           ; 1 bytes @ 0x4
   835                           
   836  0075                     ___wmul@multiplicand:	
   837                           ; 2 bytes @ 0x4
   838                           
   839  0075                     ___awmod@dividend:	
   840                           ; 2 bytes @ 0x4
   841                           
   842  0075                     ___lwmod@dividend:	
   843                           ; 2 bytes @ 0x4
   844                           
   845                           
   846                           ; 2 bytes @ 0x4
   847  0075                     	ds	2
   848  0077                     ??___wmul:
   849  0077                     ??___awmod:	
   850                           ; 1 bytes @ 0x6
   851                           
   852  0077                     ??___flneg:	
   853                           ; 1 bytes @ 0x6
   854                           
   855  0077                     ??___lwmod:	
   856                           ; 1 bytes @ 0x6
   857                           
   858  0077                     ??___xxtofl:	
   859                           ; 1 bytes @ 0x6
   860                           
   861  0077                     PORT_putString@chaine:	
   862                           ; 1 bytes @ 0x6
   863                           
   864  0077                     ___awmod@counter:	
   865                           ; 1 bytes @ 0x6
   866                           
   867  0077                     ___lwmod@counter:	
   868                           ; 1 bytes @ 0x6
   869                           
   870  0077                     ___wmul@product:	
   871                           ; 1 bytes @ 0x6
   872                           
   873  0077                     __Umul8_16@product:	
   874                           ; 2 bytes @ 0x6
   875                           
   876  0077                     ___lldiv@dividend:	
   877                           ; 2 bytes @ 0x6
   878                           
   879  0077                     __div_to_l_@f2:	
   880                           ; 4 bytes @ 0x6
   881                           
   882  0077                     ___fleq@ff2:	
   883                           ; 4 bytes @ 0x6
   884                           
   885  0077                     ___flge@ff2:	
   886                           ; 4 bytes @ 0x6
   887                           
   888  0077                     __tdiv_to_l_@f2:	
   889                           ; 4 bytes @ 0x6
   890                           
   891  0077                     ___llmod@dividend:	
   892                           ; 4 bytes @ 0x6
   893                           
   894                           
   895                           ; 4 bytes @ 0x6
   896  0077                     	ds	1
   897  0078                     ?___lwdiv:
   898  0078                     ___awmod@sign:	
   899                           ; 2 bytes @ 0x7
   900                           
   901  0078                     ___lwdiv@divisor:	
   902                           ; 1 bytes @ 0x7
   903                           
   904                           
   905                           ; 2 bytes @ 0x7
   906  0078                     	ds	1
   907  0079                     ??___awdiv:
   908  0079                     __Umul8_16@word_mpld:	
   909                           ; 1 bytes @ 0x8
   910                           
   911                           
   912                           ; 2 bytes @ 0x8
   913  0079                     	ds	1
   914  007A                     ___lwdiv@dividend:
   915                           
   916                           ; 2 bytes @ 0x9
   917  007A                     	ds	1
   918  007B                     ??__div_to_l_:
   919  007B                     ??___lldiv:	
   920                           ; 1 bytes @ 0xA
   921                           
   922  007B                     ??___llmod:	
   923                           ; 1 bytes @ 0xA
   924                           
   925  007B                     __Umul8_16@multiplier:	
   926                           ; 1 bytes @ 0xA
   927                           
   928                           
   929                           ; 1 bytes @ 0xA
   930  007B                     	ds	1
   931  007C                     ??_main:
   932  007C                     ??___lwdiv:	
   933                           ; 1 bytes @ 0xB
   934                           
   935  007C                     ??___flsub:	
   936                           ; 1 bytes @ 0xB
   937                           
   938                           
   939                           	psect	cstackBANK0
   940  0020                     __pcstackBANK0:	
   941                           ; 1 bytes @ 0xB
   942                           
   943  0020                     ??__tdiv_to_l_:
   944  0020                     ??___fleq:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0020                     ??___flge:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0020                     ?___awdiv:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0020                     ___llmod@counter:	
   954                           ; 2 bytes @ 0x0
   955                           
   956  0020                     ___xxtofl@sign:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0020                     ___awdiv@divisor:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0020                     ___lwdiv@quotient:	
   963                           ; 2 bytes @ 0x0
   964                           
   965  0020                     ___lldiv@quotient:	
   966                           ; 2 bytes @ 0x0
   967                           
   968  0020                     __div_to_l_@quot:	
   969                           ; 4 bytes @ 0x0
   970                           
   971                           
   972                           ; 4 bytes @ 0x0
   973  0020                     	ds	1
   974  0021                     ___xxtofl@exp:
   975                           
   976                           ; 1 bytes @ 0x1
   977  0021                     	ds	1
   978  0022                     ___lwdiv@counter:
   979  0022                     ___awdiv@dividend:	
   980                           ; 1 bytes @ 0x2
   981                           
   982  0022                     ___xxtofl@arg:	
   983                           ; 2 bytes @ 0x2
   984                           
   985                           
   986                           ; 4 bytes @ 0x2
   987  0022                     	ds	1
   988  0023                     __tdiv_to_l_@quot:
   989                           
   990                           ; 4 bytes @ 0x3
   991  0023                     	ds	1
   992  0024                     ___lldiv@counter:
   993  0024                     ___awdiv@counter:	
   994                           ; 1 bytes @ 0x4
   995                           
   996  0024                     __div_to_l_@cntr:	
   997                           ; 1 bytes @ 0x4
   998                           
   999                           
  1000                           ; 1 bytes @ 0x4
  1001  0024                     	ds	1
  1002  0025                     ___awdiv@sign:
  1003  0025                     __div_to_l_@exp1:	
  1004                           ; 1 bytes @ 0x5
  1005                           
  1006                           
  1007                           ; 1 bytes @ 0x5
  1008  0025                     	ds	1
  1009  0026                     ___awdiv@quotient:
  1010                           
  1011                           ; 2 bytes @ 0x6
  1012  0026                     	ds	1
  1013  0027                     __tdiv_to_l_@cntr:
  1014                           
  1015                           ; 1 bytes @ 0x7
  1016  0027                     	ds	1
  1017  0028                     ?___flmul:
  1018  0028                     __tdiv_to_l_@exp1:	
  1019                           ; 4 bytes @ 0x8
  1020                           
  1021  0028                     ___flmul@b:	
  1022                           ; 1 bytes @ 0x8
  1023                           
  1024                           
  1025                           ; 4 bytes @ 0x8
  1026  0028                     	ds	4
  1027  002C                     ___flmul@a:
  1028                           
  1029                           ; 4 bytes @ 0xC
  1030  002C                     	ds	4
  1031  0030                     ??___flmul:
  1032                           
  1033                           ; 1 bytes @ 0x10
  1034  0030                     	ds	5
  1035  0035                     ___flmul@sign:
  1036                           
  1037                           ; 1 bytes @ 0x15
  1038  0035                     	ds	1
  1039  0036                     ___flmul@grs:
  1040                           
  1041                           ; 4 bytes @ 0x16
  1042  0036                     	ds	4
  1043  003A                     ___flmul@aexp:
  1044                           
  1045                           ; 1 bytes @ 0x1A
  1046  003A                     	ds	1
  1047  003B                     ___flmul@bexp:
  1048                           
  1049                           ; 1 bytes @ 0x1B
  1050  003B                     	ds	1
  1051  003C                     ___flmul@prod:
  1052                           
  1053                           ; 4 bytes @ 0x1C
  1054  003C                     	ds	4
  1055  0040                     ___flmul@temp:
  1056                           
  1057                           ; 2 bytes @ 0x20
  1058  0040                     	ds	2
  1059  0042                     ?_Voltage_Value:
  1060  0042                     ?_fround:	
  1061                           ; 4 bytes @ 0x22
  1062                           
  1063  0042                     ?_scale:	
  1064                           ; 4 bytes @ 0x22
  1065                           
  1066                           
  1067                           ; 4 bytes @ 0x22
  1068  0042                     	ds	4
  1069  0046                     ??_Voltage_Value:
  1070  0046                     ??_fround:	
  1071                           ; 1 bytes @ 0x26
  1072                           
  1073  0046                     ??_scale:	
  1074                           ; 1 bytes @ 0x26
  1075                           
  1076                           
  1077                           ; 1 bytes @ 0x26
  1078  0046                     	ds	4
  1079  004A                     Voltage_Value@sensor:
  1080                           
  1081                           ; 1 bytes @ 0x2A
  1082  004A                     	ds	1
  1083  004B                     Voltage_Value@fSensor:
  1084                           
  1085                           ; 4 bytes @ 0x2B
  1086  004B                     	ds	2
  1087  004D                     _fround$732:
  1088                           
  1089                           ; 4 bytes @ 0x2D
  1090  004D                     	ds	3
  1091  0050                     _scale$733:
  1092                           
  1093                           ; 4 bytes @ 0x30
  1094  0050                     	ds	1
  1095  0051                     _fround$731:
  1096                           
  1097                           ; 4 bytes @ 0x31
  1098  0051                     	ds	3
  1099  0054                     scale@scl:
  1100                           
  1101                           ; 1 bytes @ 0x34
  1102  0054                     	ds	1
  1103  0055                     ?___fltol:
  1104  0055                     fround@prec:	
  1105                           ; 4 bytes @ 0x35
  1106                           
  1107  0055                     ___fltol@f1:	
  1108                           ; 1 bytes @ 0x35
  1109                           
  1110                           
  1111                           ; 4 bytes @ 0x35
  1112  0055                     	ds	1
  1113  0056                     ?___fladd:
  1114  0056                     ___fladd@b:	
  1115                           ; 4 bytes @ 0x36
  1116                           
  1117                           
  1118                           ; 4 bytes @ 0x36
  1119  0056                     	ds	3
  1120  0059                     ??___fltol:
  1121                           
  1122                           ; 1 bytes @ 0x39
  1123  0059                     	ds	1
  1124  005A                     ___fladd@a:
  1125                           
  1126                           ; 4 bytes @ 0x3A
  1127  005A                     	ds	3
  1128  005D                     ___fltol@sign1:
  1129                           
  1130                           ; 1 bytes @ 0x3D
  1131  005D                     	ds	1
  1132  005E                     ??___fladd:
  1133  005E                     ___fltol@exp1:	
  1134                           ; 1 bytes @ 0x3E
  1135                           
  1136                           
  1137                           ; 1 bytes @ 0x3E
  1138  005E                     	ds	8
  1139  0066                     ___fladd@signs:
  1140                           
  1141                           ; 1 bytes @ 0x46
  1142  0066                     	ds	1
  1143  0067                     ___fladd@aexp:
  1144                           
  1145                           ; 1 bytes @ 0x47
  1146  0067                     	ds	1
  1147  0068                     ___fladd@bexp:
  1148                           
  1149                           ; 1 bytes @ 0x48
  1150  0068                     	ds	1
  1151  0069                     ___fladd@grs:
  1152                           
  1153                           ; 1 bytes @ 0x49
  1154  0069                     	ds	1
  1155  006A                     ?_sprintf:
  1156  006A                     sprintf@f:	
  1157                           ; 2 bytes @ 0x4A
  1158                           
  1159                           
  1160                           ; 1 bytes @ 0x4A
  1161  006A                     	ds	5
  1162                           
  1163                           	psect	maintext
  1164  10C9                     __pmaintext:	
  1165 ;;
  1166 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1167 ;;
  1168 ;; *************** function _main *****************
  1169 ;; Defined at:
  1170 ;;		line 22 in file "main.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  tab            20   40[BANK1 ] unsigned char [20]
  1175 ;;  Vs              4   63[BANK1 ] float 
  1176 ;;  F               4    0        float 
  1177 ;;  Rc              4    0        float 
  1178 ;;  sensor1         1   67[BANK1 ] unsigned char 
  1179 ;;  sensor4         1    0        unsigned char 
  1180 ;;  sensor3         1    0        unsigned char 
  1181 ;;  sensor2         1    0        unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : B00/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         0       0       0       0       0
  1192 ;;      Locals:         0       0      28       0       0
  1193 ;;      Temps:          0       0       0       0       0
  1194 ;;      Totals:         0       0      28       0       0
  1195 ;;Total ram usage:       28 bytes
  1196 ;; Hardware stack levels required when called:    5
  1197 ;; This function calls:
  1198 ;;		_ADC_GetValue
  1199 ;;		_PORT_Blink_LED
  1200 ;;		_PORT_Init
  1201 ;;		_PORT_Select_Mux0
  1202 ;;		_PORT_putString
  1203 ;;		_TIMER_init_timer1
  1204 ;;		_Voltage_Value
  1205 ;;		_sprintf
  1206 ;; This function is called by:
  1207 ;;		Startup code after reset
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           
  1212                           ;psect for function _main
  1213  10C9                     _main:
  1214  10C9                     l3444:	
  1215                           ;incstack = 0
  1216                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1217                           
  1218                           
  1219                           ;main.c: 24:     unsigned char sensor1, sensor2, sensor3, sensor4;;main.c: 26:     char 
      +                          tab[20];;main.c: 28:     float Rc,Vs,F;;main.c: 30:     PORT_Init();
  1220  10C9  160A  158A  242F  160A  118A  	fcall	_PORT_Init
  1221                           
  1222                           ;main.c: 31:     TIMER_init_timer1();
  1223  10CE  160A  158A  2373  160A  118A  	fcall	_TIMER_init_timer1
  1224  10D3                     l3446:
  1225                           
  1226                           ;main.c: 33:     PORT_Select_Mux0();
  1227  10D3  160A  158A  2320  160A  118A  	fcall	_PORT_Select_Mux0
  1228  10D8                     l3448:
  1229  10D8  1683               	bsf	3,5	;RP0=1, select bank1
  1230  10D9  1303               	bcf	3,6	;RP1=0, select bank1
  1231  10DA  0864               	movf	_Fincompt1^(0+128),w
  1232  10DB  1D03               	btfss	3,2
  1233  10DC  28DE               	goto	u5581
  1234  10DD  28DF               	goto	u5580
  1235  10DE                     u5581:
  1236  10DE  28D8               	goto	l3448
  1237  10DF                     u5580:
  1238  10DF                     l3450:
  1239                           
  1240                           ;main.c: 38:         Fincompt1 = 0;
  1241  10DF  01E4               	clrf	_Fincompt1^(0+128)
  1242  10E0                     l3452:
  1243                           
  1244                           ;main.c: 39:         PORT_Blink_LED();
  1245  10E0  160A  158A  233F  160A  118A  	fcall	_PORT_Blink_LED
  1246  10E5                     l3454:
  1247                           
  1248                           ;main.c: 41:         sensor1 = ADC_GetValue(0);
  1249  10E5  3000               	movlw	0
  1250  10E6  160A  158A  2361  160A  118A  	fcall	_ADC_GetValue
  1251  10EB  00FF               	movwf	btemp+1
  1252  10EC  087F               	movf	btemp+1,w
  1253  10ED  1683               	bsf	3,5	;RP0=1, select bank1
  1254  10EE  1303               	bcf	3,6	;RP1=0, select bank1
  1255  10EF  00E3               	movwf	main@sensor1^(0+128)
  1256  10F0                     l3456:
  1257  10F0  3001               	movlw	1
  1258  10F1  160A  158A  2361  160A  118A  	fcall	_ADC_GetValue
  1259  10F6                     l3458:
  1260  10F6  3002               	movlw	2
  1261  10F7  160A  158A  2361  160A  118A  	fcall	_ADC_GetValue
  1262  10FC                     l3460:
  1263  10FC  3003               	movlw	3
  1264  10FD  160A  158A  2361  160A  118A  	fcall	_ADC_GetValue
  1265  1102                     l3462:
  1266                           
  1267                           ;main.c: 54:         Vs = Voltage_Value(sensor1);
  1268  1102  1683               	bsf	3,5	;RP0=1, select bank1
  1269  1103  1303               	bcf	3,6	;RP1=0, select bank1
  1270  1104  0863               	movf	main@sensor1^(0+128),w
  1271  1105  160A  158A  24E8  160A  118A  	fcall	_Voltage_Value
  1272  110A  1283               	bcf	3,5	;RP0=0, select bank0
  1273  110B  1303               	bcf	3,6	;RP1=0, select bank0
  1274  110C  0845               	movf	?_Voltage_Value+3,w
  1275  110D  1683               	bsf	3,5	;RP0=1, select bank1
  1276  110E  1303               	bcf	3,6	;RP1=0, select bank1
  1277  110F  00E2               	movwf	(main@Vs+3)^(0+128)
  1278  1110  1283               	bcf	3,5	;RP0=0, select bank0
  1279  1111  1303               	bcf	3,6	;RP1=0, select bank0
  1280  1112  0844               	movf	?_Voltage_Value+2,w
  1281  1113  1683               	bsf	3,5	;RP0=1, select bank1
  1282  1114  1303               	bcf	3,6	;RP1=0, select bank1
  1283  1115  00E1               	movwf	(main@Vs+2)^(0+128)
  1284  1116  1283               	bcf	3,5	;RP0=0, select bank0
  1285  1117  1303               	bcf	3,6	;RP1=0, select bank0
  1286  1118  0843               	movf	?_Voltage_Value+1,w
  1287  1119  1683               	bsf	3,5	;RP0=1, select bank1
  1288  111A  1303               	bcf	3,6	;RP1=0, select bank1
  1289  111B  00E0               	movwf	(main@Vs+1)^(0+128)
  1290  111C  1283               	bcf	3,5	;RP0=0, select bank0
  1291  111D  1303               	bcf	3,6	;RP1=0, select bank0
  1292  111E  0842               	movf	?_Voltage_Value,w
  1293  111F  1683               	bsf	3,5	;RP0=1, select bank1
  1294  1120  1303               	bcf	3,6	;RP1=0, select bank1
  1295  1121  00DF               	movwf	main@Vs^(0+128)
  1296  1122                     l3464:
  1297                           
  1298                           ;main.c: 56:         sprintf(tab,"tension Capteur %2.2f V \n", Vs);
  1299  1122  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1300  1123  00FF               	movwf	btemp+1
  1301  1124  087F               	movf	btemp+1,w
  1302  1125  1283               	bcf	3,5	;RP0=0, select bank0
  1303  1126  1303               	bcf	3,6	;RP1=0, select bank0
  1304  1127  00EA               	movwf	sprintf@f
  1305  1128  1683               	bsf	3,5	;RP0=1, select bank1
  1306  1129  1303               	bcf	3,6	;RP1=0, select bank1
  1307  112A  0862               	movf	(main@Vs+3)^(0+128),w
  1308  112B  1283               	bcf	3,5	;RP0=0, select bank0
  1309  112C  1303               	bcf	3,6	;RP1=0, select bank0
  1310  112D  00EE               	movwf	?_sprintf+4
  1311  112E  1683               	bsf	3,5	;RP0=1, select bank1
  1312  112F  1303               	bcf	3,6	;RP1=0, select bank1
  1313  1130  0861               	movf	(main@Vs+2)^(0+128),w
  1314  1131  1283               	bcf	3,5	;RP0=0, select bank0
  1315  1132  1303               	bcf	3,6	;RP1=0, select bank0
  1316  1133  00ED               	movwf	?_sprintf+3
  1317  1134  1683               	bsf	3,5	;RP0=1, select bank1
  1318  1135  1303               	bcf	3,6	;RP1=0, select bank1
  1319  1136  0860               	movf	(main@Vs+1)^(0+128),w
  1320  1137  1283               	bcf	3,5	;RP0=0, select bank0
  1321  1138  1303               	bcf	3,6	;RP1=0, select bank0
  1322  1139  00EC               	movwf	?_sprintf+2
  1323  113A  1683               	bsf	3,5	;RP0=1, select bank1
  1324  113B  1303               	bcf	3,6	;RP1=0, select bank1
  1325  113C  085F               	movf	main@Vs^(0+128),w
  1326  113D  1283               	bcf	3,5	;RP0=0, select bank0
  1327  113E  1303               	bcf	3,6	;RP1=0, select bank0
  1328  113F  00EB               	movwf	?_sprintf+1
  1329  1140  30C8               	movlw	(low (main@tab| 0))& (0+255)
  1330  1141  120A  118A  2060  160A  118A  	fcall	_sprintf
  1331  1146                     l3466:
  1332                           
  1333                           ;main.c: 57:         PORT_putString(tab);
  1334  1146  30C8               	movlw	(low (main@tab| 0))& (0+255)
  1335  1147  160A  158A  2397  160A  118A  	fcall	_PORT_putString
  1336  114C  28D8               	goto	l3448
  1337  114D  120A  118A  280C   	ljmp	start
  1338  1150                     __end_of_main:
  1339                           
  1340                           	psect	text1
  1341  0060                     __ptext1:	
  1342 ;; *************** function _sprintf *****************
  1343 ;; Defined at:
  1344 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  sp              1    wreg     PTR unsigned char 
  1347 ;;		 -> main@tab(20), 
  1348 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1349 ;;		 -> STR_1(26), 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  sp              1   36[BANK1 ] PTR unsigned char 
  1352 ;;		 -> main@tab(20), 
  1353 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  1354 ;;  tmpval          4   26[BANK1 ] struct .
  1355 ;;  val             4   18[BANK1 ] unsigned long 
  1356 ;;  prec            2   37[BANK1 ] int 
  1357 ;;  eexp            2   30[BANK1 ] int 
  1358 ;;  width           2   24[BANK1 ] int 
  1359 ;;  flag            2   22[BANK1 ] unsigned short 
  1360 ;;  cp              2    0        PTR const unsigned char 
  1361 ;;  len             2    0        unsigned int 
  1362 ;;  c               1   39[BANK1 ] unsigned char 
  1363 ;;  ap              1   17[BANK1 ] PTR void [1]
  1364 ;;		 -> ?_sprintf(2), 
  1365 ;;  d               1    0        unsigned char 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  2   74[BANK0 ] int 
  1368 ;; Registers used:
  1369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       5       0       0       0
  1376 ;;      Locals:         0       0      27       0       0
  1377 ;;      Temps:          0       0       5       0       0
  1378 ;;      Totals:         0       5      32       0       0
  1379 ;;Total ram usage:       37 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    4
  1382 ;; This function calls:
  1383 ;;		___awdiv
  1384 ;;		___fladd
  1385 ;;		___fleq
  1386 ;;		___flge
  1387 ;;		___flmul
  1388 ;;		___flneg
  1389 ;;		___flsub
  1390 ;;		___fltol
  1391 ;;		___lldiv
  1392 ;;		___llmod
  1393 ;;		___wmul
  1394 ;;		___xxtofl
  1395 ;;		__div_to_l_
  1396 ;;		__tdiv_to_l_
  1397 ;;		_fround
  1398 ;;		_isdigit
  1399 ;;		_scale
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           
  1406                           ;psect for function _sprintf
  1407  0060                     _sprintf:
  1408                           
  1409                           ;incstack = 0
  1410                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1411                           ;sprintf@sp stored from wreg
  1412  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1413  0061  1303               	bcf	3,6	;RP1=0, select bank1
  1414  0062  00C4               	movwf	sprintf@sp^(0+128)
  1415  0063                     l3170:
  1416                           
  1417                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1418  0063  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1419  0064  00FF               	movwf	btemp+1
  1420  0065  087F               	movf	btemp+1,w
  1421  0066  00B1               	movwf	sprintf@ap^(0+128)
  1422  0067                     L1:
  1423                           
  1424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1425  0067  120A  118A  2FDC   	goto	l3424
  1426  006A                     l3172:
  1427                           
  1428                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1429  006A  3025               	movlw	37
  1430  006B  0647               	xorwf	sprintf@c^(0+128),w
  1431  006C  1903               	btfsc	3,2
  1432  006D  286F               	goto	u5101
  1433  006E  2870               	goto	u5100
  1434  006F                     u5101:
  1435  006F  287C               	goto	l3178
  1436  0070                     u5100:
  1437  0070                     l3174:
  1438                           
  1439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1440  0070  0847               	movf	sprintf@c^(0+128),w
  1441  0071  00FF               	movwf	btemp+1
  1442  0072  0844               	movf	sprintf@sp^(0+128),w
  1443  0073  0084               	movwf	4
  1444  0074  087F               	movf	btemp+1,w
  1445  0075  1383               	bcf	3,7	;select IRP bank0
  1446  0076  0080               	movwf	0
  1447  0077                     l3176:
  1448  0077  3001               	movlw	1
  1449  0078  00FF               	movwf	btemp+1
  1450  0079  087F               	movf	btemp+1,w
  1451  007A  07C4               	addwf	sprintf@sp^(0+128),f
  1452                           
  1453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 559:    continue;
  1454  007B  2867               	goto	L1
  1455  007C                     l3178:
  1456                           
  1457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1458  007C  01B8               	clrf	sprintf@width^(0+128)
  1459  007D  01B9               	clrf	(sprintf@width+1)^(0+128)
  1460                           
  1461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1462  007E  01B6               	clrf	sprintf@flag^(0+128)
  1463  007F  01B7               	clrf	(sprintf@flag+1)^(0+128)
  1464  0080                     l3180:
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1467  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0082  086A               	movf	sprintf@f,w
  1470  0083  0084               	movwf	4
  1471  0084  160A  118A  2000  120A  118A  	fcall	stringdir
  1472  0089  160A  158A  2385  120A  118A  	fcall	_isdigit
  1473  008E  1C03               	btfss	3,0
  1474  008F  2891               	goto	u5111
  1475  0090  2892               	goto	u5110
  1476  0091                     u5111:
  1477  0091  28D8               	goto	l3192
  1478  0092                     u5110:
  1479  0092                     l3182:
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1482  0092  1683               	bsf	3,5	;RP0=1, select bank1
  1483  0093  1303               	bcf	3,6	;RP1=0, select bank1
  1484  0094  01B8               	clrf	sprintf@width^(0+128)
  1485  0095  01B9               	clrf	(sprintf@width+1)^(0+128)
  1486  0096                     l3184:
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1489  0096  300A               	movlw	10
  1490  0097  00F3               	movwf	___wmul@multiplier
  1491  0098  3000               	movlw	0
  1492  0099  00F4               	movwf	___wmul@multiplier+1
  1493  009A  1683               	bsf	3,5	;RP0=1, select bank1
  1494  009B  1303               	bcf	3,6	;RP1=0, select bank1
  1495  009C  0839               	movf	(sprintf@width+1)^(0+128),w
  1496  009D  00F6               	movwf	___wmul@multiplicand+1
  1497  009E  0838               	movf	sprintf@width^(0+128),w
  1498  009F  00F5               	movwf	___wmul@multiplicand
  1499  00A0  160A  158A  23B8  120A  118A  	fcall	___wmul
  1500  00A5  0874               	movf	?___wmul+1,w
  1501  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1502  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1503  00A8  00B9               	movwf	(sprintf@width+1)^(0+128)
  1504  00A9  0873               	movf	?___wmul,w
  1505  00AA  00B8               	movwf	sprintf@width^(0+128)
  1506  00AB                     l3186:
  1507                           
  1508                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1509  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1510  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1511  00AD  086A               	movf	sprintf@f,w
  1512  00AE  0084               	movwf	4
  1513  00AF  160A  118A  2000  120A  118A  	fcall	stringdir
  1514  00B4  3ED0               	addlw	208
  1515  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1516  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  1517  00B7  00A8               	movwf	??_sprintf^(0+128)
  1518  00B8  30FF               	movlw	255
  1519  00B9  1803               	skipnc
  1520  00BA  3000               	movlw	0
  1521  00BB  00A9               	movwf	(??_sprintf^(0+128)+1)
  1522  00BC  0828               	movf	??_sprintf^(0+128),w
  1523  00BD  07B8               	addwf	sprintf@width^(0+128),f
  1524  00BE  1803               	skipnc
  1525  00BF  0AB9               	incf	(sprintf@width+1)^(0+128),f
  1526  00C0  0829               	movf	(??_sprintf+1)^(0+128),w
  1527  00C1  07B9               	addwf	(sprintf@width+1)^(0+128),f
  1528  00C2                     l3188:
  1529  00C2  3001               	movlw	1
  1530  00C3  00FF               	movwf	btemp+1
  1531  00C4  087F               	movf	btemp+1,w
  1532  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1533  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1534  00C7  07EA               	addwf	sprintf@f,f
  1535  00C8                     l3190:
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1538  00C8  086A               	movf	sprintf@f,w
  1539  00C9  0084               	movwf	4
  1540  00CA  160A  118A  2000  120A  118A  	fcall	stringdir
  1541  00CF  160A  158A  2385  120A  118A  	fcall	_isdigit
  1542  00D4  1803               	btfsc	3,0
  1543  00D5  28D7               	goto	u5121
  1544  00D6  28D8               	goto	u5120
  1545  00D7                     u5121:
  1546  00D7  2896               	goto	l3184
  1547  00D8                     u5120:
  1548  00D8                     l3192:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1551  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1552  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1553  00DA  086A               	movf	sprintf@f,w
  1554  00DB  0084               	movwf	4
  1555  00DC  160A  118A  2000  120A  118A  	fcall	stringdir
  1556  00E1  3A2E               	xorlw	46
  1557  00E2  1D03               	skipz
  1558  00E3  28E5               	goto	u5131
  1559  00E4  28E6               	goto	u5130
  1560  00E5                     u5131:
  1561  00E5  2938               	goto	l3208
  1562  00E6                     u5130:
  1563  00E6                     l3194:
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1566  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  1567  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  1568  00E8  1737               	bsf	(sprintf@flag^(0+128)+1),6
  1569  00E9                     l3196:
  1570                           
  1571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 630:    f++;
  1572  00E9  3001               	movlw	1
  1573  00EA  00FF               	movwf	btemp+1
  1574  00EB  087F               	movf	btemp+1,w
  1575  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1576  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1577  00EE  07EA               	addwf	sprintf@f,f
  1578  00EF                     l3198:
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1581  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1582  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1583  00F1  01C5               	clrf	sprintf@prec^(0+128)
  1584  00F2  01C6               	clrf	(sprintf@prec+1)^(0+128)
  1585                           
  1586                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1587  00F3  2926               	goto	l3206
  1588  00F4                     l3200:
  1589                           
  1590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1591  00F4  300A               	movlw	10
  1592  00F5  00F3               	movwf	___wmul@multiplier
  1593  00F6  3000               	movlw	0
  1594  00F7  00F4               	movwf	___wmul@multiplier+1
  1595  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  1596  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  1597  00FA  0846               	movf	(sprintf@prec+1)^(0+128),w
  1598  00FB  00F6               	movwf	___wmul@multiplicand+1
  1599  00FC  0845               	movf	sprintf@prec^(0+128),w
  1600  00FD  00F5               	movwf	___wmul@multiplicand
  1601  00FE  160A  158A  23B8  120A  118A  	fcall	___wmul
  1602  0103  0874               	movf	?___wmul+1,w
  1603  0104  1683               	bsf	3,5	;RP0=1, select bank1
  1604  0105  1303               	bcf	3,6	;RP1=0, select bank1
  1605  0106  00C6               	movwf	(sprintf@prec+1)^(0+128)
  1606  0107  0873               	movf	?___wmul,w
  1607  0108  00C5               	movwf	sprintf@prec^(0+128)
  1608  0109                     l3202:
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1611  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1612  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1613  010B  086A               	movf	sprintf@f,w
  1614  010C  0084               	movwf	4
  1615  010D  160A  118A  2000  120A  118A  	fcall	stringdir
  1616  0112  3ED0               	addlw	208
  1617  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1618  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1619  0115  00A8               	movwf	??_sprintf^(0+128)
  1620  0116  30FF               	movlw	255
  1621  0117  1803               	skipnc
  1622  0118  3000               	movlw	0
  1623  0119  00A9               	movwf	(??_sprintf^(0+128)+1)
  1624  011A  0828               	movf	??_sprintf^(0+128),w
  1625  011B  07C5               	addwf	sprintf@prec^(0+128),f
  1626  011C  1803               	skipnc
  1627  011D  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  1628  011E  0829               	movf	(??_sprintf+1)^(0+128),w
  1629  011F  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  1630  0120                     l3204:
  1631  0120  3001               	movlw	1
  1632  0121  00FF               	movwf	btemp+1
  1633  0122  087F               	movf	btemp+1,w
  1634  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1635  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1636  0125  07EA               	addwf	sprintf@f,f
  1637  0126                     l3206:
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1640  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0127  086A               	movf	sprintf@f,w
  1642  0128  0084               	movwf	4
  1643  0129  160A  118A  2000  120A  118A  	fcall	stringdir
  1644  012E  160A  158A  2385  120A  118A  	fcall	_isdigit
  1645  0133  1803               	btfsc	3,0
  1646  0134  2936               	goto	u5141
  1647  0135  2937               	goto	u5140
  1648  0136                     u5141:
  1649  0136  28F4               	goto	l3200
  1650  0137                     u5140:
  1651  0137  2940               	goto	l3214
  1652  0138                     l3208:
  1653                           
  1654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1655  0138  1683               	bsf	3,5	;RP0=1, select bank1
  1656  0139  1303               	bcf	3,6	;RP1=0, select bank1
  1657  013A  01C5               	clrf	sprintf@prec^(0+128)
  1658  013B  01C6               	clrf	(sprintf@prec+1)^(0+128)
  1659  013C                     l3210:
  1660                           
  1661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1662  013C  1637               	bsf	(sprintf@flag^(0+128)+1),4
  1663  013D  2940               	goto	l3214
  1664  013E                     l220:	
  1665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1666                           
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1669  013E  1537               	bsf	(sprintf@flag^(0+128)+1),2
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 690:    break;
  1672  013F  295E               	goto	l3216
  1673  0140                     l3214:
  1674  0140  3001               	movlw	1
  1675  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0143  07EA               	addwf	sprintf@f,f
  1678  0144  30FF               	movlw	-1
  1679  0145  076A               	addwf	sprintf@f,w
  1680  0146  0084               	movwf	4
  1681  0147  160A  118A  2000  120A  118A  	fcall	stringdir
  1682  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1683  014D  1303               	bcf	3,6	;RP1=0, select bank1
  1684  014E  00C7               	movwf	sprintf@c^(0+128)
  1685  014F  00A8               	movwf	??_sprintf^(0+128)
  1686  0150  01A9               	clrf	(??_sprintf^(0+128)+1)
  1687                           
  1688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1689                           ; Switch size 1, requested type "simple"
  1690                           ; Number of cases is 1, Range of values is 0 to 0
  1691                           ; switch strategies available:
  1692                           ; Name         Instructions Cycles
  1693                           ; simple_byte            4     3 (average)
  1694                           ; direct_byte           11     8 (fixed)
  1695                           ; jumptable            260     6 (fixed)
  1696                           ;	Chosen strategy is simple_byte
  1697  0151  0829               	movf	(??_sprintf+1)^(0+128),w
  1698  0152  3A00               	xorlw	0	; case 0
  1699  0153  1903               	skipnz
  1700  0154  2956               	goto	l3526
  1701  0155  2867               	goto	L1
  1702  0156                     l3526:
  1703                           
  1704                           ; Switch size 1, requested type "simple"
  1705                           ; Number of cases is 2, Range of values is 0 to 102
  1706                           ; switch strategies available:
  1707                           ; Name         Instructions Cycles
  1708                           ; simple_byte            7     4 (average)
  1709                           ; jumptable            260     6 (fixed)
  1710                           ;	Chosen strategy is simple_byte
  1711  0156  0828               	movf	??_sprintf^(0+128),w
  1712  0157  3A00               	xorlw	0	; case 0
  1713  0158  1903               	skipnz
  1714  0159  2B42               	goto	L3
  1715  015A  3A66               	xorlw	102	; case 102
  1716  015B  1903               	skipnz
  1717  015C  293E               	goto	l220
  1718  015D  2867               	goto	L1
  1719  015E                     l3216:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1722  015E  3000               	movlw	0
  1723  015F  0536               	andwf	sprintf@flag^(0+128),w
  1724  0160  00A8               	movwf	??_sprintf^(0+128)
  1725  0161  3007               	movlw	7
  1726  0162  0537               	andwf	(sprintf@flag+1)^(0+128),w
  1727  0163  00A9               	movwf	(??_sprintf+1)^(0+128)
  1728  0164  0828               	movf	??_sprintf^(0+128),w
  1729  0165  0429               	iorwf	(??_sprintf^(0+128)+1),w
  1730  0166  1903               	btfsc	3,2
  1731  0167  2969               	goto	u5151
  1732  0168  296C               	goto	u5150
  1733  0169                     u5151:
  1734  0169  120A  118A  2F17   	goto	l3378
  1735  016C                     u5150:
  1736  016C                     l3218:
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1739  016C  1E37               	btfss	(sprintf@flag+1)^(0+128),4
  1740  016D  296F               	goto	u5161
  1741  016E  2970               	goto	u5160
  1742  016F                     u5161:
  1743  016F  2974               	goto	l3222
  1744  0170                     u5160:
  1745  0170                     l3220:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1748  0170  3006               	movlw	6
  1749  0171  00C5               	movwf	sprintf@prec^(0+128)
  1750  0172  3000               	movlw	0
  1751  0173  00C6               	movwf	(sprintf@prec^(0+128)+1)
  1752  0174                     l3222:
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1755  0174  0831               	movf	sprintf@ap^(0+128),w
  1756  0175  0084               	movwf	4
  1757  0176  1383               	bcf	3,7	;select IRP bank0
  1758  0177  0800               	movf	0,w
  1759  0178  00C0               	movwf	sprintf@fval^(0+128)
  1760  0179  0A84               	incf	4,f
  1761  017A  0800               	movf	0,w
  1762  017B  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1763  017C  0A84               	incf	4,f
  1764  017D  0800               	movf	0,w
  1765  017E  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1766  017F  0A84               	incf	4,f
  1767  0180  0800               	movf	0,w
  1768  0181  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1769  0182                     l3224:
  1770  0182  3004               	movlw	4
  1771  0183  00FF               	movwf	btemp+1
  1772  0184  087F               	movf	btemp+1,w
  1773  0185  07B1               	addwf	sprintf@ap^(0+128),f
  1774  0186                     l3226:
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1777  0186  0843               	movf	(sprintf@fval+3)^(0+128),w
  1778  0187  00F6               	movwf	___flge@ff1+3
  1779  0188  0842               	movf	(sprintf@fval+2)^(0+128),w
  1780  0189  00F5               	movwf	___flge@ff1+2
  1781  018A  0841               	movf	(sprintf@fval+1)^(0+128),w
  1782  018B  00F4               	movwf	___flge@ff1+1
  1783  018C  0840               	movf	sprintf@fval^(0+128),w
  1784  018D  00F3               	movwf	___flge@ff1
  1785  018E  3000               	movlw	0
  1786  018F  00FA               	movwf	___flge@ff2+3
  1787  0190  3000               	movlw	0
  1788  0191  00F9               	movwf	___flge@ff2+2
  1789  0192  3000               	movlw	0
  1790  0193  00F8               	movwf	___flge@ff2+1
  1791  0194  3000               	movlw	0
  1792  0195  00F7               	movwf	___flge@ff2
  1793  0196  160A  118A  2150  120A  118A  	fcall	___flge
  1794  019B  1803               	btfsc	3,0
  1795  019C  299E               	goto	u5171
  1796  019D  299F               	goto	u5170
  1797  019E                     u5171:
  1798  019E  29BC               	goto	l3232
  1799  019F                     u5170:
  1800  019F                     l3228:
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1803  019F  1683               	bsf	3,5	;RP0=1, select bank1
  1804  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  1805  01A1  0843               	movf	(sprintf@fval+3)^(0+128),w
  1806  01A2  00F6               	movwf	___flneg@f1+3
  1807  01A3  0842               	movf	(sprintf@fval+2)^(0+128),w
  1808  01A4  00F5               	movwf	___flneg@f1+2
  1809  01A5  0841               	movf	(sprintf@fval+1)^(0+128),w
  1810  01A6  00F4               	movwf	___flneg@f1+1
  1811  01A7  0840               	movf	sprintf@fval^(0+128),w
  1812  01A8  00F3               	movwf	___flneg@f1
  1813  01A9  160A  158A  2328  120A  118A  	fcall	___flneg
  1814  01AE  0876               	movf	?___flneg+3,w
  1815  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1816  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1817  01B1  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1818  01B2  0875               	movf	?___flneg+2,w
  1819  01B3  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1820  01B4  0874               	movf	?___flneg+1,w
  1821  01B5  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1822  01B6  0873               	movf	?___flneg,w
  1823  01B7  00C0               	movwf	sprintf@fval^(0+128)
  1824  01B8                     l3230:
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1827  01B8  3003               	movlw	3
  1828  01B9  04B6               	iorwf	sprintf@flag^(0+128),f
  1829  01BA  3000               	movlw	0
  1830  01BB  04B7               	iorwf	(sprintf@flag+1)^(0+128),f
  1831  01BC                     l3232:
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1834  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  1835  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  1836  01BE  01BE               	clrf	sprintf@eexp^(0+128)
  1837  01BF  01BF               	clrf	(sprintf@eexp+1)^(0+128)
  1838  01C0                     l3234:
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1841  01C0  0843               	movf	(sprintf@fval+3)^(0+128),w
  1842  01C1  00F6               	movwf	___fleq@ff1+3
  1843  01C2  0842               	movf	(sprintf@fval+2)^(0+128),w
  1844  01C3  00F5               	movwf	___fleq@ff1+2
  1845  01C4  0841               	movf	(sprintf@fval+1)^(0+128),w
  1846  01C5  00F4               	movwf	___fleq@ff1+1
  1847  01C6  0840               	movf	sprintf@fval^(0+128),w
  1848  01C7  00F3               	movwf	___fleq@ff1
  1849  01C8  3000               	movlw	0
  1850  01C9  00FA               	movwf	___fleq@ff2+3
  1851  01CA  3000               	movlw	0
  1852  01CB  00F9               	movwf	___fleq@ff2+2
  1853  01CC  3000               	movlw	0
  1854  01CD  00F8               	movwf	___fleq@ff2+1
  1855  01CE  3000               	movlw	0
  1856  01CF  00F7               	movwf	___fleq@ff2
  1857  01D0  160A  158A  2530  120A  118A  	fcall	___fleq
  1858  01D5  1803               	btfsc	3,0
  1859  01D6  29D8               	goto	u5181
  1860  01D7  29D9               	goto	u5180
  1861  01D8                     u5181:
  1862  01D8  2AD9               	goto	l3260
  1863  01D9                     u5180:
  1864  01D9                     l3236:
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1867  01D9  1003               	clrc
  1868  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  1869  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  1870  01DC  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  1871  01DD  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  1872  01DE  3E82               	addlw	130
  1873  01DF  00BE               	movwf	sprintf@eexp^(0+128)
  1874  01E0  30FF               	movlw	255
  1875  01E1  1803               	skipnc
  1876  01E2  3000               	movlw	0
  1877  01E3  00BF               	movwf	(sprintf@eexp^(0+128)+1)
  1878  01E4                     l3238:
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1881  01E4  30FF               	movlw	255
  1882  01E5  07BE               	addwf	sprintf@eexp^(0+128),f
  1883  01E6  1803               	skipnc
  1884  01E7  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  1885  01E8  30FF               	movlw	255
  1886  01E9  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  1887  01EA                     l3240:
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1890  01EA  3003               	movlw	3
  1891  01EB  00F3               	movwf	___wmul@multiplier
  1892  01EC  3000               	movlw	0
  1893  01ED  00F4               	movwf	___wmul@multiplier+1
  1894  01EE  083F               	movf	(sprintf@eexp+1)^(0+128),w
  1895  01EF  00F6               	movwf	___wmul@multiplicand+1
  1896  01F0  083E               	movf	sprintf@eexp^(0+128),w
  1897  01F1  00F5               	movwf	___wmul@multiplicand
  1898  01F2  160A  158A  23B8  120A  118A  	fcall	___wmul
  1899  01F7  0874               	movf	?___wmul+1,w
  1900  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  1901  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  1902  01FA  00BF               	movwf	(sprintf@eexp+1)^(0+128)
  1903  01FB  0873               	movf	?___wmul,w
  1904  01FC  00BE               	movwf	sprintf@eexp^(0+128)
  1905  01FD                     l3242:
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1908  01FD  300A               	movlw	10
  1909  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1910  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0200  00A0               	movwf	___awdiv@divisor
  1912  0201  3000               	movlw	0
  1913  0202  00A1               	movwf	___awdiv@divisor+1
  1914  0203  1683               	bsf	3,5	;RP0=1, select bank1
  1915  0204  1303               	bcf	3,6	;RP1=0, select bank1
  1916  0205  083F               	movf	(sprintf@eexp+1)^(0+128),w
  1917  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0208  00A3               	movwf	___awdiv@dividend+1
  1920  0209  1683               	bsf	3,5	;RP0=1, select bank1
  1921  020A  1303               	bcf	3,6	;RP1=0, select bank1
  1922  020B  083E               	movf	sprintf@eexp^(0+128),w
  1923  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1924  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1925  020E  00A2               	movwf	___awdiv@dividend
  1926  020F  160A  158A  2697  120A  118A  	fcall	___awdiv
  1927  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1929  0216  0821               	movf	?___awdiv+1,w
  1930  0217  1683               	bsf	3,5	;RP0=1, select bank1
  1931  0218  1303               	bcf	3,6	;RP1=0, select bank1
  1932  0219  00BF               	movwf	(sprintf@eexp+1)^(0+128)
  1933  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1934  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1935  021C  0820               	movf	?___awdiv,w
  1936  021D  1683               	bsf	3,5	;RP0=1, select bank1
  1937  021E  1303               	bcf	3,6	;RP1=0, select bank1
  1938  021F  00BE               	movwf	sprintf@eexp^(0+128)
  1939  0220                     l3244:
  1940                           
  1941                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1942  0220  1FBF               	btfss	(sprintf@eexp+1)^(0+128),7
  1943  0221  2A23               	goto	u5191
  1944  0222  2A24               	goto	u5190
  1945  0223                     u5191:
  1946  0223  2A2A               	goto	l3248
  1947  0224                     u5190:
  1948  0224                     l3246:
  1949                           
  1950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1951  0224  30FF               	movlw	255
  1952  0225  07BE               	addwf	sprintf@eexp^(0+128),f
  1953  0226  1803               	skipnc
  1954  0227  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  1955  0228  30FF               	movlw	255
  1956  0229  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  1957  022A                     l3248:
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1960  022A  033E               	decf	sprintf@eexp^(0+128),w
  1961  022B  3AFF               	xorlw	255
  1962  022C  120A  158A  249D  120A  118A  	fcall	_scale
  1963  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0233  0845               	movf	?_scale+3,w
  1966  0234  1683               	bsf	3,5	;RP0=1, select bank1
  1967  0235  1303               	bcf	3,6	;RP1=0, select bank1
  1968  0236  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  1969  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0239  0844               	movf	?_scale+2,w
  1972  023A  1683               	bsf	3,5	;RP0=1, select bank1
  1973  023B  1303               	bcf	3,6	;RP1=0, select bank1
  1974  023C  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  1975  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1976  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1977  023F  0843               	movf	?_scale+1,w
  1978  0240  1683               	bsf	3,5	;RP0=1, select bank1
  1979  0241  1303               	bcf	3,6	;RP1=0, select bank1
  1980  0242  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  1981  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1983  0245  0842               	movf	?_scale,w
  1984  0246  1683               	bsf	3,5	;RP0=1, select bank1
  1985  0247  1303               	bcf	3,6	;RP1=0, select bank1
  1986  0248  00BA               	movwf	sprintf@tmpval^(0+128)
  1987  0249                     l3250:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1990  0249  0843               	movf	(sprintf@fval+3)^(0+128),w
  1991  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1992  024B  1303               	bcf	3,6	;RP1=0, select bank0
  1993  024C  00AB               	movwf	___flmul@b+3
  1994  024D  1683               	bsf	3,5	;RP0=1, select bank1
  1995  024E  1303               	bcf	3,6	;RP1=0, select bank1
  1996  024F  0842               	movf	(sprintf@fval+2)^(0+128),w
  1997  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1999  0252  00AA               	movwf	___flmul@b+2
  2000  0253  1683               	bsf	3,5	;RP0=1, select bank1
  2001  0254  1303               	bcf	3,6	;RP1=0, select bank1
  2002  0255  0841               	movf	(sprintf@fval+1)^(0+128),w
  2003  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2004  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2005  0258  00A9               	movwf	___flmul@b+1
  2006  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2007  025A  1303               	bcf	3,6	;RP1=0, select bank1
  2008  025B  0840               	movf	sprintf@fval^(0+128),w
  2009  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2010  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2011  025E  00A8               	movwf	___flmul@b
  2012  025F  1683               	bsf	3,5	;RP0=1, select bank1
  2013  0260  1303               	bcf	3,6	;RP1=0, select bank1
  2014  0261  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2015  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0264  00AF               	movwf	___flmul@a+3
  2018  0265  1683               	bsf	3,5	;RP0=1, select bank1
  2019  0266  1303               	bcf	3,6	;RP1=0, select bank1
  2020  0267  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2021  0268  1283               	bcf	3,5	;RP0=0, select bank0
  2022  0269  1303               	bcf	3,6	;RP1=0, select bank0
  2023  026A  00AE               	movwf	___flmul@a+2
  2024  026B  1683               	bsf	3,5	;RP0=1, select bank1
  2025  026C  1303               	bcf	3,6	;RP1=0, select bank1
  2026  026D  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2027  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2028  026F  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0270  00AD               	movwf	___flmul@a+1
  2030  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2031  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2032  0273  083A               	movf	sprintf@tmpval^(0+128),w
  2033  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2034  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2035  0276  00AC               	movwf	___flmul@a
  2036  0277  120A  158A  213C  120A  118A  	fcall	___flmul
  2037  027C  1283               	bcf	3,5	;RP0=0, select bank0
  2038  027D  1303               	bcf	3,6	;RP1=0, select bank0
  2039  027E  082B               	movf	?___flmul+3,w
  2040  027F  1683               	bsf	3,5	;RP0=1, select bank1
  2041  0280  1303               	bcf	3,6	;RP1=0, select bank1
  2042  0281  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2043  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0284  082A               	movf	?___flmul+2,w
  2046  0285  1683               	bsf	3,5	;RP0=1, select bank1
  2047  0286  1303               	bcf	3,6	;RP1=0, select bank1
  2048  0287  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2049  0288  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0289  1303               	bcf	3,6	;RP1=0, select bank0
  2051  028A  0829               	movf	?___flmul+1,w
  2052  028B  1683               	bsf	3,5	;RP0=1, select bank1
  2053  028C  1303               	bcf	3,6	;RP1=0, select bank1
  2054  028D  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2055  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2056  028F  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0290  0828               	movf	?___flmul,w
  2058  0291  1683               	bsf	3,5	;RP0=1, select bank1
  2059  0292  1303               	bcf	3,6	;RP1=0, select bank1
  2060  0293  00BA               	movwf	sprintf@tmpval^(0+128)
  2061  0294                     l3252:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2064  0294  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2065  0295  00F6               	movwf	___flge@ff1+3
  2066  0296  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2067  0297  00F5               	movwf	___flge@ff1+2
  2068  0298  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2069  0299  00F4               	movwf	___flge@ff1+1
  2070  029A  083A               	movf	sprintf@tmpval^(0+128),w
  2071  029B  00F3               	movwf	___flge@ff1
  2072  029C  303F               	movlw	63
  2073  029D  00FA               	movwf	___flge@ff2+3
  2074  029E  3080               	movlw	128
  2075  029F  00F9               	movwf	___flge@ff2+2
  2076  02A0  3000               	movlw	0
  2077  02A1  00F8               	movwf	___flge@ff2+1
  2078  02A2  3000               	movlw	0
  2079  02A3  00F7               	movwf	___flge@ff2
  2080  02A4  160A  118A  2150  120A  118A  	fcall	___flge
  2081  02A9  1803               	btfsc	3,0
  2082  02AA  2AAC               	goto	u5201
  2083  02AB  2AAD               	goto	u5200
  2084  02AC                     u5201:
  2085  02AC  2AB6               	goto	l3256
  2086  02AD                     u5200:
  2087  02AD                     l3254:
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2090  02AD  30FF               	movlw	255
  2091  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  2092  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  2093  02B0  07BE               	addwf	sprintf@eexp^(0+128),f
  2094  02B1  1803               	skipnc
  2095  02B2  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2096  02B3  30FF               	movlw	255
  2097  02B4  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2098  02B5  2AD9               	goto	l3260
  2099  02B6                     l3256:
  2100  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2101  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  2102  02B8  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2103  02B9  00F6               	movwf	___flge@ff1+3
  2104  02BA  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2105  02BB  00F5               	movwf	___flge@ff1+2
  2106  02BC  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2107  02BD  00F4               	movwf	___flge@ff1+1
  2108  02BE  083A               	movf	sprintf@tmpval^(0+128),w
  2109  02BF  00F3               	movwf	___flge@ff1
  2110  02C0  3041               	movlw	65
  2111  02C1  00FA               	movwf	___flge@ff2+3
  2112  02C2  3020               	movlw	32
  2113  02C3  00F9               	movwf	___flge@ff2+2
  2114  02C4  3000               	movlw	0
  2115  02C5  00F8               	movwf	___flge@ff2+1
  2116  02C6  3000               	movlw	0
  2117  02C7  00F7               	movwf	___flge@ff2
  2118  02C8  160A  118A  2150  120A  118A  	fcall	___flge
  2119  02CD  1C03               	btfss	3,0
  2120  02CE  2AD0               	goto	u5211
  2121  02CF  2AD1               	goto	u5210
  2122  02D0                     u5211:
  2123  02D0  2AD9               	goto	l3260
  2124  02D1                     u5210:
  2125  02D1                     l3258:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2128  02D1  3001               	movlw	1
  2129  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2130  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2131  02D4  07BE               	addwf	sprintf@eexp^(0+128),f
  2132  02D5  1803               	skipnc
  2133  02D6  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2134  02D7  3000               	movlw	0
  2135  02D8  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2136  02D9                     l3260:
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2139  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2140  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2141  02DB  0846               	movf	(sprintf@prec+1)^(0+128),w
  2142  02DC  3A80               	xorlw	128
  2143  02DD  00FF               	movwf	btemp+1
  2144  02DE  3080               	movlw	128
  2145  02DF  027F               	subwf	btemp+1,w
  2146  02E0  1D03               	skipz
  2147  02E1  2AE4               	goto	u5225
  2148  02E2  300D               	movlw	13
  2149  02E3  0245               	subwf	sprintf@prec^(0+128),w
  2150  02E4                     u5225:
  2151  02E4  1803               	skipnc
  2152  02E5  2AE7               	goto	u5221
  2153  02E6  2AE8               	goto	u5220
  2154  02E7                     u5221:
  2155  02E7  2B2F               	goto	l3264
  2156  02E8                     u5220:
  2157  02E8                     l3262:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2160  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  2161  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  2162  02EA  0845               	movf	sprintf@prec^(0+128),w
  2163  02EB  160A  118A  236D  120A  118A  	fcall	_fround
  2164  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2165  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2166  02F2  0845               	movf	?_fround+3,w
  2167  02F3  00D9               	movwf	___fladd@b+3
  2168  02F4  0844               	movf	?_fround+2,w
  2169  02F5  00D8               	movwf	___fladd@b+2
  2170  02F6  0843               	movf	?_fround+1,w
  2171  02F7  00D7               	movwf	___fladd@b+1
  2172  02F8  0842               	movf	?_fround,w
  2173  02F9  00D6               	movwf	___fladd@b
  2174  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  2175  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  2176  02FC  0843               	movf	(sprintf@fval+3)^(0+128),w
  2177  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2178  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2179  02FF  00DD               	movwf	___fladd@a+3
  2180  0300  1683               	bsf	3,5	;RP0=1, select bank1
  2181  0301  1303               	bcf	3,6	;RP1=0, select bank1
  2182  0302  0842               	movf	(sprintf@fval+2)^(0+128),w
  2183  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2184  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2185  0305  00DC               	movwf	___fladd@a+2
  2186  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2187  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2188  0308  0841               	movf	(sprintf@fval+1)^(0+128),w
  2189  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2190  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2191  030B  00DB               	movwf	___fladd@a+1
  2192  030C  1683               	bsf	3,5	;RP0=1, select bank1
  2193  030D  1303               	bcf	3,6	;RP1=0, select bank1
  2194  030E  0840               	movf	sprintf@fval^(0+128),w
  2195  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2197  0311  00DA               	movwf	___fladd@a
  2198  0312  160A  118A  2578  120A  118A  	fcall	___fladd
  2199  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0319  0859               	movf	?___fladd+3,w
  2202  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2203  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2204  031C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2205  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2206  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2207  031F  0858               	movf	?___fladd+2,w
  2208  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2209  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2210  0322  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2211  0323  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0324  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0325  0857               	movf	?___fladd+1,w
  2214  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2215  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2216  0328  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2217  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2218  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2219  032B  0856               	movf	?___fladd,w
  2220  032C  1683               	bsf	3,5	;RP0=1, select bank1
  2221  032D  1303               	bcf	3,6	;RP1=0, select bank1
  2222  032E  00C0               	movwf	sprintf@fval^(0+128)
  2223  032F                     l3264:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2226  032F  1683               	bsf	3,5	;RP0=1, select bank1
  2227  0330  1303               	bcf	3,6	;RP1=0, select bank1
  2228  0331  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2229  0332  3A80               	xorlw	128
  2230  0333  00FF               	movwf	btemp+1
  2231  0334  3080               	movlw	128
  2232  0335  027F               	subwf	btemp+1,w
  2233  0336  1D03               	skipz
  2234  0337  2B3A               	goto	u5235
  2235  0338  300A               	movlw	10
  2236  0339  023E               	subwf	sprintf@eexp^(0+128),w
  2237  033A                     u5235:
  2238  033A  1803               	skipnc
  2239  033B  2B3F               	goto	u5231
  2240  033C  120A  118A  2B45   	goto	u5230
  2241  033F                     u5231:
  2242  033F  120A  118A  2B96   	goto	l3272
  2243  0342                     L3:
  2244  0342                     L2:
  2245  0342  120A  118A  2FF4   	ljmp	l3426
  2246                           
  2247                           	psect	text2
  2248  0C9D                     __ptext2:	
  2249 ;; *************** function _scale *****************
  2250 ;; Defined at:
  2251 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  scl             1    wreg     char 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  scl             1   52[BANK0 ] char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  4   34[BANK0 ] char 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2265 ;;      Params:         0       4       0       0       0
  2266 ;;      Locals:         0       5       0       0       0
  2267 ;;      Temps:          0      10       0       0       0
  2268 ;;      Totals:         0      19       0       0       0
  2269 ;;Total ram usage:       19 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    3
  2272 ;; This function calls:
  2273 ;;		___awdiv
  2274 ;;		___awmod
  2275 ;;		___flmul
  2276 ;; This function is called by:
  2277 ;;		_sprintf
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           
  2282                           ;psect for function _scale
  2283  0C9D                     _scale:
  2284                           
  2285                           ;incstack = 0
  2286                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2287                           ;scale@scl stored from wreg
  2288  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2289  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2290  0C9F  00D4               	movwf	scale@scl
  2291  0CA0                     l2740:
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2294  0CA0  1FD4               	btfss	scale@scl,7
  2295  0CA1  2CA3               	goto	u4101
  2296  0CA2  2CA4               	goto	u4100
  2297  0CA3                     u4101:
  2298  0CA3  2E53               	goto	l2762
  2299  0CA4                     u4100:
  2300  0CA4                     l2742:
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2303  0CA4  09D4               	comf	scale@scl,f
  2304  0CA5  0AD4               	incf	scale@scl,f
  2305  0CA6                     l2744:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2308  0CA6  0854               	movf	scale@scl,w
  2309  0CA7  3A80               	xorlw	128
  2310  0CA8  3E12               	addlw	-238
  2311  0CA9  1C03               	skipc
  2312  0CAA  2CAC               	goto	u4111
  2313  0CAB  2CAD               	goto	u4110
  2314  0CAC                     u4111:
  2315  0CAC  2D97               	goto	l2752
  2316  0CAD                     u4110:
  2317  0CAD                     l2746:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2320  0CAD  300A               	movlw	10
  2321  0CAE  00A0               	movwf	___awdiv@divisor
  2322  0CAF  3000               	movlw	0
  2323  0CB0  00A1               	movwf	___awdiv@divisor+1
  2324  0CB1  0854               	movf	scale@scl,w
  2325  0CB2  00F5               	movwf	___awmod@dividend
  2326  0CB3  01F6               	clrf	___awmod@dividend+1
  2327  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2328  0CB5  03F6               	decf	___awmod@dividend+1,f
  2329  0CB6  3064               	movlw	100
  2330  0CB7  00F3               	movwf	___awmod@divisor
  2331  0CB8  3000               	movlw	0
  2332  0CB9  00F4               	movwf	___awmod@divisor+1
  2333  0CBA  160A  158A  25D6  120A  158A  	fcall	___awmod
  2334  0CBF  0874               	movf	?___awmod+1,w
  2335  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2336  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2337  0CC2  00A3               	movwf	___awdiv@dividend+1
  2338  0CC3  0873               	movf	?___awmod,w
  2339  0CC4  00A2               	movwf	___awdiv@dividend
  2340  0CC5  160A  158A  2697  120A  158A  	fcall	___awdiv
  2341  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0CCC  0820               	movf	?___awdiv,w
  2344  0CCD  00C6               	movwf	??_scale
  2345  0CCE  3001               	movlw	1
  2346  0CCF                     u4125:
  2347  0CCF  1003               	clrc
  2348  0CD0  0DC6               	rlf	??_scale,f
  2349  0CD1  3EFF               	addlw	-1
  2350  0CD2  1D03               	skipz
  2351  0CD3  2CCF               	goto	u4125
  2352  0CD4  1003               	clrc
  2353  0CD5  0D46               	rlf	??_scale,w
  2354  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2355  0CD7  0084               	movwf	4
  2356  0CD8  160A  118A  2000  120A  158A  	fcall	stringdir
  2357  0CDD  00C7               	movwf	??_scale+1
  2358  0CDE  160A  118A  2000  120A  158A  	fcall	stringdir
  2359  0CE3  00C8               	movwf	??_scale+2
  2360  0CE4  160A  118A  2000  120A  158A  	fcall	stringdir
  2361  0CE9  00C9               	movwf	??_scale+3
  2362  0CEA  160A  118A  2000  120A  158A  	fcall	stringdir
  2363  0CEF  00CA               	movwf	??_scale+4
  2364  0CF0  084A               	movf	??_scale+4,w
  2365  0CF1  00AB               	movwf	___flmul@b+3
  2366  0CF2  0849               	movf	??_scale+3,w
  2367  0CF3  00AA               	movwf	___flmul@b+2
  2368  0CF4  0848               	movf	??_scale+2,w
  2369  0CF5  00A9               	movwf	___flmul@b+1
  2370  0CF6  0847               	movf	??_scale+1,w
  2371  0CF7  00A8               	movwf	___flmul@b
  2372  0CF8  3064               	movlw	100
  2373  0CF9  00A0               	movwf	___awdiv@divisor
  2374  0CFA  3000               	movlw	0
  2375  0CFB  00A1               	movwf	___awdiv@divisor+1
  2376  0CFC  0854               	movf	scale@scl,w
  2377  0CFD  00A2               	movwf	___awdiv@dividend
  2378  0CFE  01A3               	clrf	___awdiv@dividend+1
  2379  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2380  0D00  03A3               	decf	___awdiv@dividend+1,f
  2381  0D01  160A  158A  2697  120A  158A  	fcall	___awdiv
  2382  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0D08  0820               	movf	?___awdiv,w
  2385  0D09  00CB               	movwf	??_scale+5
  2386  0D0A  3001               	movlw	1
  2387  0D0B                     u4135:
  2388  0D0B  1003               	clrc
  2389  0D0C  0DCB               	rlf	??_scale+5,f
  2390  0D0D  3EFF               	addlw	-1
  2391  0D0E  1D03               	skipz
  2392  0D0F  2D0B               	goto	u4135
  2393  0D10  1003               	clrc
  2394  0D11  0D4B               	rlf	??_scale+5,w
  2395  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2396  0D13  0084               	movwf	4
  2397  0D14  160A  118A  2000  120A  158A  	fcall	stringdir
  2398  0D19  00CC               	movwf	??_scale+6
  2399  0D1A  160A  118A  2000  120A  158A  	fcall	stringdir
  2400  0D1F  00CD               	movwf	??_scale+7
  2401  0D20  160A  118A  2000  120A  158A  	fcall	stringdir
  2402  0D25  00CE               	movwf	??_scale+8
  2403  0D26  160A  118A  2000  120A  158A  	fcall	stringdir
  2404  0D2B  00CF               	movwf	??_scale+9
  2405  0D2C  084F               	movf	??_scale+9,w
  2406  0D2D  00AF               	movwf	___flmul@a+3
  2407  0D2E  084E               	movf	??_scale+8,w
  2408  0D2F  00AE               	movwf	___flmul@a+2
  2409  0D30  084D               	movf	??_scale+7,w
  2410  0D31  00AD               	movwf	___flmul@a+1
  2411  0D32  084C               	movf	??_scale+6,w
  2412  0D33  00AC               	movwf	___flmul@a
  2413  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2414  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2415  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2416  0D3B  082B               	movf	?___flmul+3,w
  2417  0D3C  00D3               	movwf	_scale$733+3
  2418  0D3D  082A               	movf	?___flmul+2,w
  2419  0D3E  00D2               	movwf	_scale$733+2
  2420  0D3F  0829               	movf	?___flmul+1,w
  2421  0D40  00D1               	movwf	_scale$733+1
  2422  0D41  0828               	movf	?___flmul,w
  2423  0D42  00D0               	movwf	_scale$733
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2426  0D43  300A               	movlw	10
  2427  0D44  00F3               	movwf	___awmod@divisor
  2428  0D45  3000               	movlw	0
  2429  0D46  00F4               	movwf	___awmod@divisor+1
  2430  0D47  0854               	movf	scale@scl,w
  2431  0D48  00F5               	movwf	___awmod@dividend
  2432  0D49  01F6               	clrf	___awmod@dividend+1
  2433  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2434  0D4B  03F6               	decf	___awmod@dividend+1,f
  2435  0D4C  160A  158A  25D6  120A  158A  	fcall	___awmod
  2436  0D51  0873               	movf	?___awmod,w
  2437  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0D54  00C6               	movwf	??_scale
  2440  0D55  3001               	movlw	1
  2441  0D56                     u4145:
  2442  0D56  1003               	clrc
  2443  0D57  0DC6               	rlf	??_scale,f
  2444  0D58  3EFF               	addlw	-1
  2445  0D59  1D03               	skipz
  2446  0D5A  2D56               	goto	u4145
  2447  0D5B  1003               	clrc
  2448  0D5C  0D46               	rlf	??_scale,w
  2449  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2450  0D5E  0084               	movwf	4
  2451  0D5F  160A  118A  2000  120A  158A  	fcall	stringdir
  2452  0D64  00C7               	movwf	??_scale+1
  2453  0D65  160A  118A  2000  120A  158A  	fcall	stringdir
  2454  0D6A  00C8               	movwf	??_scale+2
  2455  0D6B  160A  118A  2000  120A  158A  	fcall	stringdir
  2456  0D70  00C9               	movwf	??_scale+3
  2457  0D71  160A  118A  2000  120A  158A  	fcall	stringdir
  2458  0D76  00CA               	movwf	??_scale+4
  2459  0D77  084A               	movf	??_scale+4,w
  2460  0D78  00AB               	movwf	___flmul@b+3
  2461  0D79  0849               	movf	??_scale+3,w
  2462  0D7A  00AA               	movwf	___flmul@b+2
  2463  0D7B  0848               	movf	??_scale+2,w
  2464  0D7C  00A9               	movwf	___flmul@b+1
  2465  0D7D  0847               	movf	??_scale+1,w
  2466  0D7E  00A8               	movwf	___flmul@b
  2467  0D7F  0853               	movf	_scale$733+3,w
  2468  0D80  00AF               	movwf	___flmul@a+3
  2469  0D81  0852               	movf	_scale$733+2,w
  2470  0D82  00AE               	movwf	___flmul@a+2
  2471  0D83  0851               	movf	_scale$733+1,w
  2472  0D84  00AD               	movwf	___flmul@a+1
  2473  0D85  0850               	movf	_scale$733,w
  2474  0D86  00AC               	movwf	___flmul@a
  2475  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2476  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2478  0D8E  082B               	movf	?___flmul+3,w
  2479  0D8F  00C5               	movwf	?_scale+3
  2480  0D90  082A               	movf	?___flmul+2,w
  2481  0D91  00C4               	movwf	?_scale+2
  2482  0D92  0829               	movf	?___flmul+1,w
  2483  0D93  00C3               	movwf	?_scale+1
  2484  0D94  0828               	movf	?___flmul,w
  2485  0D95  00C2               	movwf	?_scale
  2486  0D96  2FFF               	goto	l198
  2487  0D97                     l2752:
  2488  0D97  0854               	movf	scale@scl,w
  2489  0D98  3A80               	xorlw	128
  2490  0D99  3E75               	addlw	-139
  2491  0D9A  1C03               	skipc
  2492  0D9B  2D9D               	goto	u4151
  2493  0D9C  2D9E               	goto	u4150
  2494  0D9D                     u4151:
  2495  0D9D  2E26               	goto	l2758
  2496  0D9E                     u4150:
  2497  0D9E                     l2754:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2500  0D9E  300A               	movlw	10
  2501  0D9F  00F3               	movwf	___awmod@divisor
  2502  0DA0  3000               	movlw	0
  2503  0DA1  00F4               	movwf	___awmod@divisor+1
  2504  0DA2  0854               	movf	scale@scl,w
  2505  0DA3  00F5               	movwf	___awmod@dividend
  2506  0DA4  01F6               	clrf	___awmod@dividend+1
  2507  0DA5  1BF5               	btfsc	___awmod@dividend,7
  2508  0DA6  03F6               	decf	___awmod@dividend+1,f
  2509  0DA7  160A  158A  25D6  120A  158A  	fcall	___awmod
  2510  0DAC  0873               	movf	?___awmod,w
  2511  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2512  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2513  0DAF  00C6               	movwf	??_scale
  2514  0DB0  3001               	movlw	1
  2515  0DB1                     u4165:
  2516  0DB1  1003               	clrc
  2517  0DB2  0DC6               	rlf	??_scale,f
  2518  0DB3  3EFF               	addlw	-1
  2519  0DB4  1D03               	skipz
  2520  0DB5  2DB1               	goto	u4165
  2521  0DB6  1003               	clrc
  2522  0DB7  0D46               	rlf	??_scale,w
  2523  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2524  0DB9  0084               	movwf	4
  2525  0DBA  160A  118A  2000  120A  158A  	fcall	stringdir
  2526  0DBF  00C7               	movwf	??_scale+1
  2527  0DC0  160A  118A  2000  120A  158A  	fcall	stringdir
  2528  0DC5  00C8               	movwf	??_scale+2
  2529  0DC6  160A  118A  2000  120A  158A  	fcall	stringdir
  2530  0DCB  00C9               	movwf	??_scale+3
  2531  0DCC  160A  118A  2000  120A  158A  	fcall	stringdir
  2532  0DD1  00CA               	movwf	??_scale+4
  2533  0DD2  084A               	movf	??_scale+4,w
  2534  0DD3  00AB               	movwf	___flmul@b+3
  2535  0DD4  0849               	movf	??_scale+3,w
  2536  0DD5  00AA               	movwf	___flmul@b+2
  2537  0DD6  0848               	movf	??_scale+2,w
  2538  0DD7  00A9               	movwf	___flmul@b+1
  2539  0DD8  0847               	movf	??_scale+1,w
  2540  0DD9  00A8               	movwf	___flmul@b
  2541  0DDA  300A               	movlw	10
  2542  0DDB  00A0               	movwf	___awdiv@divisor
  2543  0DDC  3000               	movlw	0
  2544  0DDD  00A1               	movwf	___awdiv@divisor+1
  2545  0DDE  0854               	movf	scale@scl,w
  2546  0DDF  00A2               	movwf	___awdiv@dividend
  2547  0DE0  01A3               	clrf	___awdiv@dividend+1
  2548  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2549  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2550  0DE3  160A  158A  2697  120A  158A  	fcall	___awdiv
  2551  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2553  0DEA  0820               	movf	?___awdiv,w
  2554  0DEB  00CB               	movwf	??_scale+5
  2555  0DEC  3001               	movlw	1
  2556  0DED                     u4175:
  2557  0DED  1003               	clrc
  2558  0DEE  0DCB               	rlf	??_scale+5,f
  2559  0DEF  3EFF               	addlw	-1
  2560  0DF0  1D03               	skipz
  2561  0DF1  2DED               	goto	u4175
  2562  0DF2  1003               	clrc
  2563  0DF3  0D4B               	rlf	??_scale+5,w
  2564  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2565  0DF5  0084               	movwf	4
  2566  0DF6  160A  118A  2000  120A  158A  	fcall	stringdir
  2567  0DFB  00CC               	movwf	??_scale+6
  2568  0DFC  160A  118A  2000  120A  158A  	fcall	stringdir
  2569  0E01  00CD               	movwf	??_scale+7
  2570  0E02  160A  118A  2000  120A  158A  	fcall	stringdir
  2571  0E07  00CE               	movwf	??_scale+8
  2572  0E08  160A  118A  2000  120A  158A  	fcall	stringdir
  2573  0E0D  00CF               	movwf	??_scale+9
  2574  0E0E  084F               	movf	??_scale+9,w
  2575  0E0F  00AF               	movwf	___flmul@a+3
  2576  0E10  084E               	movf	??_scale+8,w
  2577  0E11  00AE               	movwf	___flmul@a+2
  2578  0E12  084D               	movf	??_scale+7,w
  2579  0E13  00AD               	movwf	___flmul@a+1
  2580  0E14  084C               	movf	??_scale+6,w
  2581  0E15  00AC               	movwf	___flmul@a
  2582  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2583  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2584  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2585  0E1D  082B               	movf	?___flmul+3,w
  2586  0E1E  00C5               	movwf	?_scale+3
  2587  0E1F  082A               	movf	?___flmul+2,w
  2588  0E20  00C4               	movwf	?_scale+2
  2589  0E21  0829               	movf	?___flmul+1,w
  2590  0E22  00C3               	movwf	?_scale+1
  2591  0E23  0828               	movf	?___flmul,w
  2592  0E24  00C2               	movwf	?_scale
  2593  0E25  2FFF               	goto	l198
  2594  0E26                     l2758:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2597  0E26  0854               	movf	scale@scl,w
  2598  0E27  00C6               	movwf	??_scale
  2599  0E28  3001               	movlw	1
  2600  0E29                     u4185:
  2601  0E29  1003               	clrc
  2602  0E2A  0DC6               	rlf	??_scale,f
  2603  0E2B  3EFF               	addlw	-1
  2604  0E2C  1D03               	skipz
  2605  0E2D  2E29               	goto	u4185
  2606  0E2E  1003               	clrc
  2607  0E2F  0D46               	rlf	??_scale,w
  2608  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2609  0E31  0084               	movwf	4
  2610  0E32  160A  118A  2000  120A  158A  	fcall	stringdir
  2611  0E37  00C7               	movwf	??_scale+1
  2612  0E38  160A  118A  2000  120A  158A  	fcall	stringdir
  2613  0E3D  00C8               	movwf	??_scale+2
  2614  0E3E  160A  118A  2000  120A  158A  	fcall	stringdir
  2615  0E43  00C9               	movwf	??_scale+3
  2616  0E44  160A  118A  2000  120A  158A  	fcall	stringdir
  2617  0E49  00CA               	movwf	??_scale+4
  2618  0E4A  084A               	movf	??_scale+4,w
  2619  0E4B  00C5               	movwf	?_scale+3
  2620  0E4C  0849               	movf	??_scale+3,w
  2621  0E4D  00C4               	movwf	?_scale+2
  2622  0E4E  0848               	movf	??_scale+2,w
  2623  0E4F  00C3               	movwf	?_scale+1
  2624  0E50  0847               	movf	??_scale+1,w
  2625  0E51  00C2               	movwf	?_scale
  2626  0E52  2FFF               	goto	l198
  2627  0E53                     l2762:
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2630  0E53  0854               	movf	scale@scl,w
  2631  0E54  3A80               	xorlw	128
  2632  0E55  3E12               	addlw	-238
  2633  0E56  1C03               	skipc
  2634  0E57  2E59               	goto	u4191
  2635  0E58  2E5A               	goto	u4190
  2636  0E59                     u4191:
  2637  0E59  2F44               	goto	l2770
  2638  0E5A                     u4190:
  2639  0E5A                     l2764:
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2642  0E5A  300A               	movlw	10
  2643  0E5B  00A0               	movwf	___awdiv@divisor
  2644  0E5C  3000               	movlw	0
  2645  0E5D  00A1               	movwf	___awdiv@divisor+1
  2646  0E5E  0854               	movf	scale@scl,w
  2647  0E5F  00F5               	movwf	___awmod@dividend
  2648  0E60  01F6               	clrf	___awmod@dividend+1
  2649  0E61  1BF5               	btfsc	___awmod@dividend,7
  2650  0E62  03F6               	decf	___awmod@dividend+1,f
  2651  0E63  3064               	movlw	100
  2652  0E64  00F3               	movwf	___awmod@divisor
  2653  0E65  3000               	movlw	0
  2654  0E66  00F4               	movwf	___awmod@divisor+1
  2655  0E67  160A  158A  25D6  120A  158A  	fcall	___awmod
  2656  0E6C  0874               	movf	?___awmod+1,w
  2657  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2658  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2659  0E6F  00A3               	movwf	___awdiv@dividend+1
  2660  0E70  0873               	movf	?___awmod,w
  2661  0E71  00A2               	movwf	___awdiv@dividend
  2662  0E72  160A  158A  2697  120A  158A  	fcall	___awdiv
  2663  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0E79  0820               	movf	?___awdiv,w
  2666  0E7A  00C6               	movwf	??_scale
  2667  0E7B  3001               	movlw	1
  2668  0E7C                     u4205:
  2669  0E7C  1003               	clrc
  2670  0E7D  0DC6               	rlf	??_scale,f
  2671  0E7E  3EFF               	addlw	-1
  2672  0E7F  1D03               	skipz
  2673  0E80  2E7C               	goto	u4205
  2674  0E81  1003               	clrc
  2675  0E82  0D46               	rlf	??_scale,w
  2676  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2677  0E84  0084               	movwf	4
  2678  0E85  160A  118A  2000  120A  158A  	fcall	stringdir
  2679  0E8A  00C7               	movwf	??_scale+1
  2680  0E8B  160A  118A  2000  120A  158A  	fcall	stringdir
  2681  0E90  00C8               	movwf	??_scale+2
  2682  0E91  160A  118A  2000  120A  158A  	fcall	stringdir
  2683  0E96  00C9               	movwf	??_scale+3
  2684  0E97  160A  118A  2000  120A  158A  	fcall	stringdir
  2685  0E9C  00CA               	movwf	??_scale+4
  2686  0E9D  084A               	movf	??_scale+4,w
  2687  0E9E  00AB               	movwf	___flmul@b+3
  2688  0E9F  0849               	movf	??_scale+3,w
  2689  0EA0  00AA               	movwf	___flmul@b+2
  2690  0EA1  0848               	movf	??_scale+2,w
  2691  0EA2  00A9               	movwf	___flmul@b+1
  2692  0EA3  0847               	movf	??_scale+1,w
  2693  0EA4  00A8               	movwf	___flmul@b
  2694  0EA5  3064               	movlw	100
  2695  0EA6  00A0               	movwf	___awdiv@divisor
  2696  0EA7  3000               	movlw	0
  2697  0EA8  00A1               	movwf	___awdiv@divisor+1
  2698  0EA9  0854               	movf	scale@scl,w
  2699  0EAA  00A2               	movwf	___awdiv@dividend
  2700  0EAB  01A3               	clrf	___awdiv@dividend+1
  2701  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  2702  0EAD  03A3               	decf	___awdiv@dividend+1,f
  2703  0EAE  160A  158A  2697  120A  158A  	fcall	___awdiv
  2704  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0EB5  0820               	movf	?___awdiv,w
  2707  0EB6  00CB               	movwf	??_scale+5
  2708  0EB7  3001               	movlw	1
  2709  0EB8                     u4215:
  2710  0EB8  1003               	clrc
  2711  0EB9  0DCB               	rlf	??_scale+5,f
  2712  0EBA  3EFF               	addlw	-1
  2713  0EBB  1D03               	skipz
  2714  0EBC  2EB8               	goto	u4215
  2715  0EBD  1003               	clrc
  2716  0EBE  0D4B               	rlf	??_scale+5,w
  2717  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2718  0EC0  0084               	movwf	4
  2719  0EC1  160A  118A  2000  120A  158A  	fcall	stringdir
  2720  0EC6  00CC               	movwf	??_scale+6
  2721  0EC7  160A  118A  2000  120A  158A  	fcall	stringdir
  2722  0ECC  00CD               	movwf	??_scale+7
  2723  0ECD  160A  118A  2000  120A  158A  	fcall	stringdir
  2724  0ED2  00CE               	movwf	??_scale+8
  2725  0ED3  160A  118A  2000  120A  158A  	fcall	stringdir
  2726  0ED8  00CF               	movwf	??_scale+9
  2727  0ED9  084F               	movf	??_scale+9,w
  2728  0EDA  00AF               	movwf	___flmul@a+3
  2729  0EDB  084E               	movf	??_scale+8,w
  2730  0EDC  00AE               	movwf	___flmul@a+2
  2731  0EDD  084D               	movf	??_scale+7,w
  2732  0EDE  00AD               	movwf	___flmul@a+1
  2733  0EDF  084C               	movf	??_scale+6,w
  2734  0EE0  00AC               	movwf	___flmul@a
  2735  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2736  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2738  0EE8  082B               	movf	?___flmul+3,w
  2739  0EE9  00D3               	movwf	_scale$733+3
  2740  0EEA  082A               	movf	?___flmul+2,w
  2741  0EEB  00D2               	movwf	_scale$733+2
  2742  0EEC  0829               	movf	?___flmul+1,w
  2743  0EED  00D1               	movwf	_scale$733+1
  2744  0EEE  0828               	movf	?___flmul,w
  2745  0EEF  00D0               	movwf	_scale$733
  2746                           
  2747                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2748  0EF0  300A               	movlw	10
  2749  0EF1  00F3               	movwf	___awmod@divisor
  2750  0EF2  3000               	movlw	0
  2751  0EF3  00F4               	movwf	___awmod@divisor+1
  2752  0EF4  0854               	movf	scale@scl,w
  2753  0EF5  00F5               	movwf	___awmod@dividend
  2754  0EF6  01F6               	clrf	___awmod@dividend+1
  2755  0EF7  1BF5               	btfsc	___awmod@dividend,7
  2756  0EF8  03F6               	decf	___awmod@dividend+1,f
  2757  0EF9  160A  158A  25D6  120A  158A  	fcall	___awmod
  2758  0EFE  0873               	movf	?___awmod,w
  2759  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0F01  00C6               	movwf	??_scale
  2762  0F02  3001               	movlw	1
  2763  0F03                     u4225:
  2764  0F03  1003               	clrc
  2765  0F04  0DC6               	rlf	??_scale,f
  2766  0F05  3EFF               	addlw	-1
  2767  0F06  1D03               	skipz
  2768  0F07  2F03               	goto	u4225
  2769  0F08  1003               	clrc
  2770  0F09  0D46               	rlf	??_scale,w
  2771  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2772  0F0B  0084               	movwf	4
  2773  0F0C  160A  118A  2000  120A  158A  	fcall	stringdir
  2774  0F11  00C7               	movwf	??_scale+1
  2775  0F12  160A  118A  2000  120A  158A  	fcall	stringdir
  2776  0F17  00C8               	movwf	??_scale+2
  2777  0F18  160A  118A  2000  120A  158A  	fcall	stringdir
  2778  0F1D  00C9               	movwf	??_scale+3
  2779  0F1E  160A  118A  2000  120A  158A  	fcall	stringdir
  2780  0F23  00CA               	movwf	??_scale+4
  2781  0F24  084A               	movf	??_scale+4,w
  2782  0F25  00AB               	movwf	___flmul@b+3
  2783  0F26  0849               	movf	??_scale+3,w
  2784  0F27  00AA               	movwf	___flmul@b+2
  2785  0F28  0848               	movf	??_scale+2,w
  2786  0F29  00A9               	movwf	___flmul@b+1
  2787  0F2A  0847               	movf	??_scale+1,w
  2788  0F2B  00A8               	movwf	___flmul@b
  2789  0F2C  0853               	movf	_scale$733+3,w
  2790  0F2D  00AF               	movwf	___flmul@a+3
  2791  0F2E  0852               	movf	_scale$733+2,w
  2792  0F2F  00AE               	movwf	___flmul@a+2
  2793  0F30  0851               	movf	_scale$733+1,w
  2794  0F31  00AD               	movwf	___flmul@a+1
  2795  0F32  0850               	movf	_scale$733,w
  2796  0F33  00AC               	movwf	___flmul@a
  2797  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2798  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0F3B  082B               	movf	?___flmul+3,w
  2801  0F3C  00C5               	movwf	?_scale+3
  2802  0F3D  082A               	movf	?___flmul+2,w
  2803  0F3E  00C4               	movwf	?_scale+2
  2804  0F3F  0829               	movf	?___flmul+1,w
  2805  0F40  00C3               	movwf	?_scale+1
  2806  0F41  0828               	movf	?___flmul,w
  2807  0F42  00C2               	movwf	?_scale
  2808  0F43  2FFF               	goto	l198
  2809  0F44                     l2770:
  2810  0F44  0854               	movf	scale@scl,w
  2811  0F45  3A80               	xorlw	128
  2812  0F46  3E75               	addlw	-139
  2813  0F47  1C03               	skipc
  2814  0F48  2F4A               	goto	u4231
  2815  0F49  2F4B               	goto	u4230
  2816  0F4A                     u4231:
  2817  0F4A  2FD3               	goto	l2776
  2818  0F4B                     u4230:
  2819  0F4B                     l2772:
  2820                           
  2821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2822  0F4B  300A               	movlw	10
  2823  0F4C  00F3               	movwf	___awmod@divisor
  2824  0F4D  3000               	movlw	0
  2825  0F4E  00F4               	movwf	___awmod@divisor+1
  2826  0F4F  0854               	movf	scale@scl,w
  2827  0F50  00F5               	movwf	___awmod@dividend
  2828  0F51  01F6               	clrf	___awmod@dividend+1
  2829  0F52  1BF5               	btfsc	___awmod@dividend,7
  2830  0F53  03F6               	decf	___awmod@dividend+1,f
  2831  0F54  160A  158A  25D6  120A  158A  	fcall	___awmod
  2832  0F59  0873               	movf	?___awmod,w
  2833  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2834  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2835  0F5C  00C6               	movwf	??_scale
  2836  0F5D  3001               	movlw	1
  2837  0F5E                     u4245:
  2838  0F5E  1003               	clrc
  2839  0F5F  0DC6               	rlf	??_scale,f
  2840  0F60  3EFF               	addlw	-1
  2841  0F61  1D03               	skipz
  2842  0F62  2F5E               	goto	u4245
  2843  0F63  1003               	clrc
  2844  0F64  0D46               	rlf	??_scale,w
  2845  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2846  0F66  0084               	movwf	4
  2847  0F67  160A  118A  2000  120A  158A  	fcall	stringdir
  2848  0F6C  00C7               	movwf	??_scale+1
  2849  0F6D  160A  118A  2000  120A  158A  	fcall	stringdir
  2850  0F72  00C8               	movwf	??_scale+2
  2851  0F73  160A  118A  2000  120A  158A  	fcall	stringdir
  2852  0F78  00C9               	movwf	??_scale+3
  2853  0F79  160A  118A  2000  120A  158A  	fcall	stringdir
  2854  0F7E  00CA               	movwf	??_scale+4
  2855  0F7F  084A               	movf	??_scale+4,w
  2856  0F80  00AB               	movwf	___flmul@b+3
  2857  0F81  0849               	movf	??_scale+3,w
  2858  0F82  00AA               	movwf	___flmul@b+2
  2859  0F83  0848               	movf	??_scale+2,w
  2860  0F84  00A9               	movwf	___flmul@b+1
  2861  0F85  0847               	movf	??_scale+1,w
  2862  0F86  00A8               	movwf	___flmul@b
  2863  0F87  300A               	movlw	10
  2864  0F88  00A0               	movwf	___awdiv@divisor
  2865  0F89  3000               	movlw	0
  2866  0F8A  00A1               	movwf	___awdiv@divisor+1
  2867  0F8B  0854               	movf	scale@scl,w
  2868  0F8C  00A2               	movwf	___awdiv@dividend
  2869  0F8D  01A3               	clrf	___awdiv@dividend+1
  2870  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  2871  0F8F  03A3               	decf	___awdiv@dividend+1,f
  2872  0F90  160A  158A  2697  120A  158A  	fcall	___awdiv
  2873  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2874  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2875  0F97  0820               	movf	?___awdiv,w
  2876  0F98  00CB               	movwf	??_scale+5
  2877  0F99  3001               	movlw	1
  2878  0F9A                     u4255:
  2879  0F9A  1003               	clrc
  2880  0F9B  0DCB               	rlf	??_scale+5,f
  2881  0F9C  3EFF               	addlw	-1
  2882  0F9D  1D03               	skipz
  2883  0F9E  2F9A               	goto	u4255
  2884  0F9F  1003               	clrc
  2885  0FA0  0D4B               	rlf	??_scale+5,w
  2886  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2887  0FA2  0084               	movwf	4
  2888  0FA3  160A  118A  2000  120A  158A  	fcall	stringdir
  2889  0FA8  00CC               	movwf	??_scale+6
  2890  0FA9  160A  118A  2000  120A  158A  	fcall	stringdir
  2891  0FAE  00CD               	movwf	??_scale+7
  2892  0FAF  160A  118A  2000  120A  158A  	fcall	stringdir
  2893  0FB4  00CE               	movwf	??_scale+8
  2894  0FB5  160A  118A  2000  120A  158A  	fcall	stringdir
  2895  0FBA  00CF               	movwf	??_scale+9
  2896  0FBB  084F               	movf	??_scale+9,w
  2897  0FBC  00AF               	movwf	___flmul@a+3
  2898  0FBD  084E               	movf	??_scale+8,w
  2899  0FBE  00AE               	movwf	___flmul@a+2
  2900  0FBF  084D               	movf	??_scale+7,w
  2901  0FC0  00AD               	movwf	___flmul@a+1
  2902  0FC1  084C               	movf	??_scale+6,w
  2903  0FC2  00AC               	movwf	___flmul@a
  2904  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  2905  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0FCA  082B               	movf	?___flmul+3,w
  2908  0FCB  00C5               	movwf	?_scale+3
  2909  0FCC  082A               	movf	?___flmul+2,w
  2910  0FCD  00C4               	movwf	?_scale+2
  2911  0FCE  0829               	movf	?___flmul+1,w
  2912  0FCF  00C3               	movwf	?_scale+1
  2913  0FD0  0828               	movf	?___flmul,w
  2914  0FD1  00C2               	movwf	?_scale
  2915  0FD2  2FFF               	goto	l198
  2916  0FD3                     l2776:
  2917                           
  2918                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  2919  0FD3  0854               	movf	scale@scl,w
  2920  0FD4  00C6               	movwf	??_scale
  2921  0FD5  3001               	movlw	1
  2922  0FD6                     u4265:
  2923  0FD6  1003               	clrc
  2924  0FD7  0DC6               	rlf	??_scale,f
  2925  0FD8  3EFF               	addlw	-1
  2926  0FD9  1D03               	skipz
  2927  0FDA  2FD6               	goto	u4265
  2928  0FDB  1003               	clrc
  2929  0FDC  0D46               	rlf	??_scale,w
  2930  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2931  0FDE  0084               	movwf	4
  2932  0FDF  160A  118A  2000  120A  158A  	fcall	stringdir
  2933  0FE4  00C7               	movwf	??_scale+1
  2934  0FE5  160A  118A  2000  120A  158A  	fcall	stringdir
  2935  0FEA  00C8               	movwf	??_scale+2
  2936  0FEB  160A  118A  2000  120A  158A  	fcall	stringdir
  2937  0FF0  00C9               	movwf	??_scale+3
  2938  0FF1  160A  118A  2000  120A  158A  	fcall	stringdir
  2939  0FF6  00CA               	movwf	??_scale+4
  2940  0FF7  084A               	movf	??_scale+4,w
  2941  0FF8  00C5               	movwf	?_scale+3
  2942  0FF9  0849               	movf	??_scale+3,w
  2943  0FFA  00C4               	movwf	?_scale+2
  2944  0FFB  0848               	movf	??_scale+2,w
  2945  0FFC  00C3               	movwf	?_scale+1
  2946  0FFD  0847               	movf	??_scale+1,w
  2947  0FFE  00C2               	movwf	?_scale
  2948  0FFF                     l198:
  2949  0FFF  0008               	return
  2950  1000                     __end_of_scale:
  2951                           
  2952                           	psect	text3
  2953  1DD6                     __ptext3:	
  2954 ;; *************** function ___awmod *****************
  2955 ;; Defined at:
  2956 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  divisor         2    2[COMMON] int 
  2959 ;;  dividend        2    4[COMMON] int 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  sign            1    7[COMMON] unsigned char 
  2962 ;;  counter         1    6[COMMON] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  2    2[COMMON] int 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0, btemp+1
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2972 ;;      Params:         4       0       0       0       0
  2973 ;;      Locals:         2       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0
  2975 ;;      Totals:         6       0       0       0       0
  2976 ;;Total ram usage:        6 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    1
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_scale
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           
  2987                           ;psect for function ___awmod
  2988  1DD6                     ___awmod:
  2989  1DD6                     l2256:	
  2990                           ;incstack = 0
  2991                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  2992                           
  2993  1DD6  01F8               	clrf	___awmod@sign
  2994  1DD7                     l2258:
  2995  1DD7  1FF6               	btfss	___awmod@dividend+1,7
  2996  1DD8  2DDA               	goto	u2941
  2997  1DD9  2DDB               	goto	u2940
  2998  1DDA                     u2941:
  2999  1DDA  2DE2               	goto	l2264
  3000  1DDB                     u2940:
  3001  1DDB                     l2260:
  3002  1DDB  09F5               	comf	___awmod@dividend,f
  3003  1DDC  09F6               	comf	___awmod@dividend+1,f
  3004  1DDD  0AF5               	incf	___awmod@dividend,f
  3005  1DDE  1903               	skipnz
  3006  1DDF  0AF6               	incf	___awmod@dividend+1,f
  3007  1DE0                     l2262:
  3008  1DE0  01F8               	clrf	___awmod@sign
  3009  1DE1  0AF8               	incf	___awmod@sign,f
  3010  1DE2                     l2264:
  3011  1DE2  1FF4               	btfss	___awmod@divisor+1,7
  3012  1DE3  2DE5               	goto	u2951
  3013  1DE4  2DE6               	goto	u2950
  3014  1DE5                     u2951:
  3015  1DE5  2DEB               	goto	l2268
  3016  1DE6                     u2950:
  3017  1DE6                     l2266:
  3018  1DE6  09F3               	comf	___awmod@divisor,f
  3019  1DE7  09F4               	comf	___awmod@divisor+1,f
  3020  1DE8  0AF3               	incf	___awmod@divisor,f
  3021  1DE9  1903               	skipnz
  3022  1DEA  0AF4               	incf	___awmod@divisor+1,f
  3023  1DEB                     l2268:
  3024  1DEB  0873               	movf	___awmod@divisor,w
  3025  1DEC  0474               	iorwf	___awmod@divisor+1,w
  3026  1DED  1903               	btfsc	3,2
  3027  1DEE  2DF0               	goto	u2961
  3028  1DEF  2DF1               	goto	u2960
  3029  1DF0                     u2961:
  3030  1DF0  2E20               	goto	l2286
  3031  1DF1                     u2960:
  3032  1DF1                     l2270:
  3033  1DF1  01F7               	clrf	___awmod@counter
  3034  1DF2  0AF7               	incf	___awmod@counter,f
  3035  1DF3  2DFF               	goto	l2276
  3036  1DF4                     l2272:
  3037  1DF4  3001               	movlw	1
  3038  1DF5                     u2975:
  3039  1DF5  1003               	clrc
  3040  1DF6  0DF3               	rlf	___awmod@divisor,f
  3041  1DF7  0DF4               	rlf	___awmod@divisor+1,f
  3042  1DF8  3EFF               	addlw	-1
  3043  1DF9  1D03               	skipz
  3044  1DFA  2DF5               	goto	u2975
  3045  1DFB                     l2274:
  3046  1DFB  3001               	movlw	1
  3047  1DFC  00FF               	movwf	btemp+1
  3048  1DFD  087F               	movf	btemp+1,w
  3049  1DFE  07F7               	addwf	___awmod@counter,f
  3050  1DFF                     l2276:
  3051  1DFF  1FF4               	btfss	___awmod@divisor+1,7
  3052  1E00  2E02               	goto	u2981
  3053  1E01  2E03               	goto	u2980
  3054  1E02                     u2981:
  3055  1E02  2DF4               	goto	l2272
  3056  1E03                     u2980:
  3057  1E03                     l2278:
  3058  1E03  0874               	movf	___awmod@divisor+1,w
  3059  1E04  0276               	subwf	___awmod@dividend+1,w
  3060  1E05  1D03               	skipz
  3061  1E06  2E09               	goto	u2995
  3062  1E07  0873               	movf	___awmod@divisor,w
  3063  1E08  0275               	subwf	___awmod@dividend,w
  3064  1E09                     u2995:
  3065  1E09  1C03               	skipc
  3066  1E0A  2E0C               	goto	u2991
  3067  1E0B  2E0D               	goto	u2990
  3068  1E0C                     u2991:
  3069  1E0C  2E13               	goto	l2282
  3070  1E0D                     u2990:
  3071  1E0D                     l2280:
  3072  1E0D  0873               	movf	___awmod@divisor,w
  3073  1E0E  02F5               	subwf	___awmod@dividend,f
  3074  1E0F  0874               	movf	___awmod@divisor+1,w
  3075  1E10  1C03               	skipc
  3076  1E11  03F6               	decf	___awmod@dividend+1,f
  3077  1E12  02F6               	subwf	___awmod@dividend+1,f
  3078  1E13                     l2282:
  3079  1E13  3001               	movlw	1
  3080  1E14                     u3005:
  3081  1E14  1003               	clrc
  3082  1E15  0CF4               	rrf	___awmod@divisor+1,f
  3083  1E16  0CF3               	rrf	___awmod@divisor,f
  3084  1E17  3EFF               	addlw	-1
  3085  1E18  1D03               	skipz
  3086  1E19  2E14               	goto	u3005
  3087  1E1A                     l2284:
  3088  1E1A  3001               	movlw	1
  3089  1E1B  02F7               	subwf	___awmod@counter,f
  3090  1E1C  1D03               	btfss	3,2
  3091  1E1D  2E1F               	goto	u3011
  3092  1E1E  2E20               	goto	u3010
  3093  1E1F                     u3011:
  3094  1E1F  2E03               	goto	l2278
  3095  1E20                     u3010:
  3096  1E20                     l2286:
  3097  1E20  0878               	movf	___awmod@sign,w
  3098  1E21  1903               	btfsc	3,2
  3099  1E22  2E24               	goto	u3021
  3100  1E23  2E25               	goto	u3020
  3101  1E24                     u3021:
  3102  1E24  2E2A               	goto	l2290
  3103  1E25                     u3020:
  3104  1E25                     l2288:
  3105  1E25  09F5               	comf	___awmod@dividend,f
  3106  1E26  09F6               	comf	___awmod@dividend+1,f
  3107  1E27  0AF5               	incf	___awmod@dividend,f
  3108  1E28  1903               	skipnz
  3109  1E29  0AF6               	incf	___awmod@dividend+1,f
  3110  1E2A                     l2290:
  3111  1E2A  0876               	movf	___awmod@dividend+1,w
  3112  1E2B  00F4               	movwf	?___awmod+1
  3113  1E2C  0875               	movf	___awmod@dividend,w
  3114  1E2D  00F3               	movwf	?___awmod
  3115  1E2E                     l451:
  3116  1E2E  0008               	return
  3117  1E2F                     __end_of___awmod:
  3118                           
  3119                           	psect	text4
  3120  1E97                     __ptext4:	
  3121 ;; *************** function ___awdiv *****************
  3122 ;; Defined at:
  3123 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  divisor         2    0[BANK0 ] int 
  3126 ;;  dividend        2    2[BANK0 ] int 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  quotient        2    6[BANK0 ] int 
  3129 ;;  sign            1    5[BANK0 ] unsigned char 
  3130 ;;  counter         1    4[BANK0 ] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  2    0[BANK0 ] int 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, btemp+1
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       4       0       0       0
  3141 ;;      Locals:         0       4       0       0       0
  3142 ;;      Temps:          0       0       0       0       0
  3143 ;;      Totals:         0       8       0       0       0
  3144 ;;Total ram usage:        8 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    1
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_scale
  3151 ;;		_sprintf
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function ___awdiv
  3157  1E97                     ___awdiv:
  3158  1E97                     l2212:	
  3159                           ;incstack = 0
  3160                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3161                           
  3162  1E97  1283               	bcf	3,5	;RP0=0, select bank0
  3163  1E98  1303               	bcf	3,6	;RP1=0, select bank0
  3164  1E99  01A5               	clrf	___awdiv@sign
  3165  1E9A                     l2214:
  3166  1E9A  1FA1               	btfss	___awdiv@divisor+1,7
  3167  1E9B  2E9D               	goto	u2841
  3168  1E9C  2E9E               	goto	u2840
  3169  1E9D                     u2841:
  3170  1E9D  2EA5               	goto	l2220
  3171  1E9E                     u2840:
  3172  1E9E                     l2216:
  3173  1E9E  09A0               	comf	___awdiv@divisor,f
  3174  1E9F  09A1               	comf	___awdiv@divisor+1,f
  3175  1EA0  0AA0               	incf	___awdiv@divisor,f
  3176  1EA1  1903               	skipnz
  3177  1EA2  0AA1               	incf	___awdiv@divisor+1,f
  3178  1EA3                     l2218:
  3179  1EA3  01A5               	clrf	___awdiv@sign
  3180  1EA4  0AA5               	incf	___awdiv@sign,f
  3181  1EA5                     l2220:
  3182  1EA5  1FA3               	btfss	___awdiv@dividend+1,7
  3183  1EA6  2EA8               	goto	u2851
  3184  1EA7  2EA9               	goto	u2850
  3185  1EA8                     u2851:
  3186  1EA8  2EB2               	goto	l2226
  3187  1EA9                     u2850:
  3188  1EA9                     l2222:
  3189  1EA9  09A2               	comf	___awdiv@dividend,f
  3190  1EAA  09A3               	comf	___awdiv@dividend+1,f
  3191  1EAB  0AA2               	incf	___awdiv@dividend,f
  3192  1EAC  1903               	skipnz
  3193  1EAD  0AA3               	incf	___awdiv@dividend+1,f
  3194  1EAE                     l2224:
  3195  1EAE  3001               	movlw	1
  3196  1EAF  00FF               	movwf	btemp+1
  3197  1EB0  087F               	movf	btemp+1,w
  3198  1EB1  06A5               	xorwf	___awdiv@sign,f
  3199  1EB2                     l2226:
  3200  1EB2  01A6               	clrf	___awdiv@quotient
  3201  1EB3  01A7               	clrf	___awdiv@quotient+1
  3202  1EB4                     l2228:
  3203  1EB4  0820               	movf	___awdiv@divisor,w
  3204  1EB5  0421               	iorwf	___awdiv@divisor+1,w
  3205  1EB6  1903               	btfsc	3,2
  3206  1EB7  2EB9               	goto	u2861
  3207  1EB8  2EBA               	goto	u2860
  3208  1EB9                     u2861:
  3209  1EB9  2EF1               	goto	l2248
  3210  1EBA                     u2860:
  3211  1EBA                     l2230:
  3212  1EBA  01A4               	clrf	___awdiv@counter
  3213  1EBB  0AA4               	incf	___awdiv@counter,f
  3214  1EBC  2EC8               	goto	l2236
  3215  1EBD                     l2232:
  3216  1EBD  3001               	movlw	1
  3217  1EBE                     u2875:
  3218  1EBE  1003               	clrc
  3219  1EBF  0DA0               	rlf	___awdiv@divisor,f
  3220  1EC0  0DA1               	rlf	___awdiv@divisor+1,f
  3221  1EC1  3EFF               	addlw	-1
  3222  1EC2  1D03               	skipz
  3223  1EC3  2EBE               	goto	u2875
  3224  1EC4                     l2234:
  3225  1EC4  3001               	movlw	1
  3226  1EC5  00FF               	movwf	btemp+1
  3227  1EC6  087F               	movf	btemp+1,w
  3228  1EC7  07A4               	addwf	___awdiv@counter,f
  3229  1EC8                     l2236:
  3230  1EC8  1FA1               	btfss	___awdiv@divisor+1,7
  3231  1EC9  2ECB               	goto	u2881
  3232  1ECA  2ECC               	goto	u2880
  3233  1ECB                     u2881:
  3234  1ECB  2EBD               	goto	l2232
  3235  1ECC                     u2880:
  3236  1ECC                     l2238:
  3237  1ECC  3001               	movlw	1
  3238  1ECD                     u2895:
  3239  1ECD  1003               	clrc
  3240  1ECE  0DA6               	rlf	___awdiv@quotient,f
  3241  1ECF  0DA7               	rlf	___awdiv@quotient+1,f
  3242  1ED0  3EFF               	addlw	-1
  3243  1ED1  1D03               	skipz
  3244  1ED2  2ECD               	goto	u2895
  3245  1ED3  0821               	movf	___awdiv@divisor+1,w
  3246  1ED4  0223               	subwf	___awdiv@dividend+1,w
  3247  1ED5  1D03               	skipz
  3248  1ED6  2ED9               	goto	u2905
  3249  1ED7  0820               	movf	___awdiv@divisor,w
  3250  1ED8  0222               	subwf	___awdiv@dividend,w
  3251  1ED9                     u2905:
  3252  1ED9  1C03               	skipc
  3253  1EDA  2EDC               	goto	u2901
  3254  1EDB  2EDD               	goto	u2900
  3255  1EDC                     u2901:
  3256  1EDC  2EE4               	goto	l2244
  3257  1EDD                     u2900:
  3258  1EDD                     l2240:
  3259  1EDD  0820               	movf	___awdiv@divisor,w
  3260  1EDE  02A2               	subwf	___awdiv@dividend,f
  3261  1EDF  0821               	movf	___awdiv@divisor+1,w
  3262  1EE0  1C03               	skipc
  3263  1EE1  03A3               	decf	___awdiv@dividend+1,f
  3264  1EE2  02A3               	subwf	___awdiv@dividend+1,f
  3265  1EE3                     l2242:
  3266  1EE3  1426               	bsf	___awdiv@quotient,0
  3267  1EE4                     l2244:
  3268  1EE4  3001               	movlw	1
  3269  1EE5                     u2915:
  3270  1EE5  1003               	clrc
  3271  1EE6  0CA1               	rrf	___awdiv@divisor+1,f
  3272  1EE7  0CA0               	rrf	___awdiv@divisor,f
  3273  1EE8  3EFF               	addlw	-1
  3274  1EE9  1D03               	skipz
  3275  1EEA  2EE5               	goto	u2915
  3276  1EEB                     l2246:
  3277  1EEB  3001               	movlw	1
  3278  1EEC  02A4               	subwf	___awdiv@counter,f
  3279  1EED  1D03               	btfss	3,2
  3280  1EEE  2EF0               	goto	u2921
  3281  1EEF  2EF1               	goto	u2920
  3282  1EF0                     u2921:
  3283  1EF0  2ECC               	goto	l2238
  3284  1EF1                     u2920:
  3285  1EF1                     l2248:
  3286  1EF1  0825               	movf	___awdiv@sign,w
  3287  1EF2  1903               	btfsc	3,2
  3288  1EF3  2EF5               	goto	u2931
  3289  1EF4  2EF6               	goto	u2930
  3290  1EF5                     u2931:
  3291  1EF5  2EFB               	goto	l2252
  3292  1EF6                     u2930:
  3293  1EF6                     l2250:
  3294  1EF6  09A6               	comf	___awdiv@quotient,f
  3295  1EF7  09A7               	comf	___awdiv@quotient+1,f
  3296  1EF8  0AA6               	incf	___awdiv@quotient,f
  3297  1EF9  1903               	skipnz
  3298  1EFA  0AA7               	incf	___awdiv@quotient+1,f
  3299  1EFB                     l2252:
  3300  1EFB  0827               	movf	___awdiv@quotient+1,w
  3301  1EFC  00A1               	movwf	?___awdiv+1
  3302  1EFD  0826               	movf	___awdiv@quotient,w
  3303  1EFE  00A0               	movwf	?___awdiv
  3304  1EFF                     l438:
  3305  1EFF  0008               	return
  3306  1F00                     __end_of___awdiv:
  3307                           
  3308                           	psect	text5
  3309  1B85                     __ptext5:	
  3310 ;; *************** function _isdigit *****************
  3311 ;; Defined at:
  3312 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\isdigit.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  c               1    wreg     unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  c               1    3[COMMON] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;		None               void
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3326 ;;      Params:         0       0       0       0       0
  3327 ;;      Locals:         2       0       0       0       0
  3328 ;;      Temps:          0       0       0       0       0
  3329 ;;      Totals:         2       0       0       0       0
  3330 ;;Total ram usage:        2 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    1
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_sprintf
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           
  3341                           ;psect for function _isdigit
  3342  1B85                     _isdigit:
  3343                           
  3344                           ;incstack = 0
  3345                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3346                           ;isdigit@c stored from wreg
  3347  1B85  00F4               	movwf	isdigit@c
  3348  1B86                     l2780:
  3349  1B86  01F3               	clrf	_isdigit$600
  3350  1B87                     l2782:
  3351  1B87  303A               	movlw	58
  3352  1B88  0274               	subwf	isdigit@c,w
  3353  1B89  1803               	skipnc
  3354  1B8A  2B8C               	goto	u4271
  3355  1B8B  2B8D               	goto	u4270
  3356  1B8C                     u4271:
  3357  1B8C  2B95               	goto	l2788
  3358  1B8D                     u4270:
  3359  1B8D                     l2784:
  3360  1B8D  3030               	movlw	48
  3361  1B8E  0274               	subwf	isdigit@c,w
  3362  1B8F  1C03               	skipc
  3363  1B90  2B92               	goto	u4281
  3364  1B91  2B93               	goto	u4280
  3365  1B92                     u4281:
  3366  1B92  2B95               	goto	l2788
  3367  1B93                     u4280:
  3368  1B93                     l2786:
  3369  1B93  01F3               	clrf	_isdigit$600
  3370  1B94  0AF3               	incf	_isdigit$600,f
  3371  1B95                     l2788:
  3372  1B95  0C73               	rrf	_isdigit$600,w
  3373  1B96                     l772:
  3374  1B96  0008               	return
  3375  1B97                     __end_of_isdigit:
  3376                           
  3377                           	psect	text6
  3378  136D                     __ptext6:	
  3379 ;; *************** function _fround *****************
  3380 ;; Defined at:
  3381 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  prec            1    wreg     unsigned char 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  prec            1   53[BANK0 ] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  4   34[BANK0 ] unsigned char 
  3388 ;; Registers used:
  3389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3395 ;;      Params:         0       4       0       0       0
  3396 ;;      Locals:         0       9       0       0       0
  3397 ;;      Temps:          0       7       0       0       0
  3398 ;;      Totals:         0      20       0       0       0
  3399 ;;Total ram usage:       20 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    3
  3402 ;; This function calls:
  3403 ;;		___flmul
  3404 ;;		___lwdiv
  3405 ;;		___lwmod
  3406 ;; This function is called by:
  3407 ;;		_sprintf
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           
  3412                           ;psect for function _fround
  3413  136D                     _fround:
  3414                           
  3415                           ;incstack = 0
  3416                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3417                           ;fround@prec stored from wreg
  3418  136D  1283               	bcf	3,5	;RP0=0, select bank0
  3419  136E  1303               	bcf	3,6	;RP1=0, select bank0
  3420  136F  00D5               	movwf	fround@prec
  3421  1370                     l2722:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3424  1370  306E               	movlw	110
  3425  1371  0255               	subwf	fround@prec,w
  3426  1372  1C03               	skipc
  3427  1373  2B75               	goto	u4021
  3428  1374  2B76               	goto	u4020
  3429  1375                     u4021:
  3430  1375  2C83               	goto	l2730
  3431  1376                     u4020:
  3432  1376                     l2724:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3435  1376  303F               	movlw	63
  3436  1377  00AB               	movwf	___flmul@b+3
  3437  1378  3000               	movlw	0
  3438  1379  00AA               	movwf	___flmul@b+2
  3439  137A  3000               	movlw	0
  3440  137B  00A9               	movwf	___flmul@b+1
  3441  137C  3000               	movlw	0
  3442  137D  00A8               	movwf	___flmul@b
  3443  137E  3064               	movlw	100
  3444  137F  00F8               	movwf	___lwdiv@divisor
  3445  1380  3000               	movlw	0
  3446  1381  00F9               	movwf	___lwdiv@divisor+1
  3447  1382  0855               	movf	fround@prec,w
  3448  1383  00C6               	movwf	??_fround
  3449  1384  01C7               	clrf	??_fround+1
  3450  1385  0846               	movf	??_fround,w
  3451  1386  00FA               	movwf	___lwdiv@dividend
  3452  1387  0847               	movf	??_fround+1,w
  3453  1388  00FB               	movwf	___lwdiv@dividend+1
  3454  1389  160A  158A  24A2  160A  118A  	fcall	___lwdiv
  3455  138E  0878               	movf	?___lwdiv,w
  3456  138F  1283               	bcf	3,5	;RP0=0, select bank0
  3457  1390  1303               	bcf	3,6	;RP1=0, select bank0
  3458  1391  00C8               	movwf	??_fround+2
  3459  1392  3001               	movlw	1
  3460  1393                     u4035:
  3461  1393  1003               	clrc
  3462  1394  0DC8               	rlf	??_fround+2,f
  3463  1395  3EFF               	addlw	-1
  3464  1396  1D03               	skipz
  3465  1397  2B93               	goto	u4035
  3466  1398  1003               	clrc
  3467  1399  0D48               	rlf	??_fround+2,w
  3468  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3469  139B  0084               	movwf	4
  3470  139C  160A  118A  2000  160A  118A  	fcall	stringdir
  3471  13A1  00C9               	movwf	??_fround+3
  3472  13A2  160A  118A  2000  160A  118A  	fcall	stringdir
  3473  13A7  00CA               	movwf	??_fround+4
  3474  13A8  160A  118A  2000  160A  118A  	fcall	stringdir
  3475  13AD  00CB               	movwf	??_fround+5
  3476  13AE  160A  118A  2000  160A  118A  	fcall	stringdir
  3477  13B3  00CC               	movwf	??_fround+6
  3478  13B4  084C               	movf	??_fround+6,w
  3479  13B5  00AF               	movwf	___flmul@a+3
  3480  13B6  084B               	movf	??_fround+5,w
  3481  13B7  00AE               	movwf	___flmul@a+2
  3482  13B8  084A               	movf	??_fround+4,w
  3483  13B9  00AD               	movwf	___flmul@a+1
  3484  13BA  0849               	movf	??_fround+3,w
  3485  13BB  00AC               	movwf	___flmul@a
  3486  13BC  120A  158A  213C  160A  118A  	fcall	___flmul
  3487  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  3488  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  3489  13C3  082B               	movf	?___flmul+3,w
  3490  13C4  00D4               	movwf	_fround$731+3
  3491  13C5  082A               	movf	?___flmul+2,w
  3492  13C6  00D3               	movwf	_fround$731+2
  3493  13C7  0829               	movf	?___flmul+1,w
  3494  13C8  00D2               	movwf	_fround$731+1
  3495  13C9  0828               	movf	?___flmul,w
  3496  13CA  00D1               	movwf	_fround$731
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3499  13CB  300A               	movlw	10
  3500  13CC  00F8               	movwf	___lwdiv@divisor
  3501  13CD  3000               	movlw	0
  3502  13CE  00F9               	movwf	___lwdiv@divisor+1
  3503  13CF  0855               	movf	fround@prec,w
  3504  13D0  00C6               	movwf	??_fround
  3505  13D1  01C7               	clrf	??_fround+1
  3506  13D2  0846               	movf	??_fround,w
  3507  13D3  00F5               	movwf	___lwmod@dividend
  3508  13D4  0847               	movf	??_fround+1,w
  3509  13D5  00F6               	movwf	___lwmod@dividend+1
  3510  13D6  3064               	movlw	100
  3511  13D7  00F3               	movwf	___lwmod@divisor
  3512  13D8  3000               	movlw	0
  3513  13D9  00F4               	movwf	___lwmod@divisor+1
  3514  13DA  160A  158A  2468  160A  118A  	fcall	___lwmod
  3515  13DF  0874               	movf	?___lwmod+1,w
  3516  13E0  00FB               	movwf	___lwdiv@dividend+1
  3517  13E1  0873               	movf	?___lwmod,w
  3518  13E2  00FA               	movwf	___lwdiv@dividend
  3519  13E3  160A  158A  24A2  160A  118A  	fcall	___lwdiv
  3520  13E8  0878               	movf	?___lwdiv,w
  3521  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  3522  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  3523  13EB  00C8               	movwf	??_fround+2
  3524  13EC  3001               	movlw	1
  3525  13ED                     u4045:
  3526  13ED  1003               	clrc
  3527  13EE  0DC8               	rlf	??_fround+2,f
  3528  13EF  3EFF               	addlw	-1
  3529  13F0  1D03               	skipz
  3530  13F1  2BED               	goto	u4045
  3531  13F2  1003               	clrc
  3532  13F3  0D48               	rlf	??_fround+2,w
  3533  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3534  13F5  0084               	movwf	4
  3535  13F6  160A  118A  2000  160A  118A  	fcall	stringdir
  3536  13FB  00C9               	movwf	??_fround+3
  3537  13FC  160A  118A  2000  160A  118A  	fcall	stringdir
  3538  1401  00CA               	movwf	??_fround+4
  3539  1402  160A  118A  2000  160A  118A  	fcall	stringdir
  3540  1407  00CB               	movwf	??_fround+5
  3541  1408  160A  118A  2000  160A  118A  	fcall	stringdir
  3542  140D  00CC               	movwf	??_fround+6
  3543  140E  084C               	movf	??_fround+6,w
  3544  140F  00AB               	movwf	___flmul@b+3
  3545  1410  084B               	movf	??_fround+5,w
  3546  1411  00AA               	movwf	___flmul@b+2
  3547  1412  084A               	movf	??_fround+4,w
  3548  1413  00A9               	movwf	___flmul@b+1
  3549  1414  0849               	movf	??_fround+3,w
  3550  1415  00A8               	movwf	___flmul@b
  3551  1416  0854               	movf	_fround$731+3,w
  3552  1417  00AF               	movwf	___flmul@a+3
  3553  1418  0853               	movf	_fround$731+2,w
  3554  1419  00AE               	movwf	___flmul@a+2
  3555  141A  0852               	movf	_fround$731+1,w
  3556  141B  00AD               	movwf	___flmul@a+1
  3557  141C  0851               	movf	_fround$731,w
  3558  141D  00AC               	movwf	___flmul@a
  3559  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  3560  1423  1283               	bcf	3,5	;RP0=0, select bank0
  3561  1424  1303               	bcf	3,6	;RP1=0, select bank0
  3562  1425  082B               	movf	?___flmul+3,w
  3563  1426  00D0               	movwf	_fround$732+3
  3564  1427  082A               	movf	?___flmul+2,w
  3565  1428  00CF               	movwf	_fround$732+2
  3566  1429  0829               	movf	?___flmul+1,w
  3567  142A  00CE               	movwf	_fround$732+1
  3568  142B  0828               	movf	?___flmul,w
  3569  142C  00CD               	movwf	_fround$732
  3570                           
  3571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3572  142D  300A               	movlw	10
  3573  142E  00F3               	movwf	___lwmod@divisor
  3574  142F  3000               	movlw	0
  3575  1430  00F4               	movwf	___lwmod@divisor+1
  3576  1431  0855               	movf	fround@prec,w
  3577  1432  00C6               	movwf	??_fround
  3578  1433  01C7               	clrf	??_fround+1
  3579  1434  0846               	movf	??_fround,w
  3580  1435  00F5               	movwf	___lwmod@dividend
  3581  1436  0847               	movf	??_fround+1,w
  3582  1437  00F6               	movwf	___lwmod@dividend+1
  3583  1438  160A  158A  2468  160A  118A  	fcall	___lwmod
  3584  143D  0873               	movf	?___lwmod,w
  3585  143E  1283               	bcf	3,5	;RP0=0, select bank0
  3586  143F  1303               	bcf	3,6	;RP1=0, select bank0
  3587  1440  00C8               	movwf	??_fround+2
  3588  1441  3001               	movlw	1
  3589  1442                     u4055:
  3590  1442  1003               	clrc
  3591  1443  0DC8               	rlf	??_fround+2,f
  3592  1444  3EFF               	addlw	-1
  3593  1445  1D03               	skipz
  3594  1446  2C42               	goto	u4055
  3595  1447  1003               	clrc
  3596  1448  0D48               	rlf	??_fround+2,w
  3597  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3598  144A  0084               	movwf	4
  3599  144B  160A  118A  2000  160A  118A  	fcall	stringdir
  3600  1450  00C9               	movwf	??_fround+3
  3601  1451  160A  118A  2000  160A  118A  	fcall	stringdir
  3602  1456  00CA               	movwf	??_fround+4
  3603  1457  160A  118A  2000  160A  118A  	fcall	stringdir
  3604  145C  00CB               	movwf	??_fround+5
  3605  145D  160A  118A  2000  160A  118A  	fcall	stringdir
  3606  1462  00CC               	movwf	??_fround+6
  3607  1463  084C               	movf	??_fround+6,w
  3608  1464  00AB               	movwf	___flmul@b+3
  3609  1465  084B               	movf	??_fround+5,w
  3610  1466  00AA               	movwf	___flmul@b+2
  3611  1467  084A               	movf	??_fround+4,w
  3612  1468  00A9               	movwf	___flmul@b+1
  3613  1469  0849               	movf	??_fround+3,w
  3614  146A  00A8               	movwf	___flmul@b
  3615  146B  0850               	movf	_fround$732+3,w
  3616  146C  00AF               	movwf	___flmul@a+3
  3617  146D  084F               	movf	_fround$732+2,w
  3618  146E  00AE               	movwf	___flmul@a+2
  3619  146F  084E               	movf	_fround$732+1,w
  3620  1470  00AD               	movwf	___flmul@a+1
  3621  1471  084D               	movf	_fround$732,w
  3622  1472  00AC               	movwf	___flmul@a
  3623  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  3624  1478  1283               	bcf	3,5	;RP0=0, select bank0
  3625  1479  1303               	bcf	3,6	;RP1=0, select bank0
  3626  147A  082B               	movf	?___flmul+3,w
  3627  147B  00C5               	movwf	?_fround+3
  3628  147C  082A               	movf	?___flmul+2,w
  3629  147D  00C4               	movwf	?_fround+2
  3630  147E  0829               	movf	?___flmul+1,w
  3631  147F  00C3               	movwf	?_fround+1
  3632  1480  0828               	movf	?___flmul,w
  3633  1481  00C2               	movwf	?_fround
  3634  1482  2D77               	goto	l191
  3635  1483                     l2730:
  3636  1483  300B               	movlw	11
  3637  1484  0255               	subwf	fround@prec,w
  3638  1485  1C03               	skipc
  3639  1486  2C88               	goto	u4061
  3640  1487  2C89               	goto	u4060
  3641  1488                     u4061:
  3642  1488  2D34               	goto	l2736
  3643  1489                     u4060:
  3644  1489                     l2732:
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3647  1489  303F               	movlw	63
  3648  148A  00AB               	movwf	___flmul@b+3
  3649  148B  3000               	movlw	0
  3650  148C  00AA               	movwf	___flmul@b+2
  3651  148D  3000               	movlw	0
  3652  148E  00A9               	movwf	___flmul@b+1
  3653  148F  3000               	movlw	0
  3654  1490  00A8               	movwf	___flmul@b
  3655  1491  300A               	movlw	10
  3656  1492  00F8               	movwf	___lwdiv@divisor
  3657  1493  3000               	movlw	0
  3658  1494  00F9               	movwf	___lwdiv@divisor+1
  3659  1495  0855               	movf	fround@prec,w
  3660  1496  00C6               	movwf	??_fround
  3661  1497  01C7               	clrf	??_fround+1
  3662  1498  0846               	movf	??_fround,w
  3663  1499  00FA               	movwf	___lwdiv@dividend
  3664  149A  0847               	movf	??_fround+1,w
  3665  149B  00FB               	movwf	___lwdiv@dividend+1
  3666  149C  160A  158A  24A2  160A  118A  	fcall	___lwdiv
  3667  14A1  0878               	movf	?___lwdiv,w
  3668  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  3669  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  3670  14A4  00C8               	movwf	??_fround+2
  3671  14A5  3001               	movlw	1
  3672  14A6                     u4075:
  3673  14A6  1003               	clrc
  3674  14A7  0DC8               	rlf	??_fround+2,f
  3675  14A8  3EFF               	addlw	-1
  3676  14A9  1D03               	skipz
  3677  14AA  2CA6               	goto	u4075
  3678  14AB  1003               	clrc
  3679  14AC  0D48               	rlf	??_fround+2,w
  3680  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3681  14AE  0084               	movwf	4
  3682  14AF  160A  118A  2000  160A  118A  	fcall	stringdir
  3683  14B4  00C9               	movwf	??_fround+3
  3684  14B5  160A  118A  2000  160A  118A  	fcall	stringdir
  3685  14BA  00CA               	movwf	??_fround+4
  3686  14BB  160A  118A  2000  160A  118A  	fcall	stringdir
  3687  14C0  00CB               	movwf	??_fround+5
  3688  14C1  160A  118A  2000  160A  118A  	fcall	stringdir
  3689  14C6  00CC               	movwf	??_fround+6
  3690  14C7  084C               	movf	??_fround+6,w
  3691  14C8  00AF               	movwf	___flmul@a+3
  3692  14C9  084B               	movf	??_fround+5,w
  3693  14CA  00AE               	movwf	___flmul@a+2
  3694  14CB  084A               	movf	??_fround+4,w
  3695  14CC  00AD               	movwf	___flmul@a+1
  3696  14CD  0849               	movf	??_fround+3,w
  3697  14CE  00AC               	movwf	___flmul@a
  3698  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  3699  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  3700  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  3701  14D6  082B               	movf	?___flmul+3,w
  3702  14D7  00D4               	movwf	_fround$731+3
  3703  14D8  082A               	movf	?___flmul+2,w
  3704  14D9  00D3               	movwf	_fround$731+2
  3705  14DA  0829               	movf	?___flmul+1,w
  3706  14DB  00D2               	movwf	_fround$731+1
  3707  14DC  0828               	movf	?___flmul,w
  3708  14DD  00D1               	movwf	_fround$731
  3709                           
  3710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3711  14DE  300A               	movlw	10
  3712  14DF  00F3               	movwf	___lwmod@divisor
  3713  14E0  3000               	movlw	0
  3714  14E1  00F4               	movwf	___lwmod@divisor+1
  3715  14E2  0855               	movf	fround@prec,w
  3716  14E3  00C6               	movwf	??_fround
  3717  14E4  01C7               	clrf	??_fround+1
  3718  14E5  0846               	movf	??_fround,w
  3719  14E6  00F5               	movwf	___lwmod@dividend
  3720  14E7  0847               	movf	??_fround+1,w
  3721  14E8  00F6               	movwf	___lwmod@dividend+1
  3722  14E9  160A  158A  2468  160A  118A  	fcall	___lwmod
  3723  14EE  0873               	movf	?___lwmod,w
  3724  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  3725  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  3726  14F1  00C8               	movwf	??_fround+2
  3727  14F2  3001               	movlw	1
  3728  14F3                     u4085:
  3729  14F3  1003               	clrc
  3730  14F4  0DC8               	rlf	??_fround+2,f
  3731  14F5  3EFF               	addlw	-1
  3732  14F6  1D03               	skipz
  3733  14F7  2CF3               	goto	u4085
  3734  14F8  1003               	clrc
  3735  14F9  0D48               	rlf	??_fround+2,w
  3736  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3737  14FB  0084               	movwf	4
  3738  14FC  160A  118A  2000  160A  118A  	fcall	stringdir
  3739  1501  00C9               	movwf	??_fround+3
  3740  1502  160A  118A  2000  160A  118A  	fcall	stringdir
  3741  1507  00CA               	movwf	??_fround+4
  3742  1508  160A  118A  2000  160A  118A  	fcall	stringdir
  3743  150D  00CB               	movwf	??_fround+5
  3744  150E  160A  118A  2000  160A  118A  	fcall	stringdir
  3745  1513  00CC               	movwf	??_fround+6
  3746  1514  084C               	movf	??_fround+6,w
  3747  1515  00AB               	movwf	___flmul@b+3
  3748  1516  084B               	movf	??_fround+5,w
  3749  1517  00AA               	movwf	___flmul@b+2
  3750  1518  084A               	movf	??_fround+4,w
  3751  1519  00A9               	movwf	___flmul@b+1
  3752  151A  0849               	movf	??_fround+3,w
  3753  151B  00A8               	movwf	___flmul@b
  3754  151C  0854               	movf	_fround$731+3,w
  3755  151D  00AF               	movwf	___flmul@a+3
  3756  151E  0853               	movf	_fround$731+2,w
  3757  151F  00AE               	movwf	___flmul@a+2
  3758  1520  0852               	movf	_fround$731+1,w
  3759  1521  00AD               	movwf	___flmul@a+1
  3760  1522  0851               	movf	_fround$731,w
  3761  1523  00AC               	movwf	___flmul@a
  3762  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  3763  1529  1283               	bcf	3,5	;RP0=0, select bank0
  3764  152A  1303               	bcf	3,6	;RP1=0, select bank0
  3765  152B  082B               	movf	?___flmul+3,w
  3766  152C  00C5               	movwf	?_fround+3
  3767  152D  082A               	movf	?___flmul+2,w
  3768  152E  00C4               	movwf	?_fround+2
  3769  152F  0829               	movf	?___flmul+1,w
  3770  1530  00C3               	movwf	?_fround+1
  3771  1531  0828               	movf	?___flmul,w
  3772  1532  00C2               	movwf	?_fround
  3773  1533  2D77               	goto	l191
  3774  1534                     l2736:
  3775                           
  3776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3777  1534  303F               	movlw	63
  3778  1535  00AB               	movwf	___flmul@b+3
  3779  1536  3000               	movlw	0
  3780  1537  00AA               	movwf	___flmul@b+2
  3781  1538  3000               	movlw	0
  3782  1539  00A9               	movwf	___flmul@b+1
  3783  153A  3000               	movlw	0
  3784  153B  00A8               	movwf	___flmul@b
  3785  153C  0855               	movf	fround@prec,w
  3786  153D  00C6               	movwf	??_fround
  3787  153E  3001               	movlw	1
  3788  153F                     u4095:
  3789  153F  1003               	clrc
  3790  1540  0DC6               	rlf	??_fround,f
  3791  1541  3EFF               	addlw	-1
  3792  1542  1D03               	skipz
  3793  1543  2D3F               	goto	u4095
  3794  1544  1003               	clrc
  3795  1545  0D46               	rlf	??_fround,w
  3796  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3797  1547  0084               	movwf	4
  3798  1548  160A  118A  2000  160A  118A  	fcall	stringdir
  3799  154D  00C7               	movwf	??_fround+1
  3800  154E  160A  118A  2000  160A  118A  	fcall	stringdir
  3801  1553  00C8               	movwf	??_fround+2
  3802  1554  160A  118A  2000  160A  118A  	fcall	stringdir
  3803  1559  00C9               	movwf	??_fround+3
  3804  155A  160A  118A  2000  160A  118A  	fcall	stringdir
  3805  155F  00CA               	movwf	??_fround+4
  3806  1560  084A               	movf	??_fround+4,w
  3807  1561  00AF               	movwf	___flmul@a+3
  3808  1562  0849               	movf	??_fround+3,w
  3809  1563  00AE               	movwf	___flmul@a+2
  3810  1564  0848               	movf	??_fround+2,w
  3811  1565  00AD               	movwf	___flmul@a+1
  3812  1566  0847               	movf	??_fround+1,w
  3813  1567  00AC               	movwf	___flmul@a
  3814  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  3815  156D  1283               	bcf	3,5	;RP0=0, select bank0
  3816  156E  1303               	bcf	3,6	;RP1=0, select bank0
  3817  156F  082B               	movf	?___flmul+3,w
  3818  1570  00C5               	movwf	?_fround+3
  3819  1571  082A               	movf	?___flmul+2,w
  3820  1572  00C4               	movwf	?_fround+2
  3821  1573  0829               	movf	?___flmul+1,w
  3822  1574  00C3               	movwf	?_fround+1
  3823  1575  0828               	movf	?___flmul,w
  3824  1576  00C2               	movwf	?_fround
  3825  1577                     l191:
  3826  1577  0008               	return
  3827  1578                     __end_of_fround:
  3828                           
  3829                           	psect	text7
  3830  1C68                     __ptext7:	
  3831 ;; *************** function ___lwmod *****************
  3832 ;; Defined at:
  3833 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  divisor         2    2[COMMON] unsigned int 
  3836 ;;  dividend        2    4[COMMON] unsigned int 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  counter         1    6[COMMON] unsigned char 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  2    2[COMMON] unsigned int 
  3841 ;; Registers used:
  3842 ;;		wreg, status,2, status,0, btemp+1
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3848 ;;      Params:         4       0       0       0       0
  3849 ;;      Locals:         1       0       0       0       0
  3850 ;;      Temps:          0       0       0       0       0
  3851 ;;      Totals:         5       0       0       0       0
  3852 ;;Total ram usage:        5 bytes
  3853 ;; Hardware stack levels used:    1
  3854 ;; Hardware stack levels required when called:    1
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_fround
  3859 ;;		_puts_float
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           
  3864                           ;psect for function ___lwmod
  3865  1C68                     ___lwmod:
  3866  1C68                     l2320:	
  3867                           ;incstack = 0
  3868                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3869                           
  3870  1C68  0873               	movf	___lwmod@divisor,w
  3871  1C69  0474               	iorwf	___lwmod@divisor+1,w
  3872  1C6A  1903               	btfsc	3,2
  3873  1C6B  2C6D               	goto	u3101
  3874  1C6C  2C6E               	goto	u3100
  3875  1C6D                     u3101:
  3876  1C6D  2C9D               	goto	l2338
  3877  1C6E                     u3100:
  3878  1C6E                     l2322:
  3879  1C6E  01F7               	clrf	___lwmod@counter
  3880  1C6F  0AF7               	incf	___lwmod@counter,f
  3881  1C70  2C7C               	goto	l2328
  3882  1C71                     l2324:
  3883  1C71  3001               	movlw	1
  3884  1C72                     u3115:
  3885  1C72  1003               	clrc
  3886  1C73  0DF3               	rlf	___lwmod@divisor,f
  3887  1C74  0DF4               	rlf	___lwmod@divisor+1,f
  3888  1C75  3EFF               	addlw	-1
  3889  1C76  1D03               	skipz
  3890  1C77  2C72               	goto	u3115
  3891  1C78                     l2326:
  3892  1C78  3001               	movlw	1
  3893  1C79  00FF               	movwf	btemp+1
  3894  1C7A  087F               	movf	btemp+1,w
  3895  1C7B  07F7               	addwf	___lwmod@counter,f
  3896  1C7C                     l2328:
  3897  1C7C  1FF4               	btfss	___lwmod@divisor+1,7
  3898  1C7D  2C7F               	goto	u3121
  3899  1C7E  2C80               	goto	u3120
  3900  1C7F                     u3121:
  3901  1C7F  2C71               	goto	l2324
  3902  1C80                     u3120:
  3903  1C80                     l2330:
  3904  1C80  0874               	movf	___lwmod@divisor+1,w
  3905  1C81  0276               	subwf	___lwmod@dividend+1,w
  3906  1C82  1D03               	skipz
  3907  1C83  2C86               	goto	u3135
  3908  1C84  0873               	movf	___lwmod@divisor,w
  3909  1C85  0275               	subwf	___lwmod@dividend,w
  3910  1C86                     u3135:
  3911  1C86  1C03               	skipc
  3912  1C87  2C89               	goto	u3131
  3913  1C88  2C8A               	goto	u3130
  3914  1C89                     u3131:
  3915  1C89  2C90               	goto	l2334
  3916  1C8A                     u3130:
  3917  1C8A                     l2332:
  3918  1C8A  0873               	movf	___lwmod@divisor,w
  3919  1C8B  02F5               	subwf	___lwmod@dividend,f
  3920  1C8C  0874               	movf	___lwmod@divisor+1,w
  3921  1C8D  1C03               	skipc
  3922  1C8E  03F6               	decf	___lwmod@dividend+1,f
  3923  1C8F  02F6               	subwf	___lwmod@dividend+1,f
  3924  1C90                     l2334:
  3925  1C90  3001               	movlw	1
  3926  1C91                     u3145:
  3927  1C91  1003               	clrc
  3928  1C92  0CF4               	rrf	___lwmod@divisor+1,f
  3929  1C93  0CF3               	rrf	___lwmod@divisor,f
  3930  1C94  3EFF               	addlw	-1
  3931  1C95  1D03               	skipz
  3932  1C96  2C91               	goto	u3145
  3933  1C97                     l2336:
  3934  1C97  3001               	movlw	1
  3935  1C98  02F7               	subwf	___lwmod@counter,f
  3936  1C99  1D03               	btfss	3,2
  3937  1C9A  2C9C               	goto	u3151
  3938  1C9B  2C9D               	goto	u3150
  3939  1C9C                     u3151:
  3940  1C9C  2C80               	goto	l2330
  3941  1C9D                     u3150:
  3942  1C9D                     l2338:
  3943  1C9D  0876               	movf	___lwmod@dividend+1,w
  3944  1C9E  00F4               	movwf	?___lwmod+1
  3945  1C9F  0875               	movf	___lwmod@dividend,w
  3946  1CA0  00F3               	movwf	?___lwmod
  3947  1CA1                     l601:
  3948  1CA1  0008               	return
  3949  1CA2                     __end_of___lwmod:
  3950                           
  3951                           	psect	text8
  3952  1CA2                     __ptext8:	
  3953 ;; *************** function ___lwdiv *****************
  3954 ;; Defined at:
  3955 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  divisor         2    7[COMMON] unsigned int 
  3958 ;;  dividend        2    9[COMMON] unsigned int 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  quotient        2    0[BANK0 ] unsigned int 
  3961 ;;  counter         1    2[BANK0 ] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  2    7[COMMON] unsigned int 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0, btemp+1
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3971 ;;      Params:         4       0       0       0       0
  3972 ;;      Locals:         0       3       0       0       0
  3973 ;;      Temps:          0       0       0       0       0
  3974 ;;      Totals:         4       3       0       0       0
  3975 ;;Total ram usage:        7 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_fround
  3982 ;;		_puts_float
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           
  3987                           ;psect for function ___lwdiv
  3988  1CA2                     ___lwdiv:
  3989  1CA2                     l2294:	
  3990                           ;incstack = 0
  3991                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3992                           
  3993  1CA2  1283               	bcf	3,5	;RP0=0, select bank0
  3994  1CA3  1303               	bcf	3,6	;RP1=0, select bank0
  3995  1CA4  01A0               	clrf	___lwdiv@quotient
  3996  1CA5  01A1               	clrf	___lwdiv@quotient+1
  3997  1CA6                     l2296:
  3998  1CA6  0878               	movf	___lwdiv@divisor,w
  3999  1CA7  0479               	iorwf	___lwdiv@divisor+1,w
  4000  1CA8  1903               	btfsc	3,2
  4001  1CA9  2CAB               	goto	u3031
  4002  1CAA  2CAC               	goto	u3030
  4003  1CAB                     u3031:
  4004  1CAB  2CE3               	goto	l2316
  4005  1CAC                     u3030:
  4006  1CAC                     l2298:
  4007  1CAC  01A2               	clrf	___lwdiv@counter
  4008  1CAD  0AA2               	incf	___lwdiv@counter,f
  4009  1CAE  2CBA               	goto	l2304
  4010  1CAF                     l2300:
  4011  1CAF  3001               	movlw	1
  4012  1CB0                     u3045:
  4013  1CB0  1003               	clrc
  4014  1CB1  0DF8               	rlf	___lwdiv@divisor,f
  4015  1CB2  0DF9               	rlf	___lwdiv@divisor+1,f
  4016  1CB3  3EFF               	addlw	-1
  4017  1CB4  1D03               	skipz
  4018  1CB5  2CB0               	goto	u3045
  4019  1CB6                     l2302:
  4020  1CB6  3001               	movlw	1
  4021  1CB7  00FF               	movwf	btemp+1
  4022  1CB8  087F               	movf	btemp+1,w
  4023  1CB9  07A2               	addwf	___lwdiv@counter,f
  4024  1CBA                     l2304:
  4025  1CBA  1FF9               	btfss	___lwdiv@divisor+1,7
  4026  1CBB  2CBD               	goto	u3051
  4027  1CBC  2CBE               	goto	u3050
  4028  1CBD                     u3051:
  4029  1CBD  2CAF               	goto	l2300
  4030  1CBE                     u3050:
  4031  1CBE                     l2306:
  4032  1CBE  3001               	movlw	1
  4033  1CBF                     u3065:
  4034  1CBF  1003               	clrc
  4035  1CC0  0DA0               	rlf	___lwdiv@quotient,f
  4036  1CC1  0DA1               	rlf	___lwdiv@quotient+1,f
  4037  1CC2  3EFF               	addlw	-1
  4038  1CC3  1D03               	skipz
  4039  1CC4  2CBF               	goto	u3065
  4040  1CC5  0879               	movf	___lwdiv@divisor+1,w
  4041  1CC6  027B               	subwf	___lwdiv@dividend+1,w
  4042  1CC7  1D03               	skipz
  4043  1CC8  2CCB               	goto	u3075
  4044  1CC9  0878               	movf	___lwdiv@divisor,w
  4045  1CCA  027A               	subwf	___lwdiv@dividend,w
  4046  1CCB                     u3075:
  4047  1CCB  1C03               	skipc
  4048  1CCC  2CCE               	goto	u3071
  4049  1CCD  2CCF               	goto	u3070
  4050  1CCE                     u3071:
  4051  1CCE  2CD6               	goto	l2312
  4052  1CCF                     u3070:
  4053  1CCF                     l2308:
  4054  1CCF  0878               	movf	___lwdiv@divisor,w
  4055  1CD0  02FA               	subwf	___lwdiv@dividend,f
  4056  1CD1  0879               	movf	___lwdiv@divisor+1,w
  4057  1CD2  1C03               	skipc
  4058  1CD3  03FB               	decf	___lwdiv@dividend+1,f
  4059  1CD4  02FB               	subwf	___lwdiv@dividend+1,f
  4060  1CD5                     l2310:
  4061  1CD5  1420               	bsf	___lwdiv@quotient,0
  4062  1CD6                     l2312:
  4063  1CD6  3001               	movlw	1
  4064  1CD7                     u3085:
  4065  1CD7  1003               	clrc
  4066  1CD8  0CF9               	rrf	___lwdiv@divisor+1,f
  4067  1CD9  0CF8               	rrf	___lwdiv@divisor,f
  4068  1CDA  3EFF               	addlw	-1
  4069  1CDB  1D03               	skipz
  4070  1CDC  2CD7               	goto	u3085
  4071  1CDD                     l2314:
  4072  1CDD  3001               	movlw	1
  4073  1CDE  02A2               	subwf	___lwdiv@counter,f
  4074  1CDF  1D03               	btfss	3,2
  4075  1CE0  2CE2               	goto	u3091
  4076  1CE1  2CE3               	goto	u3090
  4077  1CE2                     u3091:
  4078  1CE2  2CBE               	goto	l2306
  4079  1CE3                     u3090:
  4080  1CE3                     l2316:
  4081  1CE3  0821               	movf	___lwdiv@quotient+1,w
  4082  1CE4  00F9               	movwf	?___lwdiv+1
  4083  1CE5  0820               	movf	___lwdiv@quotient,w
  4084  1CE6  00F8               	movwf	?___lwdiv
  4085  1CE7                     l591:
  4086  1CE7  0008               	return
  4087  1CE8                     __end_of___lwdiv:
  4088                           
  4089                           	psect	text9
  4090  12B0                     __ptext9:	
  4091 ;; *************** function __tdiv_to_l_ *****************
  4092 ;; Defined at:
  4093 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftdivl.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  f1              4    2[COMMON] float 
  4096 ;;  f2              4    6[COMMON] float 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  quot            4    3[BANK0 ] unsigned long 
  4099 ;;  exp1            1    8[BANK0 ] unsigned char 
  4100 ;;  cntr            1    7[BANK0 ] unsigned char 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  4    2[COMMON] unsigned long 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0, btemp+1
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4110 ;;      Params:         8       0       0       0       0
  4111 ;;      Locals:         0       6       0       0       0
  4112 ;;      Temps:          0       3       0       0       0
  4113 ;;      Totals:         8       9       0       0       0
  4114 ;;Total ram usage:       17 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    1
  4117 ;; This function calls:
  4118 ;;		Nothing
  4119 ;; This function is called by:
  4120 ;;		_sprintf
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function __tdiv_to_l_
  4126  12B0                     __tdiv_to_l_:
  4127  12B0                     l2792:	
  4128                           ;incstack = 0
  4129                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  4130                           
  4131  12B0  0873               	movf	__tdiv_to_l_@f1,w
  4132  12B1  1283               	bcf	3,5	;RP0=0, select bank0
  4133  12B2  1303               	bcf	3,6	;RP1=0, select bank0
  4134  12B3  00A0               	movwf	??__tdiv_to_l_
  4135  12B4  0874               	movf	__tdiv_to_l_@f1+1,w
  4136  12B5  00A1               	movwf	??__tdiv_to_l_+1
  4137  12B6  0875               	movf	__tdiv_to_l_@f1+2,w
  4138  12B7  00A2               	movwf	??__tdiv_to_l_+2
  4139  12B8  1003               	clrc
  4140  12B9  0D21               	rlf	??__tdiv_to_l_+1,w
  4141  12BA  0D22               	rlf	??__tdiv_to_l_+2,w
  4142  12BB  00FF               	movwf	btemp+1
  4143  12BC  087F               	movf	btemp+1,w
  4144  12BD  00A8               	movwf	__tdiv_to_l_@exp1
  4145  12BE  0828               	movf	__tdiv_to_l_@exp1,w
  4146  12BF  1D03               	btfss	3,2
  4147  12C0  2AC2               	goto	u4291
  4148  12C1  2AC3               	goto	u4290
  4149  12C2                     u4291:
  4150  12C2  2ACC               	goto	l2798
  4151  12C3                     u4290:
  4152  12C3                     l2794:
  4153  12C3  3000               	movlw	0
  4154  12C4  00F6               	movwf	?__tdiv_to_l_+3
  4155  12C5  3000               	movlw	0
  4156  12C6  00F5               	movwf	?__tdiv_to_l_+2
  4157  12C7  3000               	movlw	0
  4158  12C8  00F4               	movwf	?__tdiv_to_l_+1
  4159  12C9  3000               	movlw	0
  4160  12CA  00F3               	movwf	?__tdiv_to_l_
  4161  12CB  2B6C               	goto	l502
  4162  12CC                     l2798:
  4163  12CC  0877               	movf	__tdiv_to_l_@f2,w
  4164  12CD  00A0               	movwf	??__tdiv_to_l_
  4165  12CE  0878               	movf	__tdiv_to_l_@f2+1,w
  4166  12CF  00A1               	movwf	??__tdiv_to_l_+1
  4167  12D0  0879               	movf	__tdiv_to_l_@f2+2,w
  4168  12D1  00A2               	movwf	??__tdiv_to_l_+2
  4169  12D2  1003               	clrc
  4170  12D3  0D21               	rlf	??__tdiv_to_l_+1,w
  4171  12D4  0D22               	rlf	??__tdiv_to_l_+2,w
  4172  12D5  00FF               	movwf	btemp+1
  4173  12D6  087F               	movf	btemp+1,w
  4174  12D7  00A7               	movwf	__tdiv_to_l_@cntr
  4175  12D8  0827               	movf	__tdiv_to_l_@cntr,w
  4176  12D9  1D03               	btfss	3,2
  4177  12DA  2ADC               	goto	u4301
  4178  12DB  2ADD               	goto	u4300
  4179  12DC                     u4301:
  4180  12DC  2ADE               	goto	l503
  4181  12DD                     u4300:
  4182  12DD  2AC3               	goto	l2794
  4183  12DE                     l503:
  4184  12DE  17F4               	bsf	__tdiv_to_l_@f1+1,7
  4185  12DF                     l2804:
  4186  12DF  30FF               	movlw	255
  4187  12E0  05F3               	andwf	__tdiv_to_l_@f1,f
  4188  12E1  30FF               	movlw	255
  4189  12E2  05F4               	andwf	__tdiv_to_l_@f1+1,f
  4190  12E3  3000               	movlw	0
  4191  12E4  05F5               	andwf	__tdiv_to_l_@f1+2,f
  4192  12E5                     l2806:
  4193  12E5  17F8               	bsf	__tdiv_to_l_@f2+1,7
  4194  12E6  30FF               	movlw	255
  4195  12E7  05F7               	andwf	__tdiv_to_l_@f2,f
  4196  12E8  30FF               	movlw	255
  4197  12E9  05F8               	andwf	__tdiv_to_l_@f2+1,f
  4198  12EA  3000               	movlw	0
  4199  12EB  05F9               	andwf	__tdiv_to_l_@f2+2,f
  4200  12EC  3000               	movlw	0
  4201  12ED  00A6               	movwf	__tdiv_to_l_@quot+3
  4202  12EE  3000               	movlw	0
  4203  12EF  00A5               	movwf	__tdiv_to_l_@quot+2
  4204  12F0  3000               	movlw	0
  4205  12F1  00A4               	movwf	__tdiv_to_l_@quot+1
  4206  12F2  3000               	movlw	0
  4207  12F3  00A3               	movwf	__tdiv_to_l_@quot
  4208  12F4                     l2808:
  4209  12F4  307F               	movlw	127
  4210  12F5  02A8               	subwf	__tdiv_to_l_@exp1,f
  4211  12F6                     l2810:
  4212  12F6  3098               	movlw	152
  4213  12F7  0727               	addwf	__tdiv_to_l_@cntr,w
  4214  12F8  00A0               	movwf	??__tdiv_to_l_
  4215  12F9  0820               	movf	??__tdiv_to_l_,w
  4216  12FA  02A8               	subwf	__tdiv_to_l_@exp1,f
  4217  12FB                     l2812:
  4218  12FB  3018               	movlw	24
  4219  12FC  00FF               	movwf	btemp+1
  4220  12FD  087F               	movf	btemp+1,w
  4221  12FE  00A7               	movwf	__tdiv_to_l_@cntr
  4222  12FF                     l2814:
  4223  12FF  3001               	movlw	1
  4224  1300  00A0               	movwf	??__tdiv_to_l_
  4225  1301                     u4315:
  4226  1301  1003               	clrc
  4227  1302  0DA3               	rlf	__tdiv_to_l_@quot,f
  4228  1303  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  4229  1304  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  4230  1305  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  4231  1306  0BA0               	decfsz	??__tdiv_to_l_,f
  4232  1307  2B01               	goto	u4315
  4233  1308                     l2816:
  4234  1308  0879               	movf	__tdiv_to_l_@f2+2,w
  4235  1309  0275               	subwf	__tdiv_to_l_@f1+2,w
  4236  130A  1D03               	skipz
  4237  130B  2B12               	goto	u4325
  4238  130C  0878               	movf	__tdiv_to_l_@f2+1,w
  4239  130D  0274               	subwf	__tdiv_to_l_@f1+1,w
  4240  130E  1D03               	skipz
  4241  130F  2B12               	goto	u4325
  4242  1310  0877               	movf	__tdiv_to_l_@f2,w
  4243  1311  0273               	subwf	__tdiv_to_l_@f1,w
  4244  1312                     u4325:
  4245  1312  1C03               	skipc
  4246  1313  2B15               	goto	u4321
  4247  1314  2B16               	goto	u4320
  4248  1315                     u4321:
  4249  1315  2B21               	goto	l2822
  4250  1316                     u4320:
  4251  1316                     l2818:
  4252  1316  0877               	movf	__tdiv_to_l_@f2,w
  4253  1317  02F3               	subwf	__tdiv_to_l_@f1,f
  4254  1318  0878               	movf	__tdiv_to_l_@f2+1,w
  4255  1319  1C03               	skipc
  4256  131A  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  4257  131B  02F4               	subwf	__tdiv_to_l_@f1+1,f
  4258  131C  0879               	movf	__tdiv_to_l_@f2+2,w
  4259  131D  1C03               	skipc
  4260  131E  0A79               	incf	__tdiv_to_l_@f2+2,w
  4261  131F  02F5               	subwf	__tdiv_to_l_@f1+2,f
  4262  1320                     l2820:
  4263  1320  1423               	bsf	__tdiv_to_l_@quot,0
  4264  1321                     l2822:
  4265  1321  3001               	movlw	1
  4266  1322                     u4335:
  4267  1322  1003               	clrc
  4268  1323  0DF3               	rlf	__tdiv_to_l_@f1,f
  4269  1324  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  4270  1325  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  4271  1326  3EFF               	addlw	-1
  4272  1327  1D03               	skipz
  4273  1328  2B22               	goto	u4335
  4274  1329                     l2824:
  4275  1329  3001               	movlw	1
  4276  132A  02A7               	subwf	__tdiv_to_l_@cntr,f
  4277  132B  1D03               	btfss	3,2
  4278  132C  2B2E               	goto	u4341
  4279  132D  2B2F               	goto	u4340
  4280  132E                     u4341:
  4281  132E  2AFF               	goto	l2814
  4282  132F                     u4340:
  4283  132F                     l506:
  4284  132F  1FA8               	btfss	__tdiv_to_l_@exp1,7
  4285  1330  2B32               	goto	u4351
  4286  1331  2B33               	goto	u4350
  4287  1332                     u4351:
  4288  1332  2B4D               	goto	l2836
  4289  1333                     u4350:
  4290  1333                     l2826:
  4291  1333  0828               	movf	__tdiv_to_l_@exp1,w
  4292  1334  3A80               	xorlw	128
  4293  1335  3E97               	addlw	151
  4294  1336  1803               	skipnc
  4295  1337  2B39               	goto	u4361
  4296  1338  2B3A               	goto	u4360
  4297  1339                     u4361:
  4298  1339  2B3B               	goto	l2832
  4299  133A                     u4360:
  4300  133A  2AC3               	goto	l2794
  4301  133B                     l2832:
  4302  133B  3001               	movlw	1
  4303  133C                     u4375:
  4304  133C  1003               	clrc
  4305  133D  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  4306  133E  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  4307  133F  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  4308  1340  0CA3               	rrf	__tdiv_to_l_@quot,f
  4309  1341  3EFF               	addlw	-1
  4310  1342  1D03               	skipz
  4311  1343  2B3C               	goto	u4375
  4312  1344                     l2834:
  4313  1344  3001               	movlw	1
  4314  1345  00FF               	movwf	btemp+1
  4315  1346  087F               	movf	btemp+1,w
  4316  1347  07A8               	addwf	__tdiv_to_l_@exp1,f
  4317  1348  1D03               	btfss	3,2
  4318  1349  2B4B               	goto	u4381
  4319  134A  2B4C               	goto	u4380
  4320  134B                     u4381:
  4321  134B  2B3B               	goto	l2832
  4322  134C                     u4380:
  4323  134C  2B64               	goto	l2844
  4324  134D                     l2836:
  4325  134D  3018               	movlw	24
  4326  134E  0228               	subwf	__tdiv_to_l_@exp1,w
  4327  134F  1C03               	skipc
  4328  1350  2B52               	goto	u4391
  4329  1351  2B53               	goto	u4390
  4330  1352                     u4391:
  4331  1352  2B5F               	goto	l513
  4332  1353                     u4390:
  4333  1353  2AC3               	goto	l2794
  4334  1354                     l2842:
  4335  1354  3001               	movlw	1
  4336  1355  00A0               	movwf	??__tdiv_to_l_
  4337  1356                     u4405:
  4338  1356  1003               	clrc
  4339  1357  0DA3               	rlf	__tdiv_to_l_@quot,f
  4340  1358  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  4341  1359  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  4342  135A  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  4343  135B  0BA0               	decfsz	??__tdiv_to_l_,f
  4344  135C  2B56               	goto	u4405
  4345  135D  3001               	movlw	1
  4346  135E  02A8               	subwf	__tdiv_to_l_@exp1,f
  4347  135F                     l513:
  4348  135F  0828               	movf	__tdiv_to_l_@exp1,w
  4349  1360  1D03               	btfss	3,2
  4350  1361  2B63               	goto	u4411
  4351  1362  2B64               	goto	u4410
  4352  1363                     u4411:
  4353  1363  2B54               	goto	l2842
  4354  1364                     u4410:
  4355  1364                     l2844:
  4356  1364  0826               	movf	__tdiv_to_l_@quot+3,w
  4357  1365  00F6               	movwf	?__tdiv_to_l_+3
  4358  1366  0825               	movf	__tdiv_to_l_@quot+2,w
  4359  1367  00F5               	movwf	?__tdiv_to_l_+2
  4360  1368  0824               	movf	__tdiv_to_l_@quot+1,w
  4361  1369  00F4               	movwf	?__tdiv_to_l_+1
  4362  136A  0823               	movf	__tdiv_to_l_@quot,w
  4363  136B  00F3               	movwf	?__tdiv_to_l_
  4364  136C                     l502:
  4365  136C  0008               	return
  4366  136D                     __end_of__tdiv_to_l_:
  4367                           
  4368                           	psect	text10
  4369  087E                     __ptext10:	
  4370 ;; *************** function __div_to_l_ *****************
  4371 ;; Defined at:
  4372 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fldivl.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  f1              4    2[COMMON] unsigned long 
  4375 ;;  f2              4    6[COMMON] unsigned long 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;  quot            4    0[BANK0 ] unsigned long 
  4378 ;;  exp1            1    5[BANK0 ] unsigned char 
  4379 ;;  cntr            1    4[BANK0 ] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  4    2[COMMON] unsigned long 
  4382 ;; Registers used:
  4383 ;;		wreg, status,2, status,0, btemp+1
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4389 ;;      Params:         8       0       0       0       0
  4390 ;;      Locals:         0       6       0       0       0
  4391 ;;      Temps:          1       0       0       0       0
  4392 ;;      Totals:         9       6       0       0       0
  4393 ;;Total ram usage:       15 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    1
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_sprintf
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           
  4404                           ;psect for function __div_to_l_
  4405  087E                     __div_to_l_:
  4406  087E                     l2848:	
  4407                           ;incstack = 0
  4408                           ; Regs used in __div_to_l_: [wreg+status,2+status,0+btemp+1]
  4409                           
  4410  087E  1003               	clrc
  4411  087F  0D75               	rlf	__div_to_l_@f1+2,w
  4412  0880  0D76               	rlf	__div_to_l_@f1+3,w
  4413  0881  00FF               	movwf	btemp+1
  4414  0882  087F               	movf	btemp+1,w
  4415  0883  1283               	bcf	3,5	;RP0=0, select bank0
  4416  0884  1303               	bcf	3,6	;RP1=0, select bank0
  4417  0885  00A5               	movwf	__div_to_l_@exp1
  4418  0886  0825               	movf	__div_to_l_@exp1,w
  4419  0887  1D03               	btfss	3,2
  4420  0888  288A               	goto	u4421
  4421  0889  288B               	goto	u4420
  4422  088A                     u4421:
  4423  088A  2894               	goto	l2854
  4424  088B                     u4420:
  4425  088B                     l2850:
  4426  088B  3000               	movlw	0
  4427  088C  00F6               	movwf	?__div_to_l_+3
  4428  088D  3000               	movlw	0
  4429  088E  00F5               	movwf	?__div_to_l_+2
  4430  088F  3000               	movlw	0
  4431  0890  00F4               	movwf	?__div_to_l_+1
  4432  0891  3000               	movlw	0
  4433  0892  00F3               	movwf	?__div_to_l_
  4434  0893  293B               	goto	l455
  4435  0894                     l2854:
  4436  0894  1003               	clrc
  4437  0895  0D79               	rlf	__div_to_l_@f2+2,w
  4438  0896  0D7A               	rlf	__div_to_l_@f2+3,w
  4439  0897  00FF               	movwf	btemp+1
  4440  0898  087F               	movf	btemp+1,w
  4441  0899  00A4               	movwf	__div_to_l_@cntr
  4442  089A  0824               	movf	__div_to_l_@cntr,w
  4443  089B  1D03               	btfss	3,2
  4444  089C  289E               	goto	u4431
  4445  089D  289F               	goto	u4430
  4446  089E                     u4431:
  4447  089E  28A0               	goto	l456
  4448  089F                     u4430:
  4449  089F  288B               	goto	l2850
  4450  08A0                     l456:
  4451  08A0  17F5               	bsf	__div_to_l_@f1+2,7
  4452  08A1                     l2860:
  4453  08A1  30FF               	movlw	255
  4454  08A2  05F3               	andwf	__div_to_l_@f1,f
  4455  08A3  30FF               	movlw	255
  4456  08A4  05F4               	andwf	__div_to_l_@f1+1,f
  4457  08A5  30FF               	movlw	255
  4458  08A6  05F5               	andwf	__div_to_l_@f1+2,f
  4459  08A7  3000               	movlw	0
  4460  08A8  05F6               	andwf	__div_to_l_@f1+3,f
  4461  08A9                     l2862:
  4462  08A9  17F9               	bsf	__div_to_l_@f2+2,7
  4463  08AA  30FF               	movlw	255
  4464  08AB  05F7               	andwf	__div_to_l_@f2,f
  4465  08AC  30FF               	movlw	255
  4466  08AD  05F8               	andwf	__div_to_l_@f2+1,f
  4467  08AE  30FF               	movlw	255
  4468  08AF  05F9               	andwf	__div_to_l_@f2+2,f
  4469  08B0  3000               	movlw	0
  4470  08B1  05FA               	andwf	__div_to_l_@f2+3,f
  4471  08B2  3000               	movlw	0
  4472  08B3  00A3               	movwf	__div_to_l_@quot+3
  4473  08B4  3000               	movlw	0
  4474  08B5  00A2               	movwf	__div_to_l_@quot+2
  4475  08B6  3000               	movlw	0
  4476  08B7  00A1               	movwf	__div_to_l_@quot+1
  4477  08B8  3000               	movlw	0
  4478  08B9  00A0               	movwf	__div_to_l_@quot
  4479  08BA                     l2864:
  4480  08BA  307F               	movlw	127
  4481  08BB  02A5               	subwf	__div_to_l_@exp1,f
  4482  08BC                     l2866:
  4483  08BC  30A0               	movlw	160
  4484  08BD  0724               	addwf	__div_to_l_@cntr,w
  4485  08BE  00FB               	movwf	??__div_to_l_
  4486  08BF  087B               	movf	??__div_to_l_,w
  4487  08C0  02A5               	subwf	__div_to_l_@exp1,f
  4488  08C1                     l2868:
  4489  08C1  3020               	movlw	32
  4490  08C2  00FF               	movwf	btemp+1
  4491  08C3  087F               	movf	btemp+1,w
  4492  08C4  00A4               	movwf	__div_to_l_@cntr
  4493  08C5                     l2870:
  4494  08C5  3001               	movlw	1
  4495  08C6  00FB               	movwf	??__div_to_l_
  4496  08C7                     u4445:
  4497  08C7  1003               	clrc
  4498  08C8  0DA0               	rlf	__div_to_l_@quot,f
  4499  08C9  0DA1               	rlf	__div_to_l_@quot+1,f
  4500  08CA  0DA2               	rlf	__div_to_l_@quot+2,f
  4501  08CB  0DA3               	rlf	__div_to_l_@quot+3,f
  4502  08CC  0BFB               	decfsz	??__div_to_l_,f
  4503  08CD  28C7               	goto	u4445
  4504  08CE                     l2872:
  4505  08CE  087A               	movf	__div_to_l_@f2+3,w
  4506  08CF  0276               	subwf	__div_to_l_@f1+3,w
  4507  08D0  1D03               	skipz
  4508  08D1  28DC               	goto	u4455
  4509  08D2  0879               	movf	__div_to_l_@f2+2,w
  4510  08D3  0275               	subwf	__div_to_l_@f1+2,w
  4511  08D4  1D03               	skipz
  4512  08D5  28DC               	goto	u4455
  4513  08D6  0878               	movf	__div_to_l_@f2+1,w
  4514  08D7  0274               	subwf	__div_to_l_@f1+1,w
  4515  08D8  1D03               	skipz
  4516  08D9  28DC               	goto	u4455
  4517  08DA  0877               	movf	__div_to_l_@f2,w
  4518  08DB  0273               	subwf	__div_to_l_@f1,w
  4519  08DC                     u4455:
  4520  08DC  1C03               	skipc
  4521  08DD  28DF               	goto	u4451
  4522  08DE  28E0               	goto	u4450
  4523  08DF                     u4451:
  4524  08DF  28EF               	goto	l2878
  4525  08E0                     u4450:
  4526  08E0                     l2874:
  4527  08E0  0877               	movf	__div_to_l_@f2,w
  4528  08E1  02F3               	subwf	__div_to_l_@f1,f
  4529  08E2  0878               	movf	__div_to_l_@f2+1,w
  4530  08E3  1C03               	skipc
  4531  08E4  0F78               	incfsz	__div_to_l_@f2+1,w
  4532  08E5  02F4               	subwf	__div_to_l_@f1+1,f
  4533  08E6  0879               	movf	__div_to_l_@f2+2,w
  4534  08E7  1C03               	skipc
  4535  08E8  0F79               	incfsz	__div_to_l_@f2+2,w
  4536  08E9  02F5               	subwf	__div_to_l_@f1+2,f
  4537  08EA  087A               	movf	__div_to_l_@f2+3,w
  4538  08EB  1C03               	skipc
  4539  08EC  0F7A               	incfsz	__div_to_l_@f2+3,w
  4540  08ED  02F6               	subwf	__div_to_l_@f1+3,f
  4541  08EE                     l2876:
  4542  08EE  1420               	bsf	__div_to_l_@quot,0
  4543  08EF                     l2878:
  4544  08EF  3001               	movlw	1
  4545  08F0  00FB               	movwf	??__div_to_l_
  4546  08F1                     u4465:
  4547  08F1  1003               	clrc
  4548  08F2  0DF3               	rlf	__div_to_l_@f1,f
  4549  08F3  0DF4               	rlf	__div_to_l_@f1+1,f
  4550  08F4  0DF5               	rlf	__div_to_l_@f1+2,f
  4551  08F5  0DF6               	rlf	__div_to_l_@f1+3,f
  4552  08F6  0BFB               	decfsz	??__div_to_l_,f
  4553  08F7  28F1               	goto	u4465
  4554  08F8                     l2880:
  4555  08F8  3001               	movlw	1
  4556  08F9  02A4               	subwf	__div_to_l_@cntr,f
  4557  08FA  1D03               	btfss	3,2
  4558  08FB  28FD               	goto	u4471
  4559  08FC  28FE               	goto	u4470
  4560  08FD                     u4471:
  4561  08FD  28C5               	goto	l2870
  4562  08FE                     u4470:
  4563  08FE                     l459:
  4564  08FE  1FA5               	btfss	__div_to_l_@exp1,7
  4565  08FF  2901               	goto	u4481
  4566  0900  2902               	goto	u4480
  4567  0901                     u4481:
  4568  0901  291C               	goto	l2892
  4569  0902                     u4480:
  4570  0902                     l2882:
  4571  0902  0825               	movf	__div_to_l_@exp1,w
  4572  0903  3A80               	xorlw	128
  4573  0904  3E9F               	addlw	159
  4574  0905  1803               	skipnc
  4575  0906  2908               	goto	u4491
  4576  0907  2909               	goto	u4490
  4577  0908                     u4491:
  4578  0908  290A               	goto	l2888
  4579  0909                     u4490:
  4580  0909  288B               	goto	l2850
  4581  090A                     l2888:
  4582  090A  3001               	movlw	1
  4583  090B                     u4505:
  4584  090B  1003               	clrc
  4585  090C  0CA3               	rrf	__div_to_l_@quot+3,f
  4586  090D  0CA2               	rrf	__div_to_l_@quot+2,f
  4587  090E  0CA1               	rrf	__div_to_l_@quot+1,f
  4588  090F  0CA0               	rrf	__div_to_l_@quot,f
  4589  0910  3EFF               	addlw	-1
  4590  0911  1D03               	skipz
  4591  0912  290B               	goto	u4505
  4592  0913                     l2890:
  4593  0913  3001               	movlw	1
  4594  0914  00FF               	movwf	btemp+1
  4595  0915  087F               	movf	btemp+1,w
  4596  0916  07A5               	addwf	__div_to_l_@exp1,f
  4597  0917  1D03               	btfss	3,2
  4598  0918  291A               	goto	u4511
  4599  0919  291B               	goto	u4510
  4600  091A                     u4511:
  4601  091A  290A               	goto	l2888
  4602  091B                     u4510:
  4603  091B  2933               	goto	l2900
  4604  091C                     l2892:
  4605  091C  3020               	movlw	32
  4606  091D  0225               	subwf	__div_to_l_@exp1,w
  4607  091E  1C03               	skipc
  4608  091F  2921               	goto	u4521
  4609  0920  2922               	goto	u4520
  4610  0921                     u4521:
  4611  0921  292E               	goto	l466
  4612  0922                     u4520:
  4613  0922  288B               	goto	l2850
  4614  0923                     l2898:
  4615  0923  3001               	movlw	1
  4616  0924  00FB               	movwf	??__div_to_l_
  4617  0925                     u4535:
  4618  0925  1003               	clrc
  4619  0926  0DA0               	rlf	__div_to_l_@quot,f
  4620  0927  0DA1               	rlf	__div_to_l_@quot+1,f
  4621  0928  0DA2               	rlf	__div_to_l_@quot+2,f
  4622  0929  0DA3               	rlf	__div_to_l_@quot+3,f
  4623  092A  0BFB               	decfsz	??__div_to_l_,f
  4624  092B  2925               	goto	u4535
  4625  092C  3001               	movlw	1
  4626  092D  02A5               	subwf	__div_to_l_@exp1,f
  4627  092E                     l466:
  4628  092E  0825               	movf	__div_to_l_@exp1,w
  4629  092F  1D03               	btfss	3,2
  4630  0930  2932               	goto	u4541
  4631  0931  2933               	goto	u4540
  4632  0932                     u4541:
  4633  0932  2923               	goto	l2898
  4634  0933                     u4540:
  4635  0933                     l2900:
  4636  0933  0823               	movf	__div_to_l_@quot+3,w
  4637  0934  00F6               	movwf	?__div_to_l_+3
  4638  0935  0822               	movf	__div_to_l_@quot+2,w
  4639  0936  00F5               	movwf	?__div_to_l_+2
  4640  0937  0821               	movf	__div_to_l_@quot+1,w
  4641  0938  00F4               	movwf	?__div_to_l_+1
  4642  0939  0820               	movf	__div_to_l_@quot,w
  4643  093A  00F3               	movwf	?__div_to_l_
  4644  093B                     l455:
  4645  093B  0008               	return
  4646  093C                     __end_of__div_to_l_:
  4647                           
  4648                           	psect	text11
  4649  1BB8                     __ptext11:	
  4650 ;; *************** function ___wmul *****************
  4651 ;; Defined at:
  4652 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;  multiplier      2    2[COMMON] unsigned int 
  4655 ;;  multiplicand    2    4[COMMON] unsigned int 
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;  product         2    6[COMMON] unsigned int 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  2    2[COMMON] unsigned int 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2, status,0
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4667 ;;      Params:         4       0       0       0       0
  4668 ;;      Locals:         2       0       0       0       0
  4669 ;;      Temps:          0       0       0       0       0
  4670 ;;      Totals:         6       0       0       0       0
  4671 ;;Total ram usage:        6 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    1
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_sprintf
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           
  4682                           ;psect for function ___wmul
  4683  1BB8                     ___wmul:
  4684  1BB8                     l2904:	
  4685                           ;incstack = 0
  4686                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4687                           
  4688  1BB8  01F7               	clrf	___wmul@product
  4689  1BB9  01F8               	clrf	___wmul@product+1
  4690  1BBA                     l2906:
  4691  1BBA  1C73               	btfss	___wmul@multiplier,0
  4692  1BBB  2BBD               	goto	u4551
  4693  1BBC  2BBE               	goto	u4550
  4694  1BBD                     u4551:
  4695  1BBD  2BC4               	goto	l285
  4696  1BBE                     u4550:
  4697  1BBE                     l2908:
  4698  1BBE  0875               	movf	___wmul@multiplicand,w
  4699  1BBF  07F7               	addwf	___wmul@product,f
  4700  1BC0  1803               	skipnc
  4701  1BC1  0AF8               	incf	___wmul@product+1,f
  4702  1BC2  0876               	movf	___wmul@multiplicand+1,w
  4703  1BC3  07F8               	addwf	___wmul@product+1,f
  4704  1BC4                     l285:
  4705  1BC4  3001               	movlw	1
  4706  1BC5                     u4565:
  4707  1BC5  1003               	clrc
  4708  1BC6  0DF5               	rlf	___wmul@multiplicand,f
  4709  1BC7  0DF6               	rlf	___wmul@multiplicand+1,f
  4710  1BC8  3EFF               	addlw	-1
  4711  1BC9  1D03               	skipz
  4712  1BCA  2BC5               	goto	u4565
  4713  1BCB                     l2910:
  4714  1BCB  3001               	movlw	1
  4715  1BCC                     u4575:
  4716  1BCC  1003               	clrc
  4717  1BCD  0CF4               	rrf	___wmul@multiplier+1,f
  4718  1BCE  0CF3               	rrf	___wmul@multiplier,f
  4719  1BCF  3EFF               	addlw	-1
  4720  1BD0  1D03               	skipz
  4721  1BD1  2BCC               	goto	u4575
  4722  1BD2                     l2912:
  4723  1BD2  0873               	movf	___wmul@multiplier,w
  4724  1BD3  0474               	iorwf	___wmul@multiplier+1,w
  4725  1BD4  1D03               	btfss	3,2
  4726  1BD5  2BD7               	goto	u4581
  4727  1BD6  2BD8               	goto	u4580
  4728  1BD7                     u4581:
  4729  1BD7  2BBA               	goto	l2906
  4730  1BD8                     u4580:
  4731  1BD8                     l2914:
  4732  1BD8  0878               	movf	___wmul@product+1,w
  4733  1BD9  00F4               	movwf	?___wmul+1
  4734  1BDA  0877               	movf	___wmul@product,w
  4735  1BDB  00F3               	movwf	?___wmul
  4736  1BDC                     l287:
  4737  1BDC  0008               	return
  4738  1BDD                     __end_of___wmul:
  4739                           
  4740                           	psect	text12
  4741  1D80                     __ptext12:	
  4742 ;; *************** function ___llmod *****************
  4743 ;; Defined at:
  4744 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\llmod.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  divisor         4    2[COMMON] unsigned long 
  4747 ;;  dividend        4    6[COMMON] unsigned long 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  counter         1    0[BANK0 ] unsigned char 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  4    2[COMMON] unsigned long 
  4752 ;; Registers used:
  4753 ;;		wreg, status,2, status,0, btemp+1
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4759 ;;      Params:         8       0       0       0       0
  4760 ;;      Locals:         0       1       0       0       0
  4761 ;;      Temps:          1       0       0       0       0
  4762 ;;      Totals:         9       1       0       0       0
  4763 ;;Total ram usage:       10 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:    1
  4766 ;; This function calls:
  4767 ;;		Nothing
  4768 ;; This function is called by:
  4769 ;;		_sprintf
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           
  4774                           ;psect for function ___llmod
  4775  1D80                     ___llmod:
  4776  1D80                     l3022:	
  4777                           ;incstack = 0
  4778                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  4779                           
  4780  1D80  0876               	movf	___llmod@divisor+3,w
  4781  1D81  0475               	iorwf	___llmod@divisor+2,w
  4782  1D82  0474               	iorwf	___llmod@divisor+1,w
  4783  1D83  0473               	iorwf	___llmod@divisor,w
  4784  1D84  1903               	skipnz
  4785  1D85  2D87               	goto	u4871
  4786  1D86  2D88               	goto	u4870
  4787  1D87                     u4871:
  4788  1D87  2DCD               	goto	l3040
  4789  1D88                     u4870:
  4790  1D88                     l3024:
  4791  1D88  1283               	bcf	3,5	;RP0=0, select bank0
  4792  1D89  1303               	bcf	3,6	;RP1=0, select bank0
  4793  1D8A  01A0               	clrf	___llmod@counter
  4794  1D8B  0AA0               	incf	___llmod@counter,f
  4795  1D8C  2D9A               	goto	l3030
  4796  1D8D                     l3026:
  4797  1D8D  3001               	movlw	1
  4798  1D8E  00FB               	movwf	??___llmod
  4799  1D8F                     u4885:
  4800  1D8F  1003               	clrc
  4801  1D90  0DF3               	rlf	___llmod@divisor,f
  4802  1D91  0DF4               	rlf	___llmod@divisor+1,f
  4803  1D92  0DF5               	rlf	___llmod@divisor+2,f
  4804  1D93  0DF6               	rlf	___llmod@divisor+3,f
  4805  1D94  0BFB               	decfsz	??___llmod,f
  4806  1D95  2D8F               	goto	u4885
  4807  1D96                     l3028:
  4808  1D96  3001               	movlw	1
  4809  1D97  00FF               	movwf	btemp+1
  4810  1D98  087F               	movf	btemp+1,w
  4811  1D99  07A0               	addwf	___llmod@counter,f
  4812  1D9A                     l3030:
  4813  1D9A  1FF6               	btfss	___llmod@divisor+3,7
  4814  1D9B  2D9D               	goto	u4891
  4815  1D9C  2D9E               	goto	u4890
  4816  1D9D                     u4891:
  4817  1D9D  2D8D               	goto	l3026
  4818  1D9E                     u4890:
  4819  1D9E                     l3032:
  4820  1D9E  0876               	movf	___llmod@divisor+3,w
  4821  1D9F  027A               	subwf	___llmod@dividend+3,w
  4822  1DA0  1D03               	skipz
  4823  1DA1  2DAC               	goto	u4905
  4824  1DA2  0875               	movf	___llmod@divisor+2,w
  4825  1DA3  0279               	subwf	___llmod@dividend+2,w
  4826  1DA4  1D03               	skipz
  4827  1DA5  2DAC               	goto	u4905
  4828  1DA6  0874               	movf	___llmod@divisor+1,w
  4829  1DA7  0278               	subwf	___llmod@dividend+1,w
  4830  1DA8  1D03               	skipz
  4831  1DA9  2DAC               	goto	u4905
  4832  1DAA  0873               	movf	___llmod@divisor,w
  4833  1DAB  0277               	subwf	___llmod@dividend,w
  4834  1DAC                     u4905:
  4835  1DAC  1C03               	skipc
  4836  1DAD  2DAF               	goto	u4901
  4837  1DAE  2DB0               	goto	u4900
  4838  1DAF                     u4901:
  4839  1DAF  2DBE               	goto	l3036
  4840  1DB0                     u4900:
  4841  1DB0                     l3034:
  4842  1DB0  0873               	movf	___llmod@divisor,w
  4843  1DB1  02F7               	subwf	___llmod@dividend,f
  4844  1DB2  0874               	movf	___llmod@divisor+1,w
  4845  1DB3  1C03               	skipc
  4846  1DB4  0F74               	incfsz	___llmod@divisor+1,w
  4847  1DB5  02F8               	subwf	___llmod@dividend+1,f
  4848  1DB6  0875               	movf	___llmod@divisor+2,w
  4849  1DB7  1C03               	skipc
  4850  1DB8  0F75               	incfsz	___llmod@divisor+2,w
  4851  1DB9  02F9               	subwf	___llmod@dividend+2,f
  4852  1DBA  0876               	movf	___llmod@divisor+3,w
  4853  1DBB  1C03               	skipc
  4854  1DBC  0F76               	incfsz	___llmod@divisor+3,w
  4855  1DBD  02FA               	subwf	___llmod@dividend+3,f
  4856  1DBE                     l3036:
  4857  1DBE  3001               	movlw	1
  4858  1DBF                     u4915:
  4859  1DBF  1003               	clrc
  4860  1DC0  0CF6               	rrf	___llmod@divisor+3,f
  4861  1DC1  0CF5               	rrf	___llmod@divisor+2,f
  4862  1DC2  0CF4               	rrf	___llmod@divisor+1,f
  4863  1DC3  0CF3               	rrf	___llmod@divisor,f
  4864  1DC4  3EFF               	addlw	-1
  4865  1DC5  1D03               	skipz
  4866  1DC6  2DBF               	goto	u4915
  4867  1DC7                     l3038:
  4868  1DC7  3001               	movlw	1
  4869  1DC8  02A0               	subwf	___llmod@counter,f
  4870  1DC9  1D03               	btfss	3,2
  4871  1DCA  2DCC               	goto	u4921
  4872  1DCB  2DCD               	goto	u4920
  4873  1DCC                     u4921:
  4874  1DCC  2D9E               	goto	l3032
  4875  1DCD                     u4920:
  4876  1DCD                     l3040:
  4877  1DCD  087A               	movf	___llmod@dividend+3,w
  4878  1DCE  00F6               	movwf	?___llmod+3
  4879  1DCF  0879               	movf	___llmod@dividend+2,w
  4880  1DD0  00F5               	movwf	?___llmod+2
  4881  1DD1  0878               	movf	___llmod@dividend+1,w
  4882  1DD2  00F4               	movwf	?___llmod+1
  4883  1DD3  0877               	movf	___llmod@dividend,w
  4884  1DD4  00F3               	movwf	?___llmod
  4885  1DD5                     l541:
  4886  1DD5  0008               	return
  4887  1DD6                     __end_of___llmod:
  4888                           
  4889                           	psect	text13
  4890  1E2F                     __ptext13:	
  4891 ;; *************** function ___lldiv *****************
  4892 ;; Defined at:
  4893 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  divisor         4    2[COMMON] unsigned long 
  4896 ;;  dividend        4    6[COMMON] unsigned long 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  quotient        4    0[BANK0 ] unsigned long 
  4899 ;;  counter         1    4[BANK0 ] unsigned char 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  4    2[COMMON] unsigned long 
  4902 ;; Registers used:
  4903 ;;		wreg, status,2, status,0, btemp+1
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4909 ;;      Params:         8       0       0       0       0
  4910 ;;      Locals:         0       5       0       0       0
  4911 ;;      Temps:          1       0       0       0       0
  4912 ;;      Totals:         9       5       0       0       0
  4913 ;;Total ram usage:       14 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; Hardware stack levels required when called:    1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_sprintf
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           
  4924                           ;psect for function ___lldiv
  4925  1E2F                     ___lldiv:
  4926  1E2F                     l2918:	
  4927                           ;incstack = 0
  4928                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  4929                           
  4930  1E2F  3000               	movlw	0
  4931  1E30  1283               	bcf	3,5	;RP0=0, select bank0
  4932  1E31  1303               	bcf	3,6	;RP1=0, select bank0
  4933  1E32  00A3               	movwf	___lldiv@quotient+3
  4934  1E33  3000               	movlw	0
  4935  1E34  00A2               	movwf	___lldiv@quotient+2
  4936  1E35  3000               	movlw	0
  4937  1E36  00A1               	movwf	___lldiv@quotient+1
  4938  1E37  3000               	movlw	0
  4939  1E38  00A0               	movwf	___lldiv@quotient
  4940  1E39  0876               	movf	___lldiv@divisor+3,w
  4941  1E3A  0475               	iorwf	___lldiv@divisor+2,w
  4942  1E3B  0474               	iorwf	___lldiv@divisor+1,w
  4943  1E3C  0473               	iorwf	___lldiv@divisor,w
  4944  1E3D  1903               	skipnz
  4945  1E3E  2E40               	goto	u4591
  4946  1E3F  2E41               	goto	u4590
  4947  1E40                     u4591:
  4948  1E40  2E8E               	goto	l2940
  4949  1E41                     u4590:
  4950  1E41                     l2920:
  4951  1E41  01A4               	clrf	___lldiv@counter
  4952  1E42  0AA4               	incf	___lldiv@counter,f
  4953  1E43  2E51               	goto	l2926
  4954  1E44                     l2922:
  4955  1E44  3001               	movlw	1
  4956  1E45  00FB               	movwf	??___lldiv
  4957  1E46                     u4605:
  4958  1E46  1003               	clrc
  4959  1E47  0DF3               	rlf	___lldiv@divisor,f
  4960  1E48  0DF4               	rlf	___lldiv@divisor+1,f
  4961  1E49  0DF5               	rlf	___lldiv@divisor+2,f
  4962  1E4A  0DF6               	rlf	___lldiv@divisor+3,f
  4963  1E4B  0BFB               	decfsz	??___lldiv,f
  4964  1E4C  2E46               	goto	u4605
  4965  1E4D                     l2924:
  4966  1E4D  3001               	movlw	1
  4967  1E4E  00FF               	movwf	btemp+1
  4968  1E4F  087F               	movf	btemp+1,w
  4969  1E50  07A4               	addwf	___lldiv@counter,f
  4970  1E51                     l2926:
  4971  1E51  1FF6               	btfss	___lldiv@divisor+3,7
  4972  1E52  2E54               	goto	u4611
  4973  1E53  2E55               	goto	u4610
  4974  1E54                     u4611:
  4975  1E54  2E44               	goto	l2922
  4976  1E55                     u4610:
  4977  1E55                     l2928:
  4978  1E55  3001               	movlw	1
  4979  1E56  00FB               	movwf	??___lldiv
  4980  1E57                     u4625:
  4981  1E57  1003               	clrc
  4982  1E58  0DA0               	rlf	___lldiv@quotient,f
  4983  1E59  0DA1               	rlf	___lldiv@quotient+1,f
  4984  1E5A  0DA2               	rlf	___lldiv@quotient+2,f
  4985  1E5B  0DA3               	rlf	___lldiv@quotient+3,f
  4986  1E5C  0BFB               	decfsz	??___lldiv,f
  4987  1E5D  2E57               	goto	u4625
  4988  1E5E                     l2930:
  4989  1E5E  0876               	movf	___lldiv@divisor+3,w
  4990  1E5F  027A               	subwf	___lldiv@dividend+3,w
  4991  1E60  1D03               	skipz
  4992  1E61  2E6C               	goto	u4635
  4993  1E62  0875               	movf	___lldiv@divisor+2,w
  4994  1E63  0279               	subwf	___lldiv@dividend+2,w
  4995  1E64  1D03               	skipz
  4996  1E65  2E6C               	goto	u4635
  4997  1E66  0874               	movf	___lldiv@divisor+1,w
  4998  1E67  0278               	subwf	___lldiv@dividend+1,w
  4999  1E68  1D03               	skipz
  5000  1E69  2E6C               	goto	u4635
  5001  1E6A  0873               	movf	___lldiv@divisor,w
  5002  1E6B  0277               	subwf	___lldiv@dividend,w
  5003  1E6C                     u4635:
  5004  1E6C  1C03               	skipc
  5005  1E6D  2E6F               	goto	u4631
  5006  1E6E  2E70               	goto	u4630
  5007  1E6F                     u4631:
  5008  1E6F  2E7F               	goto	l2936
  5009  1E70                     u4630:
  5010  1E70                     l2932:
  5011  1E70  0873               	movf	___lldiv@divisor,w
  5012  1E71  02F7               	subwf	___lldiv@dividend,f
  5013  1E72  0874               	movf	___lldiv@divisor+1,w
  5014  1E73  1C03               	skipc
  5015  1E74  0F74               	incfsz	___lldiv@divisor+1,w
  5016  1E75  02F8               	subwf	___lldiv@dividend+1,f
  5017  1E76  0875               	movf	___lldiv@divisor+2,w
  5018  1E77  1C03               	skipc
  5019  1E78  0F75               	incfsz	___lldiv@divisor+2,w
  5020  1E79  02F9               	subwf	___lldiv@dividend+2,f
  5021  1E7A  0876               	movf	___lldiv@divisor+3,w
  5022  1E7B  1C03               	skipc
  5023  1E7C  0F76               	incfsz	___lldiv@divisor+3,w
  5024  1E7D  02FA               	subwf	___lldiv@dividend+3,f
  5025  1E7E                     l2934:
  5026  1E7E  1420               	bsf	___lldiv@quotient,0
  5027  1E7F                     l2936:
  5028  1E7F  3001               	movlw	1
  5029  1E80                     u4645:
  5030  1E80  1003               	clrc
  5031  1E81  0CF6               	rrf	___lldiv@divisor+3,f
  5032  1E82  0CF5               	rrf	___lldiv@divisor+2,f
  5033  1E83  0CF4               	rrf	___lldiv@divisor+1,f
  5034  1E84  0CF3               	rrf	___lldiv@divisor,f
  5035  1E85  3EFF               	addlw	-1
  5036  1E86  1D03               	skipz
  5037  1E87  2E80               	goto	u4645
  5038  1E88                     l2938:
  5039  1E88  3001               	movlw	1
  5040  1E89  02A4               	subwf	___lldiv@counter,f
  5041  1E8A  1D03               	btfss	3,2
  5042  1E8B  2E8D               	goto	u4651
  5043  1E8C  2E8E               	goto	u4650
  5044  1E8D                     u4651:
  5045  1E8D  2E55               	goto	l2928
  5046  1E8E                     u4650:
  5047  1E8E                     l2940:
  5048  1E8E  0823               	movf	___lldiv@quotient+3,w
  5049  1E8F  00F6               	movwf	?___lldiv+3
  5050  1E90  0822               	movf	___lldiv@quotient+2,w
  5051  1E91  00F5               	movwf	?___lldiv+2
  5052  1E92  0821               	movf	___lldiv@quotient+1,w
  5053  1E93  00F4               	movwf	?___lldiv+1
  5054  1E94  0820               	movf	___lldiv@quotient,w
  5055  1E95  00F3               	movwf	?___lldiv
  5056  1E96                     l321:
  5057  1E96  0008               	return
  5058  1E97                     __end_of___lldiv:
  5059                           
  5060                           	psect	text14
  5061  0802                     __ptext14:	
  5062 ;; *************** function ___fltol *****************
  5063 ;; Defined at:
  5064 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;  f1              4   53[BANK0 ] unsigned long 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  exp1            1   62[BANK0 ] unsigned char 
  5069 ;;  sign1           1   61[BANK0 ] unsigned char 
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  4   53[BANK0 ] long 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2, status,0, btemp+1
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5079 ;;      Params:         0       4       0       0       0
  5080 ;;      Locals:         0       2       0       0       0
  5081 ;;      Temps:          0       4       0       0       0
  5082 ;;      Totals:         0      10       0       0       0
  5083 ;;Total ram usage:       10 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    1
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_sprintf
  5090 ;;		_puts_float
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           
  5095                           ;psect for function ___fltol
  5096  0802                     ___fltol:
  5097  0802                     l2984:	
  5098                           ;incstack = 0
  5099                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  5100                           
  5101  0802  1003               	clrc
  5102  0803  1283               	bcf	3,5	;RP0=0, select bank0
  5103  0804  1303               	bcf	3,6	;RP1=0, select bank0
  5104  0805  0D57               	rlf	___fltol@f1+2,w
  5105  0806  0D58               	rlf	___fltol@f1+3,w
  5106  0807  00FF               	movwf	btemp+1
  5107  0808  087F               	movf	btemp+1,w
  5108  0809  00DE               	movwf	___fltol@exp1
  5109  080A  085E               	movf	___fltol@exp1,w
  5110  080B  1D03               	btfss	3,2
  5111  080C  280E               	goto	u4771
  5112  080D  280F               	goto	u4770
  5113  080E                     u4771:
  5114  080E  2818               	goto	l2990
  5115  080F                     u4770:
  5116  080F                     l2986:
  5117  080F  3000               	movlw	0
  5118  0810  00D8               	movwf	?___fltol+3
  5119  0811  3000               	movlw	0
  5120  0812  00D7               	movwf	?___fltol+2
  5121  0813  3000               	movlw	0
  5122  0814  00D6               	movwf	?___fltol+1
  5123  0815  3000               	movlw	0
  5124  0816  00D5               	movwf	?___fltol
  5125  0817  287D               	goto	l488
  5126  0818                     l2990:
  5127  0818  0855               	movf	___fltol@f1,w
  5128  0819  00D9               	movwf	??___fltol
  5129  081A  0856               	movf	___fltol@f1+1,w
  5130  081B  00DA               	movwf	??___fltol+1
  5131  081C  0857               	movf	___fltol@f1+2,w
  5132  081D  00DB               	movwf	??___fltol+2
  5133  081E  0858               	movf	___fltol@f1+3,w
  5134  081F  00DC               	movwf	??___fltol+3
  5135  0820  301F               	movlw	31
  5136  0821                     u4785:
  5137  0821  1003               	clrc
  5138  0822  0CDC               	rrf	??___fltol+3,f
  5139  0823  0CDB               	rrf	??___fltol+2,f
  5140  0824  0CDA               	rrf	??___fltol+1,f
  5141  0825  0CD9               	rrf	??___fltol,f
  5142  0826                     u4780:
  5143  0826  3EFF               	addlw	-1
  5144  0827  1D03               	skipz
  5145  0828  2821               	goto	u4785
  5146  0829  0859               	movf	??___fltol,w
  5147  082A  00FF               	movwf	btemp+1
  5148  082B  087F               	movf	btemp+1,w
  5149  082C  00DD               	movwf	___fltol@sign1
  5150  082D                     l2992:
  5151  082D  17D7               	bsf	___fltol@f1+2,7
  5152  082E                     l2994:
  5153  082E  30FF               	movlw	255
  5154  082F  05D5               	andwf	___fltol@f1,f
  5155  0830  30FF               	movlw	255
  5156  0831  05D6               	andwf	___fltol@f1+1,f
  5157  0832  30FF               	movlw	255
  5158  0833  05D7               	andwf	___fltol@f1+2,f
  5159  0834  3000               	movlw	0
  5160  0835  05D8               	andwf	___fltol@f1+3,f
  5161  0836                     l2996:
  5162  0836  3096               	movlw	150
  5163  0837  02DE               	subwf	___fltol@exp1,f
  5164  0838                     l2998:
  5165  0838  1FDE               	btfss	___fltol@exp1,7
  5166  0839  283B               	goto	u4791
  5167  083A  283C               	goto	u4790
  5168  083B                     u4791:
  5169  083B  2856               	goto	l3010
  5170  083C                     u4790:
  5171  083C                     l3000:
  5172  083C  085E               	movf	___fltol@exp1,w
  5173  083D  3A80               	xorlw	128
  5174  083E  3E97               	addlw	151
  5175  083F  1803               	skipnc
  5176  0840  2842               	goto	u4801
  5177  0841  2843               	goto	u4800
  5178  0842                     u4801:
  5179  0842  2844               	goto	l3006
  5180  0843                     u4800:
  5181  0843  280F               	goto	l2986
  5182  0844                     l3006:
  5183  0844  3001               	movlw	1
  5184  0845                     u4815:
  5185  0845  1003               	clrc
  5186  0846  0CD8               	rrf	___fltol@f1+3,f
  5187  0847  0CD7               	rrf	___fltol@f1+2,f
  5188  0848  0CD6               	rrf	___fltol@f1+1,f
  5189  0849  0CD5               	rrf	___fltol@f1,f
  5190  084A  3EFF               	addlw	-1
  5191  084B  1D03               	skipz
  5192  084C  2845               	goto	u4815
  5193  084D                     l3008:
  5194  084D  3001               	movlw	1
  5195  084E  00FF               	movwf	btemp+1
  5196  084F  087F               	movf	btemp+1,w
  5197  0850  07DE               	addwf	___fltol@exp1,f
  5198  0851  1D03               	btfss	3,2
  5199  0852  2854               	goto	u4821
  5200  0853  2855               	goto	u4820
  5201  0854                     u4821:
  5202  0854  2844               	goto	l3006
  5203  0855                     u4820:
  5204  0855  286D               	goto	l3018
  5205  0856                     l3010:
  5206  0856  3020               	movlw	32
  5207  0857  025E               	subwf	___fltol@exp1,w
  5208  0858  1C03               	skipc
  5209  0859  285B               	goto	u4831
  5210  085A  285C               	goto	u4830
  5211  085B                     u4831:
  5212  085B  2868               	goto	l495
  5213  085C                     u4830:
  5214  085C  280F               	goto	l2986
  5215  085D                     l3016:
  5216  085D  3001               	movlw	1
  5217  085E  00D9               	movwf	??___fltol
  5218  085F                     u4845:
  5219  085F  1003               	clrc
  5220  0860  0DD5               	rlf	___fltol@f1,f
  5221  0861  0DD6               	rlf	___fltol@f1+1,f
  5222  0862  0DD7               	rlf	___fltol@f1+2,f
  5223  0863  0DD8               	rlf	___fltol@f1+3,f
  5224  0864  0BD9               	decfsz	??___fltol,f
  5225  0865  285F               	goto	u4845
  5226  0866  3001               	movlw	1
  5227  0867  02DE               	subwf	___fltol@exp1,f
  5228  0868                     l495:
  5229  0868  085E               	movf	___fltol@exp1,w
  5230  0869  1D03               	btfss	3,2
  5231  086A  286C               	goto	u4851
  5232  086B  286D               	goto	u4850
  5233  086C                     u4851:
  5234  086C  285D               	goto	l3016
  5235  086D                     u4850:
  5236  086D                     l3018:
  5237  086D  085D               	movf	___fltol@sign1,w
  5238  086E  1903               	btfsc	3,2
  5239  086F  2871               	goto	u4861
  5240  0870  2872               	goto	u4860
  5241  0871                     u4861:
  5242  0871  287D               	goto	l498
  5243  0872                     u4860:
  5244  0872                     l3020:
  5245  0872  09D5               	comf	___fltol@f1,f
  5246  0873  09D6               	comf	___fltol@f1+1,f
  5247  0874  09D7               	comf	___fltol@f1+2,f
  5248  0875  09D8               	comf	___fltol@f1+3,f
  5249  0876  0AD5               	incf	___fltol@f1,f
  5250  0877  1903               	skipnz
  5251  0878  0AD6               	incf	___fltol@f1+1,f
  5252  0879  1903               	skipnz
  5253  087A  0AD7               	incf	___fltol@f1+2,f
  5254  087B  1903               	skipnz
  5255  087C  0AD8               	incf	___fltol@f1+3,f
  5256  087D                     l498:
  5257  087D                     l488:
  5258  087D  0008               	return
  5259  087E                     __end_of___fltol:
  5260                           
  5261                           	psect	text15
  5262  0010                     __ptext15:	
  5263 ;; *************** function ___flsub *****************
  5264 ;; Defined at:
  5265 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  a               4    0[BANK1 ] long 
  5268 ;;  b               4    4[BANK1 ] long 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;		None
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  4    0[BANK1 ] long 
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5280 ;;      Params:         0       0       8       0       0
  5281 ;;      Locals:         0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0
  5283 ;;      Totals:         0       0       8       0       0
  5284 ;;Total ram usage:        8 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    2
  5287 ;; This function calls:
  5288 ;;		___fladd
  5289 ;; This function is called by:
  5290 ;;		_sprintf
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           
  5295                           ;psect for function ___flsub
  5296  0010                     ___flsub:
  5297  0010                     l3044:	
  5298                           ;incstack = 0
  5299                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5300                           
  5301  0010  3080               	movlw	128
  5302  0011  1683               	bsf	3,5	;RP0=1, select bank1
  5303  0012  1303               	bcf	3,6	;RP1=0, select bank1
  5304  0013  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5305  0014                     l3046:
  5306  0014  0827               	movf	(___flsub@b+3)^(0+128),w
  5307  0015  1283               	bcf	3,5	;RP0=0, select bank0
  5308  0016  1303               	bcf	3,6	;RP1=0, select bank0
  5309  0017  00D9               	movwf	___fladd@b+3
  5310  0018  1683               	bsf	3,5	;RP0=1, select bank1
  5311  0019  1303               	bcf	3,6	;RP1=0, select bank1
  5312  001A  0826               	movf	(___flsub@b+2)^(0+128),w
  5313  001B  1283               	bcf	3,5	;RP0=0, select bank0
  5314  001C  1303               	bcf	3,6	;RP1=0, select bank0
  5315  001D  00D8               	movwf	___fladd@b+2
  5316  001E  1683               	bsf	3,5	;RP0=1, select bank1
  5317  001F  1303               	bcf	3,6	;RP1=0, select bank1
  5318  0020  0825               	movf	(___flsub@b+1)^(0+128),w
  5319  0021  1283               	bcf	3,5	;RP0=0, select bank0
  5320  0022  1303               	bcf	3,6	;RP1=0, select bank0
  5321  0023  00D7               	movwf	___fladd@b+1
  5322  0024  1683               	bsf	3,5	;RP0=1, select bank1
  5323  0025  1303               	bcf	3,6	;RP1=0, select bank1
  5324  0026  0824               	movf	___flsub@b^(0+128),w
  5325  0027  1283               	bcf	3,5	;RP0=0, select bank0
  5326  0028  1303               	bcf	3,6	;RP1=0, select bank0
  5327  0029  00D6               	movwf	___fladd@b
  5328  002A  1683               	bsf	3,5	;RP0=1, select bank1
  5329  002B  1303               	bcf	3,6	;RP1=0, select bank1
  5330  002C  0823               	movf	(___flsub@a+3)^(0+128),w
  5331  002D  1283               	bcf	3,5	;RP0=0, select bank0
  5332  002E  1303               	bcf	3,6	;RP1=0, select bank0
  5333  002F  00DD               	movwf	___fladd@a+3
  5334  0030  1683               	bsf	3,5	;RP0=1, select bank1
  5335  0031  1303               	bcf	3,6	;RP1=0, select bank1
  5336  0032  0822               	movf	(___flsub@a+2)^(0+128),w
  5337  0033  1283               	bcf	3,5	;RP0=0, select bank0
  5338  0034  1303               	bcf	3,6	;RP1=0, select bank0
  5339  0035  00DC               	movwf	___fladd@a+2
  5340  0036  1683               	bsf	3,5	;RP0=1, select bank1
  5341  0037  1303               	bcf	3,6	;RP1=0, select bank1
  5342  0038  0821               	movf	(___flsub@a+1)^(0+128),w
  5343  0039  1283               	bcf	3,5	;RP0=0, select bank0
  5344  003A  1303               	bcf	3,6	;RP1=0, select bank0
  5345  003B  00DB               	movwf	___fladd@a+1
  5346  003C  1683               	bsf	3,5	;RP0=1, select bank1
  5347  003D  1303               	bcf	3,6	;RP1=0, select bank1
  5348  003E  0820               	movf	___flsub@a^(0+128),w
  5349  003F  1283               	bcf	3,5	;RP0=0, select bank0
  5350  0040  1303               	bcf	3,6	;RP1=0, select bank0
  5351  0041  00DA               	movwf	___fladd@a
  5352  0042  160A  118A  2578  120A  118A  	fcall	___fladd
  5353  0047  1283               	bcf	3,5	;RP0=0, select bank0
  5354  0048  1303               	bcf	3,6	;RP1=0, select bank0
  5355  0049  0859               	movf	?___fladd+3,w
  5356  004A  1683               	bsf	3,5	;RP0=1, select bank1
  5357  004B  1303               	bcf	3,6	;RP1=0, select bank1
  5358  004C  00A3               	movwf	(?___flsub+3)^(0+128)
  5359  004D  1283               	bcf	3,5	;RP0=0, select bank0
  5360  004E  1303               	bcf	3,6	;RP1=0, select bank0
  5361  004F  0858               	movf	?___fladd+2,w
  5362  0050  1683               	bsf	3,5	;RP0=1, select bank1
  5363  0051  1303               	bcf	3,6	;RP1=0, select bank1
  5364  0052  00A2               	movwf	(?___flsub+2)^(0+128)
  5365  0053  1283               	bcf	3,5	;RP0=0, select bank0
  5366  0054  1303               	bcf	3,6	;RP1=0, select bank0
  5367  0055  0857               	movf	?___fladd+1,w
  5368  0056  1683               	bsf	3,5	;RP0=1, select bank1
  5369  0057  1303               	bcf	3,6	;RP1=0, select bank1
  5370  0058  00A1               	movwf	(?___flsub+1)^(0+128)
  5371  0059  1283               	bcf	3,5	;RP0=0, select bank0
  5372  005A  1303               	bcf	3,6	;RP1=0, select bank0
  5373  005B  0856               	movf	?___fladd,w
  5374  005C  1683               	bsf	3,5	;RP0=1, select bank1
  5375  005D  1303               	bcf	3,6	;RP1=0, select bank1
  5376  005E  00A0               	movwf	?___flsub^(0+128)
  5377  005F                     l658:
  5378  005F  0008               	return
  5379  0060                     __end_of___flsub:
  5380                           
  5381                           	psect	text16
  5382  1578                     __ptext16:	
  5383 ;; *************** function ___fladd *****************
  5384 ;; Defined at:
  5385 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;  b               4   54[BANK0 ] long 
  5388 ;;  a               4   58[BANK0 ] long 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  grs             1   73[BANK0 ] unsigned char 
  5391 ;;  bexp            1   72[BANK0 ] unsigned char 
  5392 ;;  aexp            1   71[BANK0 ] unsigned char 
  5393 ;;  signs           1   70[BANK0 ] unsigned char 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  4   54[BANK0 ] unsigned char 
  5396 ;; Registers used:
  5397 ;;		wreg, status,2, status,0, btemp+1
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5403 ;;      Params:         0       8       0       0       0
  5404 ;;      Locals:         0       4       0       0       0
  5405 ;;      Temps:          0       8       0       0       0
  5406 ;;      Totals:         0      20       0       0       0
  5407 ;;Total ram usage:       20 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_sprintf
  5414 ;;		___flsub
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           
  5419                           ;psect for function ___fladd
  5420  1578                     ___fladd:
  5421  1578                     l2342:	
  5422                           ;incstack = 0
  5423                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5424                           
  5425  1578  1283               	bcf	3,5	;RP0=0, select bank0
  5426  1579  1303               	bcf	3,6	;RP1=0, select bank0
  5427  157A  0859               	movf	___fladd@b+3,w
  5428  157B  3980               	andlw	128
  5429  157C  00FF               	movwf	btemp+1
  5430  157D  087F               	movf	btemp+1,w
  5431  157E  00E6               	movwf	___fladd@signs
  5432  157F                     l2344:
  5433  157F  0859               	movf	___fladd@b+3,w
  5434  1580  00DE               	movwf	??___fladd
  5435  1581  075E               	addwf	??___fladd,w
  5436  1582  00FF               	movwf	btemp+1
  5437  1583  087F               	movf	btemp+1,w
  5438  1584  00E8               	movwf	___fladd@bexp
  5439  1585                     l2346:
  5440  1585  1FD8               	btfss	___fladd@b+2,7
  5441  1586  2D88               	goto	u3161
  5442  1587  2D89               	goto	u3160
  5443  1588                     u3161:
  5444  1588  2D8A               	goto	l2350
  5445  1589                     u3160:
  5446  1589                     l2348:
  5447  1589  1468               	bsf	___fladd@bexp,0
  5448  158A                     l2350:
  5449  158A  0868               	movf	___fladd@bexp,w
  5450  158B  1903               	btfsc	3,2
  5451  158C  2D8E               	goto	u3171
  5452  158D  2D8F               	goto	u3170
  5453  158E                     u3171:
  5454  158E  2D9F               	goto	l2360
  5455  158F                     u3170:
  5456  158F                     l2352:
  5457  158F  0A68               	incf	___fladd@bexp,w
  5458  1590  1D03               	btfss	3,2
  5459  1591  2D93               	goto	u3181
  5460  1592  2D94               	goto	u3180
  5461  1593                     u3181:
  5462  1593  2D9C               	goto	l2356
  5463  1594                     u3180:
  5464  1594                     l2354:
  5465  1594  3000               	movlw	0
  5466  1595  00D9               	movwf	___fladd@b+3
  5467  1596  3000               	movlw	0
  5468  1597  00D8               	movwf	___fladd@b+2
  5469  1598  3000               	movlw	0
  5470  1599  00D7               	movwf	___fladd@b+1
  5471  159A  3000               	movlw	0
  5472  159B  00D6               	movwf	___fladd@b
  5473  159C                     l2356:
  5474  159C  17D8               	bsf	___fladd@b+2,7
  5475  159D                     l2358:
  5476  159D  01D9               	clrf	___fladd@b+3
  5477  159E  2DA7               	goto	l2362
  5478  159F                     l2360:
  5479  159F  3000               	movlw	0
  5480  15A0  00D9               	movwf	___fladd@b+3
  5481  15A1  3000               	movlw	0
  5482  15A2  00D8               	movwf	___fladd@b+2
  5483  15A3  3000               	movlw	0
  5484  15A4  00D7               	movwf	___fladd@b+1
  5485  15A5  3000               	movlw	0
  5486  15A6  00D6               	movwf	___fladd@b
  5487  15A7                     l2362:
  5488  15A7  085D               	movf	___fladd@a+3,w
  5489  15A8  3980               	andlw	128
  5490  15A9  00FF               	movwf	btemp+1
  5491  15AA  087F               	movf	btemp+1,w
  5492  15AB  00E7               	movwf	___fladd@aexp
  5493  15AC                     l2364:
  5494  15AC  0867               	movf	___fladd@aexp,w
  5495  15AD  0666               	xorwf	___fladd@signs,w
  5496  15AE  1903               	skipnz
  5497  15AF  2DB1               	goto	u3191
  5498  15B0  2DB2               	goto	u3190
  5499  15B1                     u3191:
  5500  15B1  2DB3               	goto	l2368
  5501  15B2                     u3190:
  5502  15B2                     l2366:
  5503  15B2  1766               	bsf	___fladd@signs,6
  5504  15B3                     l2368:
  5505  15B3  085D               	movf	___fladd@a+3,w
  5506  15B4  00DE               	movwf	??___fladd
  5507  15B5  075E               	addwf	??___fladd,w
  5508  15B6  00FF               	movwf	btemp+1
  5509  15B7  087F               	movf	btemp+1,w
  5510  15B8  00E7               	movwf	___fladd@aexp
  5511  15B9                     l2370:
  5512  15B9  1FDC               	btfss	___fladd@a+2,7
  5513  15BA  2DBC               	goto	u3201
  5514  15BB  2DBD               	goto	u3200
  5515  15BC                     u3201:
  5516  15BC  2DBE               	goto	l2374
  5517  15BD                     u3200:
  5518  15BD                     l2372:
  5519  15BD  1467               	bsf	___fladd@aexp,0
  5520  15BE                     l2374:
  5521  15BE  0867               	movf	___fladd@aexp,w
  5522  15BF  1903               	btfsc	3,2
  5523  15C0  2DC2               	goto	u3211
  5524  15C1  2DC3               	goto	u3210
  5525  15C2                     u3211:
  5526  15C2  2DD3               	goto	l2384
  5527  15C3                     u3210:
  5528  15C3                     l2376:
  5529  15C3  0A67               	incf	___fladd@aexp,w
  5530  15C4  1D03               	btfss	3,2
  5531  15C5  2DC7               	goto	u3221
  5532  15C6  2DC8               	goto	u3220
  5533  15C7                     u3221:
  5534  15C7  2DD0               	goto	l2380
  5535  15C8                     u3220:
  5536  15C8                     l2378:
  5537  15C8  3000               	movlw	0
  5538  15C9  00DD               	movwf	___fladd@a+3
  5539  15CA  3000               	movlw	0
  5540  15CB  00DC               	movwf	___fladd@a+2
  5541  15CC  3000               	movlw	0
  5542  15CD  00DB               	movwf	___fladd@a+1
  5543  15CE  3000               	movlw	0
  5544  15CF  00DA               	movwf	___fladd@a
  5545  15D0                     l2380:
  5546  15D0  17DC               	bsf	___fladd@a+2,7
  5547  15D1                     l2382:
  5548  15D1  01DD               	clrf	___fladd@a+3
  5549  15D2  2DDB               	goto	l612
  5550  15D3                     l2384:
  5551  15D3  3000               	movlw	0
  5552  15D4  00DD               	movwf	___fladd@a+3
  5553  15D5  3000               	movlw	0
  5554  15D6  00DC               	movwf	___fladd@a+2
  5555  15D7  3000               	movlw	0
  5556  15D8  00DB               	movwf	___fladd@a+1
  5557  15D9  3000               	movlw	0
  5558  15DA  00DA               	movwf	___fladd@a
  5559  15DB                     l612:
  5560  15DB  0868               	movf	___fladd@bexp,w
  5561  15DC  0267               	subwf	___fladd@aexp,w
  5562  15DD  1803               	skipnc
  5563  15DE  2DE0               	goto	u3231
  5564  15DF  2DE1               	goto	u3230
  5565  15E0                     u3231:
  5566  15E0  2E25               	goto	l2420
  5567  15E1                     u3230:
  5568  15E1                     l2386:
  5569  15E1  1F66               	btfss	___fladd@signs,6
  5570  15E2  2DE4               	goto	u3241
  5571  15E3  2DE5               	goto	u3240
  5572  15E4                     u3241:
  5573  15E4  2DE9               	goto	l2390
  5574  15E5                     u3240:
  5575  15E5                     l2388:
  5576  15E5  3080               	movlw	128
  5577  15E6  00FF               	movwf	btemp+1
  5578  15E7  087F               	movf	btemp+1,w
  5579  15E8  06E6               	xorwf	___fladd@signs,f
  5580  15E9                     l2390:
  5581  15E9  0868               	movf	___fladd@bexp,w
  5582  15EA  00FF               	movwf	btemp+1
  5583  15EB  087F               	movf	btemp+1,w
  5584  15EC  00E9               	movwf	___fladd@grs
  5585  15ED                     l2392:
  5586  15ED  0867               	movf	___fladd@aexp,w
  5587  15EE  00FF               	movwf	btemp+1
  5588  15EF  087F               	movf	btemp+1,w
  5589  15F0  00E8               	movwf	___fladd@bexp
  5590  15F1                     l2394:
  5591  15F1  0869               	movf	___fladd@grs,w
  5592  15F2  00FF               	movwf	btemp+1
  5593  15F3  087F               	movf	btemp+1,w
  5594  15F4  00E7               	movwf	___fladd@aexp
  5595  15F5                     l2396:
  5596  15F5  0856               	movf	___fladd@b,w
  5597  15F6  00FF               	movwf	btemp+1
  5598  15F7  087F               	movf	btemp+1,w
  5599  15F8  00E9               	movwf	___fladd@grs
  5600  15F9                     l2398:
  5601  15F9  085A               	movf	___fladd@a,w
  5602  15FA  00FF               	movwf	btemp+1
  5603  15FB  087F               	movf	btemp+1,w
  5604  15FC  00D6               	movwf	___fladd@b
  5605  15FD                     l2400:
  5606  15FD  0869               	movf	___fladd@grs,w
  5607  15FE  00FF               	movwf	btemp+1
  5608  15FF  087F               	movf	btemp+1,w
  5609  1600  00DA               	movwf	___fladd@a
  5610  1601                     l2402:
  5611  1601  0857               	movf	___fladd@b+1,w
  5612  1602  00FF               	movwf	btemp+1
  5613  1603  087F               	movf	btemp+1,w
  5614  1604  00E9               	movwf	___fladd@grs
  5615  1605                     l2404:
  5616  1605  085B               	movf	___fladd@a+1,w
  5617  1606  00FF               	movwf	btemp+1
  5618  1607  087F               	movf	btemp+1,w
  5619  1608  00D7               	movwf	___fladd@b+1
  5620  1609                     l2406:
  5621  1609  0869               	movf	___fladd@grs,w
  5622  160A  00FF               	movwf	btemp+1
  5623  160B  087F               	movf	btemp+1,w
  5624  160C  00DB               	movwf	___fladd@a+1
  5625  160D                     l2408:
  5626  160D  0858               	movf	___fladd@b+2,w
  5627  160E  00FF               	movwf	btemp+1
  5628  160F  087F               	movf	btemp+1,w
  5629  1610  00E9               	movwf	___fladd@grs
  5630  1611                     l2410:
  5631  1611  085C               	movf	___fladd@a+2,w
  5632  1612  00FF               	movwf	btemp+1
  5633  1613  087F               	movf	btemp+1,w
  5634  1614  00D8               	movwf	___fladd@b+2
  5635  1615                     l2412:
  5636  1615  0869               	movf	___fladd@grs,w
  5637  1616  00FF               	movwf	btemp+1
  5638  1617  087F               	movf	btemp+1,w
  5639  1618  00DC               	movwf	___fladd@a+2
  5640  1619                     l2414:
  5641  1619  0859               	movf	___fladd@b+3,w
  5642  161A  00FF               	movwf	btemp+1
  5643  161B  087F               	movf	btemp+1,w
  5644  161C  00E9               	movwf	___fladd@grs
  5645  161D                     l2416:
  5646  161D  085D               	movf	___fladd@a+3,w
  5647  161E  00FF               	movwf	btemp+1
  5648  161F  087F               	movf	btemp+1,w
  5649  1620  00D9               	movwf	___fladd@b+3
  5650  1621                     l2418:
  5651  1621  0869               	movf	___fladd@grs,w
  5652  1622  00FF               	movwf	btemp+1
  5653  1623  087F               	movf	btemp+1,w
  5654  1624  00DD               	movwf	___fladd@a+3
  5655  1625                     l2420:
  5656  1625  01E9               	clrf	___fladd@grs
  5657  1626                     l2422:
  5658  1626  0867               	movf	___fladd@aexp,w
  5659  1627  00DE               	movwf	??___fladd
  5660  1628  01DF               	clrf	??___fladd+1
  5661  1629  085F               	movf	??___fladd+1,w
  5662  162A  00E1               	movwf	??___fladd+3
  5663  162B  0868               	movf	___fladd@bexp,w
  5664  162C  025E               	subwf	??___fladd,w
  5665  162D  00E0               	movwf	??___fladd+2
  5666  162E  1C03               	skipc
  5667  162F  03E1               	decf	??___fladd+3,f
  5668  1630  0861               	movf	??___fladd+3,w
  5669  1631  3A80               	xorlw	128
  5670  1632  00FF               	movwf	btemp+1
  5671  1633  3080               	movlw	128
  5672  1634  027F               	subwf	btemp+1,w
  5673  1635  1D03               	skipz
  5674  1636  2E39               	goto	u3255
  5675  1637  301A               	movlw	26
  5676  1638  0260               	subwf	??___fladd+2,w
  5677  1639                     u3255:
  5678  1639  1C03               	skipc
  5679  163A  2E3C               	goto	u3251
  5680  163B  2E3D               	goto	u3250
  5681  163C                     u3251:
  5682  163C  2E7A               	goto	l2442
  5683  163D                     u3250:
  5684  163D                     l2424:
  5685  163D  1283               	bcf	3,5	;RP0=0, select bank0
  5686  163E  1303               	bcf	3,6	;RP1=0, select bank0
  5687  163F  0859               	movf	___fladd@b+3,w
  5688  1640  0458               	iorwf	___fladd@b+2,w
  5689  1641  0457               	iorwf	___fladd@b+1,w
  5690  1642  0456               	iorwf	___fladd@b,w
  5691  1643  1D03               	skipz
  5692  1644  2E46               	goto	u3261
  5693  1645  2E48               	goto	u3260
  5694  1646                     u3261:
  5695  1646  3001               	movlw	1
  5696  1647  2E49               	goto	u3270
  5697  1648                     u3260:
  5698  1648  3000               	movlw	0
  5699  1649                     u3270:
  5700  1649  00FF               	movwf	btemp+1
  5701  164A  087F               	movf	btemp+1,w
  5702  164B  00E9               	movwf	___fladd@grs
  5703  164C                     l2426:
  5704  164C  3000               	movlw	0
  5705  164D  00D9               	movwf	___fladd@b+3
  5706  164E  3000               	movlw	0
  5707  164F  00D8               	movwf	___fladd@b+2
  5708  1650  3000               	movlw	0
  5709  1651  00D7               	movwf	___fladd@b+1
  5710  1652  3000               	movlw	0
  5711  1653  00D6               	movwf	___fladd@b
  5712  1654                     l2428:
  5713  1654  0867               	movf	___fladd@aexp,w
  5714  1655  00FF               	movwf	btemp+1
  5715  1656  087F               	movf	btemp+1,w
  5716  1657  00E8               	movwf	___fladd@bexp
  5717  1658  2E82               	goto	l616
  5718  1659                     l618:
  5719  1659  1C69               	btfss	___fladd@grs,0
  5720  165A  2E5C               	goto	u3281
  5721  165B  2E5D               	goto	u3280
  5722  165C                     u3281:
  5723  165C  2E66               	goto	l2432
  5724  165D                     u3280:
  5725  165D                     l2430:
  5726  165D  0869               	movf	___fladd@grs,w
  5727  165E  00DE               	movwf	??___fladd
  5728  165F  1003               	clrc
  5729  1660  0C5E               	rrf	??___fladd,w
  5730  1661  3801               	iorlw	1
  5731  1662  00FF               	movwf	btemp+1
  5732  1663  087F               	movf	btemp+1,w
  5733  1664  00E9               	movwf	___fladd@grs
  5734  1665  2E68               	goto	l2434
  5735  1666                     l2432:
  5736  1666  1003               	clrc
  5737  1667  0CE9               	rrf	___fladd@grs,f
  5738  1668                     l2434:
  5739  1668  1C56               	btfss	___fladd@b,0
  5740  1669  2E6B               	goto	u3291
  5741  166A  2E6C               	goto	u3290
  5742  166B                     u3291:
  5743  166B  2E6D               	goto	l2438
  5744  166C                     u3290:
  5745  166C                     l2436:
  5746  166C  17E9               	bsf	___fladd@grs,7
  5747  166D                     l2438:
  5748  166D  3001               	movlw	1
  5749  166E  00DE               	movwf	??___fladd
  5750  166F                     u3305:
  5751  166F  0D59               	rlf	___fladd@b+3,w
  5752  1670  0CD9               	rrf	___fladd@b+3,f
  5753  1671  0CD8               	rrf	___fladd@b+2,f
  5754  1672  0CD7               	rrf	___fladd@b+1,f
  5755  1673  0CD6               	rrf	___fladd@b,f
  5756  1674  0BDE               	decfsz	??___fladd& (0+127),f
  5757  1675  2E6F               	goto	u3305
  5758  1676                     l2440:
  5759  1676  3001               	movlw	1
  5760  1677  00FF               	movwf	btemp+1
  5761  1678  087F               	movf	btemp+1,w
  5762  1679  07E8               	addwf	___fladd@bexp,f
  5763  167A                     l2442:
  5764  167A  1283               	bcf	3,5	;RP0=0, select bank0
  5765  167B  1303               	bcf	3,6	;RP1=0, select bank0
  5766  167C  0867               	movf	___fladd@aexp,w
  5767  167D  0268               	subwf	___fladd@bexp,w
  5768  167E  1C03               	skipc
  5769  167F  2E81               	goto	u3311
  5770  1680  2E82               	goto	u3310
  5771  1681                     u3311:
  5772  1681  2E59               	goto	l618
  5773  1682                     u3310:
  5774  1682                     l616:
  5775  1682  1B66               	btfsc	___fladd@signs,6
  5776  1683  2E85               	goto	u3321
  5777  1684  2E86               	goto	u3320
  5778  1685                     u3321:
  5779  1685  2ED1               	goto	l2468
  5780  1686                     u3320:
  5781  1686                     l2444:
  5782  1686  0868               	movf	___fladd@bexp,w
  5783  1687  1D03               	btfss	3,2
  5784  1688  2E8A               	goto	u3331
  5785  1689  2E8B               	goto	u3330
  5786  168A                     u3331:
  5787  168A  2E94               	goto	l2450
  5788  168B                     u3330:
  5789  168B                     l2446:
  5790  168B  3000               	movlw	0
  5791  168C  00D9               	movwf	?___fladd+3
  5792  168D  3000               	movlw	0
  5793  168E  00D8               	movwf	?___fladd+2
  5794  168F  3000               	movlw	0
  5795  1690  00D7               	movwf	?___fladd+1
  5796  1691  3000               	movlw	0
  5797  1692  00D6               	movwf	?___fladd
  5798  1693  2FFF               	goto	l625
  5799  1694                     l2450:
  5800  1694  085A               	movf	___fladd@a,w
  5801  1695  07D6               	addwf	___fladd@b,f
  5802  1696  085B               	movf	___fladd@a+1,w
  5803  1697  1103               	clrz
  5804  1698  1803               	skipnc
  5805  1699  3E01               	addlw	1
  5806  169A  1903               	skipnz
  5807  169B  2E9D               	goto	u3341
  5808  169C  07D7               	addwf	___fladd@b+1,f
  5809  169D                     u3341:
  5810  169D  085C               	movf	___fladd@a+2,w
  5811  169E  1103               	clrz
  5812  169F  1803               	skipnc
  5813  16A0  3E01               	addlw	1
  5814  16A1  1903               	skipnz
  5815  16A2  2EA4               	goto	u3342
  5816  16A3  07D8               	addwf	___fladd@b+2,f
  5817  16A4                     u3342:
  5818  16A4  085D               	movf	___fladd@a+3,w
  5819  16A5  1103               	clrz
  5820  16A6  1803               	skipnc
  5821  16A7  3E01               	addlw	1
  5822  16A8  1903               	skipnz
  5823  16A9  2EAB               	goto	u3343
  5824  16AA  07D9               	addwf	___fladd@b+3,f
  5825  16AB                     u3343:
  5826  16AB                     l2452:
  5827  16AB  1C59               	btfss	___fladd@b+3,0
  5828  16AC  2EAE               	goto	u3351
  5829  16AD  2EAF               	goto	u3350
  5830  16AE                     u3351:
  5831  16AE  2F85               	goto	l2504
  5832  16AF                     u3350:
  5833  16AF                     l2454:
  5834  16AF  1C69               	btfss	___fladd@grs,0
  5835  16B0  2EB2               	goto	u3361
  5836  16B1  2EB3               	goto	u3360
  5837  16B2                     u3361:
  5838  16B2  2EBC               	goto	l2458
  5839  16B3                     u3360:
  5840  16B3                     l2456:
  5841  16B3  0869               	movf	___fladd@grs,w
  5842  16B4  00DE               	movwf	??___fladd
  5843  16B5  1003               	clrc
  5844  16B6  0C5E               	rrf	??___fladd,w
  5845  16B7  3801               	iorlw	1
  5846  16B8  00FF               	movwf	btemp+1
  5847  16B9  087F               	movf	btemp+1,w
  5848  16BA  00E9               	movwf	___fladd@grs
  5849  16BB  2EBE               	goto	l2460
  5850  16BC                     l2458:
  5851  16BC  1003               	clrc
  5852  16BD  0CE9               	rrf	___fladd@grs,f
  5853  16BE                     l2460:
  5854  16BE  1C56               	btfss	___fladd@b,0
  5855  16BF  2EC1               	goto	u3371
  5856  16C0  2EC2               	goto	u3370
  5857  16C1                     u3371:
  5858  16C1  2EC3               	goto	l2464
  5859  16C2                     u3370:
  5860  16C2                     l2462:
  5861  16C2  17E9               	bsf	___fladd@grs,7
  5862  16C3                     l2464:
  5863  16C3  3001               	movlw	1
  5864  16C4  00DE               	movwf	??___fladd
  5865  16C5                     u3385:
  5866  16C5  0D59               	rlf	___fladd@b+3,w
  5867  16C6  0CD9               	rrf	___fladd@b+3,f
  5868  16C7  0CD8               	rrf	___fladd@b+2,f
  5869  16C8  0CD7               	rrf	___fladd@b+1,f
  5870  16C9  0CD6               	rrf	___fladd@b,f
  5871  16CA  0BDE               	decfsz	??___fladd& (0+127),f
  5872  16CB  2EC5               	goto	u3385
  5873  16CC                     l2466:
  5874  16CC  3001               	movlw	1
  5875  16CD  00FF               	movwf	btemp+1
  5876  16CE  087F               	movf	btemp+1,w
  5877  16CF  07E8               	addwf	___fladd@bexp,f
  5878  16D0  2F85               	goto	l2504
  5879  16D1                     l2468:
  5880  16D1  0859               	movf	___fladd@b+3,w
  5881  16D2  3A80               	xorlw	128
  5882  16D3  00FF               	movwf	btemp+1
  5883  16D4  085D               	movf	___fladd@a+3,w
  5884  16D5  3A80               	xorlw	128
  5885  16D6  027F               	subwf	btemp+1,w
  5886  16D7  1D03               	skipz
  5887  16D8  2EE3               	goto	u3393
  5888  16D9  085C               	movf	___fladd@a+2,w
  5889  16DA  0258               	subwf	___fladd@b+2,w
  5890  16DB  1D03               	skipz
  5891  16DC  2EE3               	goto	u3393
  5892  16DD  085B               	movf	___fladd@a+1,w
  5893  16DE  0257               	subwf	___fladd@b+1,w
  5894  16DF  1D03               	skipz
  5895  16E0  2EE3               	goto	u3393
  5896  16E1  085A               	movf	___fladd@a,w
  5897  16E2  0256               	subwf	___fladd@b,w
  5898  16E3                     u3393:
  5899  16E3  1803               	skipnc
  5900  16E4  2EE6               	goto	u3391
  5901  16E5  2EE7               	goto	u3390
  5902  16E6                     u3391:
  5903  16E6  2F3F               	goto	l2480
  5904  16E7                     u3390:
  5905  16E7                     l2470:
  5906  16E7  30FF               	movlw	255
  5907  16E8  00DE               	movwf	??___fladd
  5908  16E9  30FF               	movlw	255
  5909  16EA  00DF               	movwf	??___fladd+1
  5910  16EB  30FF               	movlw	255
  5911  16EC  00E0               	movwf	??___fladd+2
  5912  16ED  30FF               	movlw	255
  5913  16EE  00E1               	movwf	??___fladd+3
  5914  16EF  085A               	movf	___fladd@a,w
  5915  16F0  00E2               	movwf	??___fladd+4
  5916  16F1  085B               	movf	___fladd@a+1,w
  5917  16F2  00E3               	movwf	??___fladd+5
  5918  16F3  085C               	movf	___fladd@a+2,w
  5919  16F4  00E4               	movwf	??___fladd+6
  5920  16F5  085D               	movf	___fladd@a+3,w
  5921  16F6  00E5               	movwf	??___fladd+7
  5922  16F7  0856               	movf	___fladd@b,w
  5923  16F8  02E2               	subwf	??___fladd+4,f
  5924  16F9  0857               	movf	___fladd@b+1,w
  5925  16FA  1C03               	skipc
  5926  16FB  0F57               	incfsz	___fladd@b+1,w
  5927  16FC  2EFE               	goto	u3401
  5928  16FD  2EFF               	goto	u3402
  5929  16FE                     u3401:
  5930  16FE  02E3               	subwf	??___fladd+5,f
  5931  16FF                     u3402:
  5932  16FF  0858               	movf	___fladd@b+2,w
  5933  1700  1C03               	skipc
  5934  1701  0F58               	incfsz	___fladd@b+2,w
  5935  1702  2F04               	goto	u3403
  5936  1703  2F05               	goto	u3404
  5937  1704                     u3403:
  5938  1704  02E4               	subwf	??___fladd+6,f
  5939  1705                     u3404:
  5940  1705  0859               	movf	___fladd@b+3,w
  5941  1706  1C03               	skipc
  5942  1707  0F59               	incfsz	___fladd@b+3,w
  5943  1708  2F0A               	goto	u3405
  5944  1709  2F0B               	goto	u3406
  5945  170A                     u3405:
  5946  170A  02E5               	subwf	??___fladd+7,f
  5947  170B                     u3406:
  5948  170B  0862               	movf	??___fladd+4,w
  5949  170C  07DE               	addwf	??___fladd,f
  5950  170D  0863               	movf	??___fladd+5,w
  5951  170E  1803               	skipnc
  5952  170F  0F63               	incfsz	??___fladd+5,w
  5953  1710  2F12               	goto	u3410
  5954  1711  2F13               	goto	u3411
  5955  1712                     u3410:
  5956  1712  07DF               	addwf	??___fladd+1,f
  5957  1713                     u3411:
  5958  1713  0864               	movf	??___fladd+6,w
  5959  1714  1803               	skipnc
  5960  1715  0F64               	incfsz	??___fladd+6,w
  5961  1716  2F18               	goto	u3412
  5962  1717  2F19               	goto	u3413
  5963  1718                     u3412:
  5964  1718  07E0               	addwf	??___fladd+2,f
  5965  1719                     u3413:
  5966  1719  0865               	movf	??___fladd+7,w
  5967  171A  1803               	skipnc
  5968  171B  0A65               	incf	??___fladd+7,w
  5969  171C  07E1               	addwf	??___fladd+3,f
  5970  171D  0861               	movf	??___fladd+3,w
  5971  171E  00D9               	movwf	___fladd@b+3
  5972  171F  0860               	movf	??___fladd+2,w
  5973  1720  00D8               	movwf	___fladd@b+2
  5974  1721  085F               	movf	??___fladd+1,w
  5975  1722  00D7               	movwf	___fladd@b+1
  5976  1723  085E               	movf	??___fladd,w
  5977  1724  00D6               	movwf	___fladd@b
  5978  1725                     l2472:
  5979  1725  3080               	movlw	128
  5980  1726  00FF               	movwf	btemp+1
  5981  1727  087F               	movf	btemp+1,w
  5982  1728  06E6               	xorwf	___fladd@signs,f
  5983  1729                     l2474:
  5984  1729  09E9               	comf	___fladd@grs,f
  5985  172A  0AE9               	incf	___fladd@grs,f
  5986  172B                     l2476:
  5987  172B  0869               	movf	___fladd@grs,w
  5988  172C  1D03               	btfss	3,2
  5989  172D  2F2F               	goto	u3421
  5990  172E  2F30               	goto	u3420
  5991  172F                     u3421:
  5992  172F  2F4D               	goto	l633
  5993  1730                     u3420:
  5994  1730                     l2478:
  5995  1730  3001               	movlw	1
  5996  1731  07D6               	addwf	___fladd@b,f
  5997  1732  3000               	movlw	0
  5998  1733  1803               	skipnc
  5999  1734  3001               	movlw	1
  6000  1735  07D7               	addwf	___fladd@b+1,f
  6001  1736  3000               	movlw	0
  6002  1737  1803               	skipnc
  6003  1738  3001               	movlw	1
  6004  1739  07D8               	addwf	___fladd@b+2,f
  6005  173A  3000               	movlw	0
  6006  173B  1803               	skipnc
  6007  173C  3001               	movlw	1
  6008  173D  07D9               	addwf	___fladd@b+3,f
  6009  173E  2F4D               	goto	l633
  6010  173F                     l2480:
  6011  173F  085A               	movf	___fladd@a,w
  6012  1740  02D6               	subwf	___fladd@b,f
  6013  1741  085B               	movf	___fladd@a+1,w
  6014  1742  1C03               	skipc
  6015  1743  0F5B               	incfsz	___fladd@a+1,w
  6016  1744  02D7               	subwf	___fladd@b+1,f
  6017  1745  085C               	movf	___fladd@a+2,w
  6018  1746  1C03               	skipc
  6019  1747  0F5C               	incfsz	___fladd@a+2,w
  6020  1748  02D8               	subwf	___fladd@b+2,f
  6021  1749  085D               	movf	___fladd@a+3,w
  6022  174A  1C03               	skipc
  6023  174B  0F5D               	incfsz	___fladd@a+3,w
  6024  174C  02D9               	subwf	___fladd@b+3,f
  6025  174D                     l633:
  6026  174D  0859               	movf	___fladd@b+3,w
  6027  174E  0458               	iorwf	___fladd@b+2,w
  6028  174F  0457               	iorwf	___fladd@b+1,w
  6029  1750  0456               	iorwf	___fladd@b,w
  6030  1751  1D03               	skipz
  6031  1752  2F54               	goto	u3431
  6032  1753  2F55               	goto	u3430
  6033  1754                     u3431:
  6034  1754  2F81               	goto	l2502
  6035  1755                     u3430:
  6036  1755                     l2482:
  6037  1755  0869               	movf	___fladd@grs,w
  6038  1756  1D03               	btfss	3,2
  6039  1757  2F59               	goto	u3441
  6040  1758  2F5A               	goto	u3440
  6041  1759                     u3441:
  6042  1759  2F81               	goto	l2502
  6043  175A                     u3440:
  6044  175A                     l2484:
  6045  175A  3000               	movlw	0
  6046  175B  00D9               	movwf	?___fladd+3
  6047  175C  3000               	movlw	0
  6048  175D  00D8               	movwf	?___fladd+2
  6049  175E  3000               	movlw	0
  6050  175F  00D7               	movwf	?___fladd+1
  6051  1760  3000               	movlw	0
  6052  1761  00D6               	movwf	?___fladd
  6053  1762  2FFF               	goto	l625
  6054  1763                     l2488:
  6055  1763  3001               	movlw	1
  6056  1764  00DE               	movwf	??___fladd
  6057  1765                     u3455:
  6058  1765  1003               	clrc
  6059  1766  0DD6               	rlf	___fladd@b,f
  6060  1767  0DD7               	rlf	___fladd@b+1,f
  6061  1768  0DD8               	rlf	___fladd@b+2,f
  6062  1769  0DD9               	rlf	___fladd@b+3,f
  6063  176A  0BDE               	decfsz	??___fladd,f
  6064  176B  2F65               	goto	u3455
  6065  176C                     l2490:
  6066  176C  1FE9               	btfss	___fladd@grs,7
  6067  176D  2F6F               	goto	u3461
  6068  176E  2F70               	goto	u3460
  6069  176F                     u3461:
  6070  176F  2F71               	goto	l637
  6071  1770                     u3460:
  6072  1770                     l2492:
  6073  1770  1456               	bsf	___fladd@b,0
  6074  1771                     l637:
  6075  1771  1C69               	btfss	___fladd@grs,0
  6076  1772  2F74               	goto	u3471
  6077  1773  2F75               	goto	u3470
  6078  1774                     u3471:
  6079  1774  2F78               	goto	l2496
  6080  1775                     u3470:
  6081  1775                     l2494:
  6082  1775  1403               	setc
  6083  1776  0DE9               	rlf	___fladd@grs,f
  6084  1777  2F7A               	goto	l2498
  6085  1778                     l2496:
  6086  1778  1003               	clrc
  6087  1779  0DE9               	rlf	___fladd@grs,f
  6088  177A                     l2498:
  6089  177A  0868               	movf	___fladd@bexp,w
  6090  177B  1903               	btfsc	3,2
  6091  177C  2F7E               	goto	u3481
  6092  177D  2F7F               	goto	u3480
  6093  177E                     u3481:
  6094  177E  2F81               	goto	l2502
  6095  177F                     u3480:
  6096  177F                     l2500:
  6097  177F  3001               	movlw	1
  6098  1780  02E8               	subwf	___fladd@bexp,f
  6099  1781                     l2502:
  6100  1781  1FD8               	btfss	___fladd@b+2,7
  6101  1782  2F84               	goto	u3491
  6102  1783  2F85               	goto	u3490
  6103  1784                     u3491:
  6104  1784  2F63               	goto	l2488
  6105  1785                     u3490:
  6106  1785                     l2504:
  6107  1785  01E7               	clrf	___fladd@aexp
  6108  1786                     l2506:
  6109  1786  1FE9               	btfss	___fladd@grs,7
  6110  1787  2F89               	goto	u3501
  6111  1788  2F8A               	goto	u3500
  6112  1789                     u3501:
  6113  1789  2F98               	goto	l2514
  6114  178A                     u3500:
  6115  178A                     l2508:
  6116  178A  0869               	movf	___fladd@grs,w
  6117  178B  397F               	andlw	127
  6118  178C  1903               	btfsc	3,2
  6119  178D  2F8F               	goto	u3511
  6120  178E  2F90               	goto	u3510
  6121  178F                     u3511:
  6122  178F  2F93               	goto	l643
  6123  1790                     u3510:
  6124  1790                     l2510:
  6125  1790  01E7               	clrf	___fladd@aexp
  6126  1791  0AE7               	incf	___fladd@aexp,f
  6127  1792  2F98               	goto	l2514
  6128  1793                     l643:
  6129  1793  1C56               	btfss	___fladd@b,0
  6130  1794  2F96               	goto	u3521
  6131  1795  2F97               	goto	u3520
  6132  1796                     u3521:
  6133  1796  2F98               	goto	l2514
  6134  1797                     u3520:
  6135  1797  2F90               	goto	l2510
  6136  1798                     l2514:
  6137  1798  0867               	movf	___fladd@aexp,w
  6138  1799  1903               	btfsc	3,2
  6139  179A  2F9C               	goto	u3531
  6140  179B  2F9D               	goto	u3530
  6141  179C                     u3531:
  6142  179C  2FD1               	goto	l2524
  6143  179D                     u3530:
  6144  179D                     l2516:
  6145  179D  3001               	movlw	1
  6146  179E  07D6               	addwf	___fladd@b,f
  6147  179F  3000               	movlw	0
  6148  17A0  1803               	skipnc
  6149  17A1  3001               	movlw	1
  6150  17A2  07D7               	addwf	___fladd@b+1,f
  6151  17A3  3000               	movlw	0
  6152  17A4  1803               	skipnc
  6153  17A5  3001               	movlw	1
  6154  17A6  07D8               	addwf	___fladd@b+2,f
  6155  17A7  3000               	movlw	0
  6156  17A8  1803               	skipnc
  6157  17A9  3001               	movlw	1
  6158  17AA  07D9               	addwf	___fladd@b+3,f
  6159  17AB                     l2518:
  6160  17AB  1C59               	btfss	___fladd@b+3,0
  6161  17AC  2FAE               	goto	u3541
  6162  17AD  2FAF               	goto	u3540
  6163  17AE                     u3541:
  6164  17AE  2FD1               	goto	l2524
  6165  17AF                     u3540:
  6166  17AF                     l2520:
  6167  17AF  0856               	movf	___fladd@b,w
  6168  17B0  00DE               	movwf	??___fladd
  6169  17B1  0857               	movf	___fladd@b+1,w
  6170  17B2  00DF               	movwf	??___fladd+1
  6171  17B3  0858               	movf	___fladd@b+2,w
  6172  17B4  00E0               	movwf	??___fladd+2
  6173  17B5  0859               	movf	___fladd@b+3,w
  6174  17B6  00E1               	movwf	??___fladd+3
  6175  17B7  3001               	movlw	1
  6176  17B8  00E2               	movwf	??___fladd+4
  6177  17B9                     u3555:
  6178  17B9  0D61               	rlf	??___fladd+3,w
  6179  17BA  0CE1               	rrf	??___fladd+3,f
  6180  17BB  0CE0               	rrf	??___fladd+2,f
  6181  17BC  0CDF               	rrf	??___fladd+1,f
  6182  17BD  0CDE               	rrf	??___fladd,f
  6183  17BE                     u3550:
  6184  17BE  0BE2               	decfsz	??___fladd+4,f
  6185  17BF  2FB9               	goto	u3555
  6186  17C0  0861               	movf	??___fladd+3,w
  6187  17C1  00D9               	movwf	___fladd@b+3
  6188  17C2  0860               	movf	??___fladd+2,w
  6189  17C3  00D8               	movwf	___fladd@b+2
  6190  17C4  085F               	movf	??___fladd+1,w
  6191  17C5  00D7               	movwf	___fladd@b+1
  6192  17C6  085E               	movf	??___fladd,w
  6193  17C7  00D6               	movwf	___fladd@b
  6194  17C8  0A68               	incf	___fladd@bexp,w
  6195  17C9  1903               	btfsc	3,2
  6196  17CA  2FCC               	goto	u3561
  6197  17CB  2FCD               	goto	u3560
  6198  17CC                     u3561:
  6199  17CC  2FD1               	goto	l2524
  6200  17CD                     u3560:
  6201  17CD                     l2522:
  6202  17CD  3001               	movlw	1
  6203  17CE  00FF               	movwf	btemp+1
  6204  17CF  087F               	movf	btemp+1,w
  6205  17D0  07E8               	addwf	___fladd@bexp,f
  6206  17D1                     l2524:
  6207  17D1  0A68               	incf	___fladd@bexp,w
  6208  17D2  1903               	btfsc	3,2
  6209  17D3  2FD5               	goto	u3571
  6210  17D4  2FD6               	goto	u3570
  6211  17D5                     u3571:
  6212  17D5  2FDB               	goto	l2528
  6213  17D6                     u3570:
  6214  17D6                     l2526:
  6215  17D6  0868               	movf	___fladd@bexp,w
  6216  17D7  1D03               	btfss	3,2
  6217  17D8  2FDA               	goto	u3581
  6218  17D9  2FDB               	goto	u3580
  6219  17DA                     u3581:
  6220  17DA  2FE9               	goto	l2534
  6221  17DB                     u3580:
  6222  17DB                     l2528:
  6223  17DB  3000               	movlw	0
  6224  17DC  00D9               	movwf	___fladd@b+3
  6225  17DD  3000               	movlw	0
  6226  17DE  00D8               	movwf	___fladd@b+2
  6227  17DF  3000               	movlw	0
  6228  17E0  00D7               	movwf	___fladd@b+1
  6229  17E1  3000               	movlw	0
  6230  17E2  00D6               	movwf	___fladd@b
  6231  17E3                     l2530:
  6232  17E3  0868               	movf	___fladd@bexp,w
  6233  17E4  1D03               	btfss	3,2
  6234  17E5  2FE7               	goto	u3591
  6235  17E6  2FE8               	goto	u3590
  6236  17E7                     u3591:
  6237  17E7  2FE9               	goto	l2534
  6238  17E8                     u3590:
  6239  17E8                     l2532:
  6240  17E8  01E6               	clrf	___fladd@signs
  6241  17E9                     l2534:
  6242  17E9  1C68               	btfss	___fladd@bexp,0
  6243  17EA  2FEC               	goto	u3601
  6244  17EB  2FED               	goto	u3600
  6245  17EC                     u3601:
  6246  17EC  2FEF               	goto	l2538
  6247  17ED                     u3600:
  6248  17ED                     l2536:
  6249  17ED  17D8               	bsf	___fladd@b+2,7
  6250  17EE  2FF3               	goto	l654
  6251  17EF                     l2538:
  6252  17EF  307F               	movlw	127
  6253  17F0  00FF               	movwf	btemp+1
  6254  17F1  087F               	movf	btemp+1,w
  6255  17F2  05D8               	andwf	___fladd@b+2,f
  6256  17F3                     l654:
  6257  17F3  0868               	movf	___fladd@bexp,w
  6258  17F4  00DE               	movwf	??___fladd
  6259  17F5  1003               	clrc
  6260  17F6  0C5E               	rrf	??___fladd,w
  6261  17F7  00FF               	movwf	btemp+1
  6262  17F8  087F               	movf	btemp+1,w
  6263  17F9  00D9               	movwf	___fladd@b+3
  6264  17FA                     l2540:
  6265  17FA  1FE6               	btfss	___fladd@signs,7
  6266  17FB  2FFD               	goto	u3611
  6267  17FC  2FFE               	goto	u3610
  6268  17FD                     u3611:
  6269  17FD  2FFF               	goto	l655
  6270  17FE                     u3610:
  6271  17FE                     l2542:
  6272  17FE  17D9               	bsf	___fladd@b+3,7
  6273  17FF                     l655:
  6274  17FF                     l625:
  6275  17FF  0008               	return
  6276  1800                     __end_of___fladd:
  6277                           
  6278                           	psect	text17
  6279  1B28                     __ptext17:	
  6280 ;; *************** function ___flneg *****************
  6281 ;; Defined at:
  6282 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flneg.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;  f1              4    2[COMMON] unsigned char 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;		None
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  4    2[COMMON] unsigned char 
  6289 ;; Registers used:
  6290 ;;		wreg
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6296 ;;      Params:         4       0       0       0       0
  6297 ;;      Locals:         0       0       0       0       0
  6298 ;;      Temps:          0       0       0       0       0
  6299 ;;      Totals:         4       0       0       0       0
  6300 ;;Total ram usage:        4 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    1
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_sprintf
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           
  6311                           ;psect for function ___flneg
  6312  1B28                     ___flneg:
  6313  1B28                     l2976:	
  6314                           ;incstack = 0
  6315                           ; Regs used in ___flneg: [wreg]
  6316                           
  6317  1B28  0876               	movf	___flneg@f1+3,w
  6318  1B29  0475               	iorwf	___flneg@f1+2,w
  6319  1B2A  0474               	iorwf	___flneg@f1+1,w
  6320  1B2B  0473               	iorwf	___flneg@f1,w
  6321  1B2C  1903               	skipnz
  6322  1B2D  2B2F               	goto	u4761
  6323  1B2E  2B30               	goto	u4760
  6324  1B2F                     u4761:
  6325  1B2F  2B32               	goto	l2980
  6326  1B30                     u4760:
  6327  1B30                     l2978:
  6328  1B30  3080               	movlw	128
  6329  1B31  06F6               	xorwf	___flneg@f1+3,f
  6330  1B32                     l2980:
  6331  1B32                     l484:
  6332  1B32  0008               	return
  6333  1B33                     __end_of___flneg:
  6334                           
  6335                           	psect	text18
  6336  1150                     __ptext18:	
  6337 ;; *************** function ___flge *****************
  6338 ;; Defined at:
  6339 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flge.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  ff1             4    2[COMMON] unsigned char 
  6342 ;;  ff2             4    6[COMMON] unsigned char 
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;		None
  6345 ;; Return value:  Size  Location     Type
  6346 ;;		None               void
  6347 ;; Registers used:
  6348 ;;		wreg, status,2, status,0
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6354 ;;      Params:         8       0       0       0       0
  6355 ;;      Locals:         0       0       0       0       0
  6356 ;;      Temps:          0       4       0       0       0
  6357 ;;      Totals:         8       4       0       0       0
  6358 ;;Total ram usage:       12 bytes
  6359 ;; Hardware stack levels used:    1
  6360 ;; Hardware stack levels required when called:    1
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_sprintf
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           
  6369                           ;psect for function ___flge
  6370  1150                     ___flge:
  6371  1150                     l2956:	
  6372                           ;incstack = 0
  6373                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6374                           
  6375  1150  3000               	movlw	0
  6376  1151  0573               	andwf	___flge@ff1,w
  6377  1152  1283               	bcf	3,5	;RP0=0, select bank0
  6378  1153  1303               	bcf	3,6	;RP1=0, select bank0
  6379  1154  00A0               	movwf	??___flge
  6380  1155  3000               	movlw	0
  6381  1156  0574               	andwf	___flge@ff1+1,w
  6382  1157  00A1               	movwf	??___flge+1
  6383  1158  3080               	movlw	128
  6384  1159  0575               	andwf	___flge@ff1+2,w
  6385  115A  00A2               	movwf	??___flge+2
  6386  115B  307F               	movlw	127
  6387  115C  0576               	andwf	___flge@ff1+3,w
  6388  115D  00A3               	movwf	??___flge+3
  6389  115E  0823               	movf	??___flge+3,w
  6390  115F  0422               	iorwf	??___flge+2,w
  6391  1160  0421               	iorwf	??___flge+1,w
  6392  1161  0420               	iorwf	??___flge,w
  6393  1162  1D03               	skipz
  6394  1163  2965               	goto	u4691
  6395  1164  2966               	goto	u4690
  6396  1165                     u4691:
  6397  1165  296E               	goto	l476
  6398  1166                     u4690:
  6399  1166                     l2958:
  6400  1166  3000               	movlw	0
  6401  1167  00F6               	movwf	___flge@ff1+3
  6402  1168  3000               	movlw	0
  6403  1169  00F5               	movwf	___flge@ff1+2
  6404  116A  3000               	movlw	0
  6405  116B  00F4               	movwf	___flge@ff1+1
  6406  116C  3000               	movlw	0
  6407  116D  00F3               	movwf	___flge@ff1
  6408  116E                     l476:
  6409  116E  3000               	movlw	0
  6410  116F  0577               	andwf	___flge@ff2,w
  6411  1170  00A0               	movwf	??___flge
  6412  1171  3000               	movlw	0
  6413  1172  0578               	andwf	___flge@ff2+1,w
  6414  1173  00A1               	movwf	??___flge+1
  6415  1174  3080               	movlw	128
  6416  1175  0579               	andwf	___flge@ff2+2,w
  6417  1176  00A2               	movwf	??___flge+2
  6418  1177  307F               	movlw	127
  6419  1178  057A               	andwf	___flge@ff2+3,w
  6420  1179  00A3               	movwf	??___flge+3
  6421  117A  0823               	movf	??___flge+3,w
  6422  117B  0422               	iorwf	??___flge+2,w
  6423  117C  0421               	iorwf	??___flge+1,w
  6424  117D  0420               	iorwf	??___flge,w
  6425  117E  1D03               	skipz
  6426  117F  2981               	goto	u4701
  6427  1180  2982               	goto	u4700
  6428  1181                     u4701:
  6429  1181  298A               	goto	l2962
  6430  1182                     u4700:
  6431  1182                     l2960:
  6432  1182  3000               	movlw	0
  6433  1183  00FA               	movwf	___flge@ff2+3
  6434  1184  3000               	movlw	0
  6435  1185  00F9               	movwf	___flge@ff2+2
  6436  1186  3000               	movlw	0
  6437  1187  00F8               	movwf	___flge@ff2+1
  6438  1188  3000               	movlw	0
  6439  1189  00F7               	movwf	___flge@ff2
  6440  118A                     l2962:
  6441  118A  1FF6               	btfss	___flge@ff1+3,7
  6442  118B  298D               	goto	u4711
  6443  118C  298E               	goto	u4710
  6444  118D                     u4711:
  6445  118D  29B2               	goto	l2966
  6446  118E                     u4710:
  6447  118E                     l2964:
  6448  118E  3000               	movlw	0
  6449  118F  00A0               	movwf	??___flge
  6450  1190  3000               	movlw	0
  6451  1191  00A1               	movwf	??___flge+1
  6452  1192  3000               	movlw	0
  6453  1193  00A2               	movwf	??___flge+2
  6454  1194  3080               	movlw	128
  6455  1195  00A3               	movwf	??___flge+3
  6456  1196  0873               	movf	___flge@ff1,w
  6457  1197  02A0               	subwf	??___flge,f
  6458  1198  0874               	movf	___flge@ff1+1,w
  6459  1199  1C03               	skipc
  6460  119A  0F74               	incfsz	___flge@ff1+1,w
  6461  119B  299D               	goto	u4721
  6462  119C  299E               	goto	u4722
  6463  119D                     u4721:
  6464  119D  02A1               	subwf	??___flge+1,f
  6465  119E                     u4722:
  6466  119E  0875               	movf	___flge@ff1+2,w
  6467  119F  1C03               	skipc
  6468  11A0  0F75               	incfsz	___flge@ff1+2,w
  6469  11A1  29A3               	goto	u4723
  6470  11A2  29A4               	goto	u4724
  6471  11A3                     u4723:
  6472  11A3  02A2               	subwf	??___flge+2,f
  6473  11A4                     u4724:
  6474  11A4  0876               	movf	___flge@ff1+3,w
  6475  11A5  1C03               	skipc
  6476  11A6  0F76               	incfsz	___flge@ff1+3,w
  6477  11A7  29A9               	goto	u4725
  6478  11A8  29AA               	goto	u4726
  6479  11A9                     u4725:
  6480  11A9  02A3               	subwf	??___flge+3,f
  6481  11AA                     u4726:
  6482  11AA  0823               	movf	??___flge+3,w
  6483  11AB  00F6               	movwf	___flge@ff1+3
  6484  11AC  0822               	movf	??___flge+2,w
  6485  11AD  00F5               	movwf	___flge@ff1+2
  6486  11AE  0821               	movf	??___flge+1,w
  6487  11AF  00F4               	movwf	___flge@ff1+1
  6488  11B0  0820               	movf	??___flge,w
  6489  11B1  00F3               	movwf	___flge@ff1
  6490  11B2                     l2966:
  6491  11B2  1FFA               	btfss	___flge@ff2+3,7
  6492  11B3  29B5               	goto	u4731
  6493  11B4  29B6               	goto	u4730
  6494  11B5                     u4731:
  6495  11B5  29DA               	goto	l479
  6496  11B6                     u4730:
  6497  11B6                     l2968:
  6498  11B6  3000               	movlw	0
  6499  11B7  00A0               	movwf	??___flge
  6500  11B8  3000               	movlw	0
  6501  11B9  00A1               	movwf	??___flge+1
  6502  11BA  3000               	movlw	0
  6503  11BB  00A2               	movwf	??___flge+2
  6504  11BC  3080               	movlw	128
  6505  11BD  00A3               	movwf	??___flge+3
  6506  11BE  0877               	movf	___flge@ff2,w
  6507  11BF  02A0               	subwf	??___flge,f
  6508  11C0  0878               	movf	___flge@ff2+1,w
  6509  11C1  1C03               	skipc
  6510  11C2  0F78               	incfsz	___flge@ff2+1,w
  6511  11C3  29C5               	goto	u4741
  6512  11C4  29C6               	goto	u4742
  6513  11C5                     u4741:
  6514  11C5  02A1               	subwf	??___flge+1,f
  6515  11C6                     u4742:
  6516  11C6  0879               	movf	___flge@ff2+2,w
  6517  11C7  1C03               	skipc
  6518  11C8  0F79               	incfsz	___flge@ff2+2,w
  6519  11C9  29CB               	goto	u4743
  6520  11CA  29CC               	goto	u4744
  6521  11CB                     u4743:
  6522  11CB  02A2               	subwf	??___flge+2,f
  6523  11CC                     u4744:
  6524  11CC  087A               	movf	___flge@ff2+3,w
  6525  11CD  1C03               	skipc
  6526  11CE  0F7A               	incfsz	___flge@ff2+3,w
  6527  11CF  29D1               	goto	u4745
  6528  11D0  29D2               	goto	u4746
  6529  11D1                     u4745:
  6530  11D1  02A3               	subwf	??___flge+3,f
  6531  11D2                     u4746:
  6532  11D2  0823               	movf	??___flge+3,w
  6533  11D3  00FA               	movwf	___flge@ff2+3
  6534  11D4  0822               	movf	??___flge+2,w
  6535  11D5  00F9               	movwf	___flge@ff2+2
  6536  11D6  0821               	movf	??___flge+1,w
  6537  11D7  00F8               	movwf	___flge@ff2+1
  6538  11D8  0820               	movf	??___flge,w
  6539  11D9  00F7               	movwf	___flge@ff2
  6540  11DA                     l479:
  6541  11DA  3080               	movlw	128
  6542  11DB  06F6               	xorwf	___flge@ff1+3,f
  6543  11DC  3080               	movlw	128
  6544  11DD  06FA               	xorwf	___flge@ff2+3,f
  6545  11DE  087A               	movf	___flge@ff2+3,w
  6546  11DF  0276               	subwf	___flge@ff1+3,w
  6547  11E0  1D03               	skipz
  6548  11E1  29EC               	goto	u4755
  6549  11E2  0879               	movf	___flge@ff2+2,w
  6550  11E3  0275               	subwf	___flge@ff1+2,w
  6551  11E4  1D03               	skipz
  6552  11E5  29EC               	goto	u4755
  6553  11E6  0878               	movf	___flge@ff2+1,w
  6554  11E7  0274               	subwf	___flge@ff1+1,w
  6555  11E8  1D03               	skipz
  6556  11E9  29EC               	goto	u4755
  6557  11EA  0877               	movf	___flge@ff2,w
  6558  11EB  0273               	subwf	___flge@ff1,w
  6559  11EC                     u4755:
  6560  11EC  1803               	skipnc
  6561  11ED  29EF               	goto	u4751
  6562  11EE  29F0               	goto	u4750
  6563  11EF                     u4751:
  6564  11EF  29F2               	goto	l2972
  6565  11F0                     u4750:
  6566  11F0                     l2970:
  6567  11F0  1003               	clrc
  6568  11F1  29F3               	goto	l480
  6569  11F2                     l2972:
  6570  11F2  1403               	setc
  6571  11F3                     l480:
  6572  11F3  0008               	return
  6573  11F4                     __end_of___flge:
  6574                           
  6575                           	psect	text19
  6576  1D30                     __ptext19:	
  6577 ;; *************** function ___fleq *****************
  6578 ;; Defined at:
  6579 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fleq.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  ff1             4    2[COMMON] unsigned char 
  6582 ;;  ff2             4    6[COMMON] unsigned char 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;		None               void
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6594 ;;      Params:         8       0       0       0       0
  6595 ;;      Locals:         0       0       0       0       0
  6596 ;;      Temps:          0       4       0       0       0
  6597 ;;      Totals:         8       4       0       0       0
  6598 ;;Total ram usage:       12 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:    1
  6601 ;; This function calls:
  6602 ;;		Nothing
  6603 ;; This function is called by:
  6604 ;;		_sprintf
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607                           
  6608                           
  6609                           ;psect for function ___fleq
  6610  1D30                     ___fleq:
  6611  1D30                     l2944:	
  6612                           ;incstack = 0
  6613                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6614                           
  6615  1D30  3000               	movlw	0
  6616  1D31  0573               	andwf	___fleq@ff1,w
  6617  1D32  1283               	bcf	3,5	;RP0=0, select bank0
  6618  1D33  1303               	bcf	3,6	;RP1=0, select bank0
  6619  1D34  00A0               	movwf	??___fleq
  6620  1D35  3000               	movlw	0
  6621  1D36  0574               	andwf	___fleq@ff1+1,w
  6622  1D37  00A1               	movwf	??___fleq+1
  6623  1D38  3080               	movlw	128
  6624  1D39  0575               	andwf	___fleq@ff1+2,w
  6625  1D3A  00A2               	movwf	??___fleq+2
  6626  1D3B  307F               	movlw	127
  6627  1D3C  0576               	andwf	___fleq@ff1+3,w
  6628  1D3D  00A3               	movwf	??___fleq+3
  6629  1D3E  0823               	movf	??___fleq+3,w
  6630  1D3F  0422               	iorwf	??___fleq+2,w
  6631  1D40  0421               	iorwf	??___fleq+1,w
  6632  1D41  0420               	iorwf	??___fleq,w
  6633  1D42  1D03               	skipz
  6634  1D43  2D45               	goto	u4661
  6635  1D44  2D46               	goto	u4660
  6636  1D45                     u4661:
  6637  1D45  2D4E               	goto	l471
  6638  1D46                     u4660:
  6639  1D46                     l2946:
  6640  1D46  3000               	movlw	0
  6641  1D47  00F6               	movwf	___fleq@ff1+3
  6642  1D48  3000               	movlw	0
  6643  1D49  00F5               	movwf	___fleq@ff1+2
  6644  1D4A  3000               	movlw	0
  6645  1D4B  00F4               	movwf	___fleq@ff1+1
  6646  1D4C  3000               	movlw	0
  6647  1D4D  00F3               	movwf	___fleq@ff1
  6648  1D4E                     l471:
  6649  1D4E  3000               	movlw	0
  6650  1D4F  0577               	andwf	___fleq@ff2,w
  6651  1D50  00A0               	movwf	??___fleq
  6652  1D51  3000               	movlw	0
  6653  1D52  0578               	andwf	___fleq@ff2+1,w
  6654  1D53  00A1               	movwf	??___fleq+1
  6655  1D54  3080               	movlw	128
  6656  1D55  0579               	andwf	___fleq@ff2+2,w
  6657  1D56  00A2               	movwf	??___fleq+2
  6658  1D57  307F               	movlw	127
  6659  1D58  057A               	andwf	___fleq@ff2+3,w
  6660  1D59  00A3               	movwf	??___fleq+3
  6661  1D5A  0823               	movf	??___fleq+3,w
  6662  1D5B  0422               	iorwf	??___fleq+2,w
  6663  1D5C  0421               	iorwf	??___fleq+1,w
  6664  1D5D  0420               	iorwf	??___fleq,w
  6665  1D5E  1D03               	skipz
  6666  1D5F  2D61               	goto	u4671
  6667  1D60  2D62               	goto	u4670
  6668  1D61                     u4671:
  6669  1D61  2D6A               	goto	l472
  6670  1D62                     u4670:
  6671  1D62                     l2948:
  6672  1D62  3000               	movlw	0
  6673  1D63  00FA               	movwf	___fleq@ff2+3
  6674  1D64  3000               	movlw	0
  6675  1D65  00F9               	movwf	___fleq@ff2+2
  6676  1D66  3000               	movlw	0
  6677  1D67  00F8               	movwf	___fleq@ff2+1
  6678  1D68  3000               	movlw	0
  6679  1D69  00F7               	movwf	___fleq@ff2
  6680  1D6A                     l472:
  6681  1D6A  087A               	movf	___fleq@ff2+3,w
  6682  1D6B  0676               	xorwf	___fleq@ff1+3,w
  6683  1D6C  1D03               	skipz
  6684  1D6D  2D78               	goto	u4685
  6685  1D6E  0879               	movf	___fleq@ff2+2,w
  6686  1D6F  0675               	xorwf	___fleq@ff1+2,w
  6687  1D70  1D03               	skipz
  6688  1D71  2D78               	goto	u4685
  6689  1D72  0878               	movf	___fleq@ff2+1,w
  6690  1D73  0674               	xorwf	___fleq@ff1+1,w
  6691  1D74  1D03               	skipz
  6692  1D75  2D78               	goto	u4685
  6693  1D76  0877               	movf	___fleq@ff2,w
  6694  1D77  0673               	xorwf	___fleq@ff1,w
  6695  1D78                     u4685:
  6696  1D78  1903               	skipnz
  6697  1D79  2D7B               	goto	u4681
  6698  1D7A  2D7C               	goto	u4680
  6699  1D7B                     u4681:
  6700  1D7B  2D7E               	goto	l2952
  6701  1D7C                     u4680:
  6702  1D7C                     l2950:
  6703  1D7C  1003               	clrc
  6704  1D7D  2D7F               	goto	l473
  6705  1D7E                     l2952:
  6706  1D7E  1403               	setc
  6707  1D7F                     l473:
  6708  1D7F  0008               	return
  6709  1D80                     __end_of___fleq:
  6710                           
  6711                           	psect	text20
  6712  1CE8                     __ptext20:	
  6713 ;; *************** function _Voltage_Value *****************
  6714 ;; Defined at:
  6715 ;;		line 106 in file "main.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  sensor          1    wreg     unsigned char 
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;  sensor          1   42[BANK0 ] unsigned char 
  6720 ;;  fSensor         4   43[BANK0 ] float 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  4   34[BANK0 ] float 
  6723 ;; Registers used:
  6724 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6730 ;;      Params:         0       4       0       0       0
  6731 ;;      Locals:         0       5       0       0       0
  6732 ;;      Temps:          0       4       0       0       0
  6733 ;;      Totals:         0      13       0       0       0
  6734 ;;Total ram usage:       13 bytes
  6735 ;; Hardware stack levels used:    1
  6736 ;; Hardware stack levels required when called:    3
  6737 ;; This function calls:
  6738 ;;		___flmul
  6739 ;;		___xxtofl
  6740 ;; This function is called by:
  6741 ;;		_main
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           
  6746                           ;psect for function _Voltage_Value
  6747  1CE8                     _Voltage_Value:
  6748                           
  6749                           ;incstack = 0
  6750                           ; Regs used in _Voltage_Value: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6751                           ;Voltage_Value@sensor stored from wreg
  6752  1CE8  1283               	bcf	3,5	;RP0=0, select bank0
  6753  1CE9  1303               	bcf	3,6	;RP1=0, select bank0
  6754  1CEA  00CA               	movwf	Voltage_Value@sensor
  6755  1CEB                     l3164:
  6756                           
  6757                           ;main.c: 108:     float fSensor = (float) sensor;
  6758  1CEB  084A               	movf	Voltage_Value@sensor,w
  6759  1CEC  00C6               	movwf	??_Voltage_Value
  6760  1CED  01C7               	clrf	??_Voltage_Value+1
  6761  1CEE  01C8               	clrf	??_Voltage_Value+2
  6762  1CEF  01C9               	clrf	??_Voltage_Value+3
  6763  1CF0  0849               	movf	??_Voltage_Value+3,w
  6764  1CF1  00F6               	movwf	___xxtofl@val+3
  6765  1CF2  0848               	movf	??_Voltage_Value+2,w
  6766  1CF3  00F5               	movwf	___xxtofl@val+2
  6767  1CF4  0847               	movf	??_Voltage_Value+1,w
  6768  1CF5  00F4               	movwf	___xxtofl@val+1
  6769  1CF6  0846               	movf	??_Voltage_Value,w
  6770  1CF7  00F3               	movwf	___xxtofl@val
  6771  1CF8  3000               	movlw	0
  6772  1CF9  160A  118A  21F4  160A  158A  	fcall	___xxtofl
  6773  1CFE  0876               	movf	?___xxtofl+3,w
  6774  1CFF  1283               	bcf	3,5	;RP0=0, select bank0
  6775  1D00  1303               	bcf	3,6	;RP1=0, select bank0
  6776  1D01  00CE               	movwf	Voltage_Value@fSensor+3
  6777  1D02  0875               	movf	?___xxtofl+2,w
  6778  1D03  00CD               	movwf	Voltage_Value@fSensor+2
  6779  1D04  0874               	movf	?___xxtofl+1,w
  6780  1D05  00CC               	movwf	Voltage_Value@fSensor+1
  6781  1D06  0873               	movf	?___xxtofl,w
  6782  1D07  00CB               	movwf	Voltage_Value@fSensor
  6783                           
  6784                           ;main.c: 109:     fSensor = fSensor*(5/255);
  6785  1D08  3000               	movlw	0
  6786  1D09  00AB               	movwf	___flmul@b+3
  6787  1D0A  3000               	movlw	0
  6788  1D0B  00AA               	movwf	___flmul@b+2
  6789  1D0C  3000               	movlw	0
  6790  1D0D  00A9               	movwf	___flmul@b+1
  6791  1D0E  3000               	movlw	0
  6792  1D0F  00A8               	movwf	___flmul@b
  6793  1D10  084E               	movf	Voltage_Value@fSensor+3,w
  6794  1D11  00AF               	movwf	___flmul@a+3
  6795  1D12  084D               	movf	Voltage_Value@fSensor+2,w
  6796  1D13  00AE               	movwf	___flmul@a+2
  6797  1D14  084C               	movf	Voltage_Value@fSensor+1,w
  6798  1D15  00AD               	movwf	___flmul@a+1
  6799  1D16  084B               	movf	Voltage_Value@fSensor,w
  6800  1D17  00AC               	movwf	___flmul@a
  6801  1D18  120A  158A  213C  160A  158A  	fcall	___flmul
  6802  1D1D  1283               	bcf	3,5	;RP0=0, select bank0
  6803  1D1E  1303               	bcf	3,6	;RP1=0, select bank0
  6804  1D1F  082B               	movf	?___flmul+3,w
  6805  1D20  00CE               	movwf	Voltage_Value@fSensor+3
  6806  1D21  082A               	movf	?___flmul+2,w
  6807  1D22  00CD               	movwf	Voltage_Value@fSensor+2
  6808  1D23  0829               	movf	?___flmul+1,w
  6809  1D24  00CC               	movwf	Voltage_Value@fSensor+1
  6810  1D25  0828               	movf	?___flmul,w
  6811  1D26  00CB               	movwf	Voltage_Value@fSensor
  6812  1D27                     l3166:
  6813                           
  6814                           ;main.c: 110:     return fSensor;
  6815  1D27  084E               	movf	Voltage_Value@fSensor+3,w
  6816  1D28  00C5               	movwf	?_Voltage_Value+3
  6817  1D29  084D               	movf	Voltage_Value@fSensor+2,w
  6818  1D2A  00C4               	movwf	?_Voltage_Value+2
  6819  1D2B  084C               	movf	Voltage_Value@fSensor+1,w
  6820  1D2C  00C3               	movwf	?_Voltage_Value+1
  6821  1D2D  084B               	movf	Voltage_Value@fSensor,w
  6822  1D2E  00C2               	movwf	?_Voltage_Value
  6823  1D2F                     l37:
  6824  1D2F  0008               	return
  6825  1D30                     __end_of_Voltage_Value:
  6826                           
  6827                           	psect	text21
  6828  11F4                     __ptext21:	
  6829 ;; *************** function ___xxtofl *****************
  6830 ;; Defined at:
  6831 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;  sign            1    wreg     unsigned char 
  6834 ;;  val             4    2[COMMON] long 
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;  sign            1    0[BANK0 ] unsigned char 
  6837 ;;  arg             4    2[BANK0 ] unsigned long 
  6838 ;;  exp             1    1[BANK0 ] unsigned char 
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  4    2[COMMON] unsigned char 
  6841 ;; Registers used:
  6842 ;;		wreg, status,2, status,0, btemp+1
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6848 ;;      Params:         4       0       0       0       0
  6849 ;;      Locals:         0       6       0       0       0
  6850 ;;      Temps:          4       0       0       0       0
  6851 ;;      Totals:         8       6       0       0       0
  6852 ;;Total ram usage:       14 bytes
  6853 ;; Hardware stack levels used:    1
  6854 ;; Hardware stack levels required when called:    1
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_Voltage_Value
  6859 ;;		_sprintf
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           
  6864                           ;psect for function ___xxtofl
  6865  11F4                     ___xxtofl:
  6866                           
  6867                           ;incstack = 0
  6868                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  6869                           ;___xxtofl@sign stored from wreg
  6870  11F4  1283               	bcf	3,5	;RP0=0, select bank0
  6871  11F5  1303               	bcf	3,6	;RP1=0, select bank0
  6872  11F6  00A0               	movwf	___xxtofl@sign
  6873  11F7                     l3050:
  6874  11F7  0820               	movf	___xxtofl@sign,w
  6875  11F8  1903               	btfsc	3,2
  6876  11F9  29FB               	goto	u4931
  6877  11FA  29FC               	goto	u4930
  6878  11FB                     u4931:
  6879  11FB  2A10               	goto	l3056
  6880  11FC                     u4930:
  6881  11FC                     l3052:
  6882  11FC  1FF6               	btfss	___xxtofl@val+3,7
  6883  11FD  29FF               	goto	u4941
  6884  11FE  2A00               	goto	u4940
  6885  11FF                     u4941:
  6886  11FF  2A10               	goto	l3056
  6887  1200                     u4940:
  6888  1200                     l3054:
  6889  1200  0973               	comf	___xxtofl@val,w
  6890  1201  00A2               	movwf	___xxtofl@arg
  6891  1202  0974               	comf	___xxtofl@val+1,w
  6892  1203  00A3               	movwf	___xxtofl@arg+1
  6893  1204  0975               	comf	___xxtofl@val+2,w
  6894  1205  00A4               	movwf	___xxtofl@arg+2
  6895  1206  0976               	comf	___xxtofl@val+3,w
  6896  1207  00A5               	movwf	___xxtofl@arg+3
  6897  1208  0AA2               	incf	___xxtofl@arg,f
  6898  1209  1903               	skipnz
  6899  120A  0AA3               	incf	___xxtofl@arg+1,f
  6900  120B  1903               	skipnz
  6901  120C  0AA4               	incf	___xxtofl@arg+2,f
  6902  120D  1903               	skipnz
  6903  120E  0AA5               	incf	___xxtofl@arg+3,f
  6904  120F  2A18               	goto	l752
  6905  1210                     l3056:
  6906  1210  0876               	movf	___xxtofl@val+3,w
  6907  1211  00A5               	movwf	___xxtofl@arg+3
  6908  1212  0875               	movf	___xxtofl@val+2,w
  6909  1213  00A4               	movwf	___xxtofl@arg+2
  6910  1214  0874               	movf	___xxtofl@val+1,w
  6911  1215  00A3               	movwf	___xxtofl@arg+1
  6912  1216  0873               	movf	___xxtofl@val,w
  6913  1217  00A2               	movwf	___xxtofl@arg
  6914  1218                     l752:
  6915  1218  0876               	movf	___xxtofl@val+3,w
  6916  1219  0475               	iorwf	___xxtofl@val+2,w
  6917  121A  0474               	iorwf	___xxtofl@val+1,w
  6918  121B  0473               	iorwf	___xxtofl@val,w
  6919  121C  1D03               	skipz
  6920  121D  2A1F               	goto	u4951
  6921  121E  2A20               	goto	u4950
  6922  121F                     u4951:
  6923  121F  2A29               	goto	l3062
  6924  1220                     u4950:
  6925  1220                     l3058:
  6926  1220  3000               	movlw	0
  6927  1221  00F6               	movwf	?___xxtofl+3
  6928  1222  3000               	movlw	0
  6929  1223  00F5               	movwf	?___xxtofl+2
  6930  1224  3000               	movlw	0
  6931  1225  00F4               	movwf	?___xxtofl+1
  6932  1226  3000               	movlw	0
  6933  1227  00F3               	movwf	?___xxtofl
  6934  1228  2AAF               	goto	l754
  6935  1229                     l3062:
  6936  1229  3096               	movlw	150
  6937  122A  00FF               	movwf	btemp+1
  6938  122B  087F               	movf	btemp+1,w
  6939  122C  00A1               	movwf	___xxtofl@exp
  6940  122D  2A3B               	goto	l3068
  6941  122E                     l3064:
  6942  122E  3001               	movlw	1
  6943  122F  00FF               	movwf	btemp+1
  6944  1230  087F               	movf	btemp+1,w
  6945  1231  07A1               	addwf	___xxtofl@exp,f
  6946  1232                     l3066:
  6947  1232  3001               	movlw	1
  6948  1233                     u4965:
  6949  1233  1003               	clrc
  6950  1234  0CA5               	rrf	___xxtofl@arg+3,f
  6951  1235  0CA4               	rrf	___xxtofl@arg+2,f
  6952  1236  0CA3               	rrf	___xxtofl@arg+1,f
  6953  1237  0CA2               	rrf	___xxtofl@arg,f
  6954  1238  3EFF               	addlw	-1
  6955  1239  1D03               	skipz
  6956  123A  2A33               	goto	u4965
  6957  123B                     l3068:
  6958  123B  30FE               	movlw	254
  6959  123C  0525               	andwf	___xxtofl@arg+3,w
  6960  123D  1D03               	btfss	3,2
  6961  123E  2A40               	goto	u4971
  6962  123F  2A41               	goto	u4970
  6963  1240                     u4971:
  6964  1240  2A2E               	goto	l3064
  6965  1241                     u4970:
  6966  1241  2A5D               	goto	l3076
  6967  1242                     l3070:
  6968  1242  3001               	movlw	1
  6969  1243  00FF               	movwf	btemp+1
  6970  1244  087F               	movf	btemp+1,w
  6971  1245  07A1               	addwf	___xxtofl@exp,f
  6972  1246                     l3072:
  6973  1246  3001               	movlw	1
  6974  1247  07A2               	addwf	___xxtofl@arg,f
  6975  1248  3000               	movlw	0
  6976  1249  1803               	skipnc
  6977  124A  3001               	movlw	1
  6978  124B  07A3               	addwf	___xxtofl@arg+1,f
  6979  124C  3000               	movlw	0
  6980  124D  1803               	skipnc
  6981  124E  3001               	movlw	1
  6982  124F  07A4               	addwf	___xxtofl@arg+2,f
  6983  1250  3000               	movlw	0
  6984  1251  1803               	skipnc
  6985  1252  3001               	movlw	1
  6986  1253  07A5               	addwf	___xxtofl@arg+3,f
  6987  1254                     l3074:
  6988  1254  3001               	movlw	1
  6989  1255                     u4985:
  6990  1255  1003               	clrc
  6991  1256  0CA5               	rrf	___xxtofl@arg+3,f
  6992  1257  0CA4               	rrf	___xxtofl@arg+2,f
  6993  1258  0CA3               	rrf	___xxtofl@arg+1,f
  6994  1259  0CA2               	rrf	___xxtofl@arg,f
  6995  125A  3EFF               	addlw	-1
  6996  125B  1D03               	skipz
  6997  125C  2A55               	goto	u4985
  6998  125D                     l3076:
  6999  125D  30FF               	movlw	255
  7000  125E  0525               	andwf	___xxtofl@arg+3,w
  7001  125F  1D03               	btfss	3,2
  7002  1260  2A62               	goto	u4991
  7003  1261  2A63               	goto	u4990
  7004  1262                     u4991:
  7005  1262  2A42               	goto	l3070
  7006  1263                     u4990:
  7007  1263  2A6F               	goto	l3080
  7008  1264                     l3078:
  7009  1264  3001               	movlw	1
  7010  1265  02A1               	subwf	___xxtofl@exp,f
  7011  1266  3001               	movlw	1
  7012  1267  00F7               	movwf	??___xxtofl
  7013  1268                     u5005:
  7014  1268  1003               	clrc
  7015  1269  0DA2               	rlf	___xxtofl@arg,f
  7016  126A  0DA3               	rlf	___xxtofl@arg+1,f
  7017  126B  0DA4               	rlf	___xxtofl@arg+2,f
  7018  126C  0DA5               	rlf	___xxtofl@arg+3,f
  7019  126D  0BF7               	decfsz	??___xxtofl,f
  7020  126E  2A68               	goto	u5005
  7021  126F                     l3080:
  7022  126F  1BA4               	btfsc	___xxtofl@arg+2,7
  7023  1270  2A72               	goto	u5011
  7024  1271  2A73               	goto	u5010
  7025  1272                     u5011:
  7026  1272  2A79               	goto	l765
  7027  1273                     u5010:
  7028  1273                     l3082:
  7029  1273  3002               	movlw	2
  7030  1274  0221               	subwf	___xxtofl@exp,w
  7031  1275  1803               	skipnc
  7032  1276  2A78               	goto	u5021
  7033  1277  2A79               	goto	u5020
  7034  1278                     u5021:
  7035  1278  2A64               	goto	l3078
  7036  1279                     u5020:
  7037  1279                     l765:
  7038  1279  1821               	btfsc	___xxtofl@exp,0
  7039  127A  2A7C               	goto	u5031
  7040  127B  2A7D               	goto	u5030
  7041  127C                     u5031:
  7042  127C  2A85               	goto	l766
  7043  127D                     u5030:
  7044  127D                     l3084:
  7045  127D  30FF               	movlw	255
  7046  127E  05A2               	andwf	___xxtofl@arg,f
  7047  127F  30FF               	movlw	255
  7048  1280  05A3               	andwf	___xxtofl@arg+1,f
  7049  1281  307F               	movlw	127
  7050  1282  05A4               	andwf	___xxtofl@arg+2,f
  7051  1283  30FF               	movlw	255
  7052  1284  05A5               	andwf	___xxtofl@arg+3,f
  7053  1285                     l766:
  7054  1285  1003               	clrc
  7055  1286  0CA1               	rrf	___xxtofl@exp,f
  7056  1287                     l3086:
  7057  1287  0821               	movf	___xxtofl@exp,w
  7058  1288  00F7               	movwf	??___xxtofl
  7059  1289  01F8               	clrf	??___xxtofl+1
  7060  128A  01F9               	clrf	??___xxtofl+2
  7061  128B  01FA               	clrf	??___xxtofl+3
  7062  128C  3018               	movlw	24
  7063  128D                     u5045:
  7064  128D  1003               	clrc
  7065  128E  0DF7               	rlf	??___xxtofl,f
  7066  128F  0DF8               	rlf	??___xxtofl+1,f
  7067  1290  0DF9               	rlf	??___xxtofl+2,f
  7068  1291  0DFA               	rlf	??___xxtofl+3,f
  7069  1292                     u5040:
  7070  1292  3EFF               	addlw	-1
  7071  1293  1D03               	skipz
  7072  1294  2A8D               	goto	u5045
  7073  1295  0877               	movf	??___xxtofl,w
  7074  1296  04A2               	iorwf	___xxtofl@arg,f
  7075  1297  0878               	movf	??___xxtofl+1,w
  7076  1298  04A3               	iorwf	___xxtofl@arg+1,f
  7077  1299  0879               	movf	??___xxtofl+2,w
  7078  129A  04A4               	iorwf	___xxtofl@arg+2,f
  7079  129B  087A               	movf	??___xxtofl+3,w
  7080  129C  04A5               	iorwf	___xxtofl@arg+3,f
  7081  129D                     l3088:
  7082  129D  0820               	movf	___xxtofl@sign,w
  7083  129E  1903               	btfsc	3,2
  7084  129F  2AA1               	goto	u5051
  7085  12A0  2AA2               	goto	u5050
  7086  12A1                     u5051:
  7087  12A1  2AA7               	goto	l3094
  7088  12A2                     u5050:
  7089  12A2                     l3090:
  7090  12A2  1FF6               	btfss	___xxtofl@val+3,7
  7091  12A3  2AA5               	goto	u5061
  7092  12A4  2AA6               	goto	u5060
  7093  12A5                     u5061:
  7094  12A5  2AA7               	goto	l3094
  7095  12A6                     u5060:
  7096  12A6                     l3092:
  7097  12A6  17A5               	bsf	___xxtofl@arg+3,7
  7098  12A7                     l3094:
  7099  12A7  0825               	movf	___xxtofl@arg+3,w
  7100  12A8  00F6               	movwf	?___xxtofl+3
  7101  12A9  0824               	movf	___xxtofl@arg+2,w
  7102  12AA  00F5               	movwf	?___xxtofl+2
  7103  12AB  0823               	movf	___xxtofl@arg+1,w
  7104  12AC  00F4               	movwf	?___xxtofl+1
  7105  12AD  0822               	movf	___xxtofl@arg,w
  7106  12AE  00F3               	movwf	?___xxtofl
  7107  12AF                     l754:
  7108  12AF  0008               	return
  7109  12B0                     __end_of___xxtofl:
  7110                           
  7111                           	psect	text22
  7112  093C                     __ptext22:	
  7113 ;; *************** function ___flmul *****************
  7114 ;; Defined at:
  7115 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  b               4    8[BANK0 ] unsigned char 
  7118 ;;  a               4   12[BANK0 ] unsigned char 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  prod            4   28[BANK0 ] struct .
  7121 ;;  grs             4   22[BANK0 ] unsigned long 
  7122 ;;  temp            2   32[BANK0 ] struct .
  7123 ;;  bexp            1   27[BANK0 ] unsigned char 
  7124 ;;  aexp            1   26[BANK0 ] unsigned char 
  7125 ;;  sign            1   21[BANK0 ] unsigned char 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  4    8[BANK0 ] unsigned char 
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7135 ;;      Params:         0       8       0       0       0
  7136 ;;      Locals:         0      13       0       0       0
  7137 ;;      Temps:          0       5       0       0       0
  7138 ;;      Totals:         0      26       0       0       0
  7139 ;;Total ram usage:       26 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:    2
  7142 ;; This function calls:
  7143 ;;		__Umul8_16
  7144 ;; This function is called by:
  7145 ;;		_Voltage_Value
  7146 ;;		_fround
  7147 ;;		_scale
  7148 ;;		_sprintf
  7149 ;;		_puts_float
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           
  7154                           ;psect for function ___flmul
  7155  093C                     ___flmul:
  7156  093C                     l2544:	
  7157                           ;incstack = 0
  7158                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7159                           
  7160  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7161  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7162  093E  082B               	movf	___flmul@b+3,w
  7163  093F  3980               	andlw	128
  7164  0940  00FF               	movwf	btemp+1
  7165  0941  087F               	movf	btemp+1,w
  7166  0942  00B5               	movwf	___flmul@sign
  7167  0943                     l2546:
  7168  0943  082B               	movf	___flmul@b+3,w
  7169  0944  00B0               	movwf	??___flmul
  7170  0945  0730               	addwf	??___flmul,w
  7171  0946  00FF               	movwf	btemp+1
  7172  0947  087F               	movf	btemp+1,w
  7173  0948  00BB               	movwf	___flmul@bexp
  7174  0949                     l2548:
  7175  0949  1FAA               	btfss	___flmul@b+2,7
  7176  094A  294C               	goto	u3621
  7177  094B  294D               	goto	u3620
  7178  094C                     u3621:
  7179  094C  294E               	goto	l2552
  7180  094D                     u3620:
  7181  094D                     l2550:
  7182  094D  143B               	bsf	___flmul@bexp,0
  7183  094E                     l2552:
  7184  094E  083B               	movf	___flmul@bexp,w
  7185  094F  1903               	btfsc	3,2
  7186  0950  2952               	goto	u3631
  7187  0951  2953               	goto	u3630
  7188  0952                     u3631:
  7189  0952  2962               	goto	l2560
  7190  0953                     u3630:
  7191  0953                     l2554:
  7192  0953  0A3B               	incf	___flmul@bexp,w
  7193  0954  1D03               	btfss	3,2
  7194  0955  2957               	goto	u3641
  7195  0956  2958               	goto	u3640
  7196  0957                     u3641:
  7197  0957  2960               	goto	l2558
  7198  0958                     u3640:
  7199  0958                     l2556:
  7200  0958  3000               	movlw	0
  7201  0959  00AB               	movwf	___flmul@b+3
  7202  095A  3000               	movlw	0
  7203  095B  00AA               	movwf	___flmul@b+2
  7204  095C  3000               	movlw	0
  7205  095D  00A9               	movwf	___flmul@b+1
  7206  095E  3000               	movlw	0
  7207  095F  00A8               	movwf	___flmul@b
  7208  0960                     l2558:
  7209  0960  17AA               	bsf	___flmul@b+2,7
  7210  0961  296A               	goto	l2562
  7211  0962                     l2560:
  7212  0962  3000               	movlw	0
  7213  0963  00AB               	movwf	___flmul@b+3
  7214  0964  3000               	movlw	0
  7215  0965  00AA               	movwf	___flmul@b+2
  7216  0966  3000               	movlw	0
  7217  0967  00A9               	movwf	___flmul@b+1
  7218  0968  3000               	movlw	0
  7219  0969  00A8               	movwf	___flmul@b
  7220  096A                     l2562:
  7221  096A  082F               	movf	___flmul@a+3,w
  7222  096B  3980               	andlw	128
  7223  096C  00FF               	movwf	btemp+1
  7224  096D  087F               	movf	btemp+1,w
  7225  096E  06B5               	xorwf	___flmul@sign,f
  7226  096F                     l2564:
  7227  096F  082F               	movf	___flmul@a+3,w
  7228  0970  00B0               	movwf	??___flmul
  7229  0971  0730               	addwf	??___flmul,w
  7230  0972  00FF               	movwf	btemp+1
  7231  0973  087F               	movf	btemp+1,w
  7232  0974  00BA               	movwf	___flmul@aexp
  7233  0975                     l2566:
  7234  0975  1FAE               	btfss	___flmul@a+2,7
  7235  0976  2978               	goto	u3651
  7236  0977  2979               	goto	u3650
  7237  0978                     u3651:
  7238  0978  297A               	goto	l2570
  7239  0979                     u3650:
  7240  0979                     l2568:
  7241  0979  143A               	bsf	___flmul@aexp,0
  7242  097A                     l2570:
  7243  097A  083A               	movf	___flmul@aexp,w
  7244  097B  1903               	btfsc	3,2
  7245  097C  297E               	goto	u3661
  7246  097D  297F               	goto	u3660
  7247  097E                     u3661:
  7248  097E  298E               	goto	l2578
  7249  097F                     u3660:
  7250  097F                     l2572:
  7251  097F  0A3A               	incf	___flmul@aexp,w
  7252  0980  1D03               	btfss	3,2
  7253  0981  2983               	goto	u3671
  7254  0982  2984               	goto	u3670
  7255  0983                     u3671:
  7256  0983  298C               	goto	l2576
  7257  0984                     u3670:
  7258  0984                     l2574:
  7259  0984  3000               	movlw	0
  7260  0985  00AF               	movwf	___flmul@a+3
  7261  0986  3000               	movlw	0
  7262  0987  00AE               	movwf	___flmul@a+2
  7263  0988  3000               	movlw	0
  7264  0989  00AD               	movwf	___flmul@a+1
  7265  098A  3000               	movlw	0
  7266  098B  00AC               	movwf	___flmul@a
  7267  098C                     l2576:
  7268  098C  17AE               	bsf	___flmul@a+2,7
  7269  098D  2996               	goto	l2580
  7270  098E                     l2578:
  7271  098E  3000               	movlw	0
  7272  098F  00AF               	movwf	___flmul@a+3
  7273  0990  3000               	movlw	0
  7274  0991  00AE               	movwf	___flmul@a+2
  7275  0992  3000               	movlw	0
  7276  0993  00AD               	movwf	___flmul@a+1
  7277  0994  3000               	movlw	0
  7278  0995  00AC               	movwf	___flmul@a
  7279  0996                     l2580:
  7280  0996  083A               	movf	___flmul@aexp,w
  7281  0997  1903               	btfsc	3,2
  7282  0998  299A               	goto	u3681
  7283  0999  299B               	goto	u3680
  7284  099A                     u3681:
  7285  099A  29A0               	goto	l2584
  7286  099B                     u3680:
  7287  099B                     l2582:
  7288  099B  083B               	movf	___flmul@bexp,w
  7289  099C  1D03               	btfss	3,2
  7290  099D  299F               	goto	u3691
  7291  099E  29A0               	goto	u3690
  7292  099F                     u3691:
  7293  099F  29A9               	goto	l2588
  7294  09A0                     u3690:
  7295  09A0                     l2584:
  7296  09A0  3000               	movlw	0
  7297  09A1  00AB               	movwf	?___flmul+3
  7298  09A2  3000               	movlw	0
  7299  09A3  00AA               	movwf	?___flmul+2
  7300  09A4  3000               	movlw	0
  7301  09A5  00A9               	movwf	?___flmul+1
  7302  09A6  3000               	movlw	0
  7303  09A7  00A8               	movwf	?___flmul
  7304  09A8  2C9C               	goto	l708
  7305  09A9                     l2588:
  7306  09A9  0828               	movf	___flmul@b,w
  7307  09AA  00FF               	movwf	btemp+1
  7308  09AB  087F               	movf	btemp+1,w
  7309  09AC  00F3               	movwf	__Umul8_16@multiplicand
  7310  09AD  082E               	movf	___flmul@a+2,w
  7311  09AE  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7312  09B3  0874               	movf	?__Umul8_16+1,w
  7313  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  7314  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  7315  09B6  00C1               	movwf	___flmul@temp+1
  7316  09B7  0873               	movf	?__Umul8_16,w
  7317  09B8  00C0               	movwf	___flmul@temp
  7318  09B9                     l2590:
  7319  09B9  0840               	movf	___flmul@temp,w
  7320  09BA  00B0               	movwf	??___flmul
  7321  09BB  01B1               	clrf	??___flmul+1
  7322  09BC  01B2               	clrf	??___flmul+2
  7323  09BD  01B3               	clrf	??___flmul+3
  7324  09BE  0833               	movf	??___flmul+3,w
  7325  09BF  00B9               	movwf	___flmul@grs+3
  7326  09C0  0832               	movf	??___flmul+2,w
  7327  09C1  00B8               	movwf	___flmul@grs+2
  7328  09C2  0831               	movf	??___flmul+1,w
  7329  09C3  00B7               	movwf	___flmul@grs+1
  7330  09C4  0830               	movf	??___flmul,w
  7331  09C5  00B6               	movwf	___flmul@grs
  7332  09C6                     l2592:
  7333  09C6  0841               	movf	___flmul@temp+1,w
  7334  09C7  00B0               	movwf	??___flmul
  7335  09C8  01B1               	clrf	??___flmul+1
  7336  09C9  01B2               	clrf	??___flmul+2
  7337  09CA  01B3               	clrf	??___flmul+3
  7338  09CB  0833               	movf	??___flmul+3,w
  7339  09CC  00BF               	movwf	___flmul@prod+3
  7340  09CD  0832               	movf	??___flmul+2,w
  7341  09CE  00BE               	movwf	___flmul@prod+2
  7342  09CF  0831               	movf	??___flmul+1,w
  7343  09D0  00BD               	movwf	___flmul@prod+1
  7344  09D1  0830               	movf	??___flmul,w
  7345  09D2  00BC               	movwf	___flmul@prod
  7346  09D3  0829               	movf	___flmul@b+1,w
  7347  09D4  00FF               	movwf	btemp+1
  7348  09D5  087F               	movf	btemp+1,w
  7349  09D6  00F3               	movwf	__Umul8_16@multiplicand
  7350  09D7  082D               	movf	___flmul@a+1,w
  7351  09D8  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7352  09DD  0874               	movf	?__Umul8_16+1,w
  7353  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  7354  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  7355  09E0  00C1               	movwf	___flmul@temp+1
  7356  09E1  0873               	movf	?__Umul8_16,w
  7357  09E2  00C0               	movwf	___flmul@temp
  7358  09E3                     l2594:
  7359  09E3  0840               	movf	___flmul@temp,w
  7360  09E4  00B0               	movwf	??___flmul
  7361  09E5  01B1               	clrf	??___flmul+1
  7362  09E6  01B2               	clrf	??___flmul+2
  7363  09E7  01B3               	clrf	??___flmul+3
  7364  09E8  0830               	movf	??___flmul,w
  7365  09E9  07B6               	addwf	___flmul@grs,f
  7366  09EA  0831               	movf	??___flmul+1,w
  7367  09EB  1103               	clrz
  7368  09EC  1803               	skipnc
  7369  09ED  3E01               	addlw	1
  7370  09EE  1903               	skipnz
  7371  09EF  29F1               	goto	u3701
  7372  09F0  07B7               	addwf	___flmul@grs+1,f
  7373  09F1                     u3701:
  7374  09F1  0832               	movf	??___flmul+2,w
  7375  09F2  1103               	clrz
  7376  09F3  1803               	skipnc
  7377  09F4  3E01               	addlw	1
  7378  09F5  1903               	skipnz
  7379  09F6  29F8               	goto	u3702
  7380  09F7  07B8               	addwf	___flmul@grs+2,f
  7381  09F8                     u3702:
  7382  09F8  0833               	movf	??___flmul+3,w
  7383  09F9  1103               	clrz
  7384  09FA  1803               	skipnc
  7385  09FB  3E01               	addlw	1
  7386  09FC  1903               	skipnz
  7387  09FD  29FF               	goto	u3703
  7388  09FE  07B9               	addwf	___flmul@grs+3,f
  7389  09FF                     u3703:
  7390  09FF                     l2596:
  7391  09FF  0841               	movf	___flmul@temp+1,w
  7392  0A00  00B0               	movwf	??___flmul
  7393  0A01  01B1               	clrf	??___flmul+1
  7394  0A02  01B2               	clrf	??___flmul+2
  7395  0A03  01B3               	clrf	??___flmul+3
  7396  0A04  0830               	movf	??___flmul,w
  7397  0A05  07BC               	addwf	___flmul@prod,f
  7398  0A06  0831               	movf	??___flmul+1,w
  7399  0A07  1103               	clrz
  7400  0A08  1803               	skipnc
  7401  0A09  3E01               	addlw	1
  7402  0A0A  1903               	skipnz
  7403  0A0B  2A0D               	goto	u3711
  7404  0A0C  07BD               	addwf	___flmul@prod+1,f
  7405  0A0D                     u3711:
  7406  0A0D  0832               	movf	??___flmul+2,w
  7407  0A0E  1103               	clrz
  7408  0A0F  1803               	skipnc
  7409  0A10  3E01               	addlw	1
  7410  0A11  1903               	skipnz
  7411  0A12  2A14               	goto	u3712
  7412  0A13  07BE               	addwf	___flmul@prod+2,f
  7413  0A14                     u3712:
  7414  0A14  0833               	movf	??___flmul+3,w
  7415  0A15  1103               	clrz
  7416  0A16  1803               	skipnc
  7417  0A17  3E01               	addlw	1
  7418  0A18  1903               	skipnz
  7419  0A19  2A1B               	goto	u3713
  7420  0A1A  07BF               	addwf	___flmul@prod+3,f
  7421  0A1B                     u3713:
  7422  0A1B  082A               	movf	___flmul@b+2,w
  7423  0A1C  00FF               	movwf	btemp+1
  7424  0A1D  087F               	movf	btemp+1,w
  7425  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  7426  0A1F  082C               	movf	___flmul@a,w
  7427  0A20  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7428  0A25  0874               	movf	?__Umul8_16+1,w
  7429  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  7430  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  7431  0A28  00C1               	movwf	___flmul@temp+1
  7432  0A29  0873               	movf	?__Umul8_16,w
  7433  0A2A  00C0               	movwf	___flmul@temp
  7434  0A2B                     l2598:
  7435  0A2B  0840               	movf	___flmul@temp,w
  7436  0A2C  00B0               	movwf	??___flmul
  7437  0A2D  01B1               	clrf	??___flmul+1
  7438  0A2E  01B2               	clrf	??___flmul+2
  7439  0A2F  01B3               	clrf	??___flmul+3
  7440  0A30  0830               	movf	??___flmul,w
  7441  0A31  07B6               	addwf	___flmul@grs,f
  7442  0A32  0831               	movf	??___flmul+1,w
  7443  0A33  1103               	clrz
  7444  0A34  1803               	skipnc
  7445  0A35  3E01               	addlw	1
  7446  0A36  1903               	skipnz
  7447  0A37  2A39               	goto	u3721
  7448  0A38  07B7               	addwf	___flmul@grs+1,f
  7449  0A39                     u3721:
  7450  0A39  0832               	movf	??___flmul+2,w
  7451  0A3A  1103               	clrz
  7452  0A3B  1803               	skipnc
  7453  0A3C  3E01               	addlw	1
  7454  0A3D  1903               	skipnz
  7455  0A3E  2A40               	goto	u3722
  7456  0A3F  07B8               	addwf	___flmul@grs+2,f
  7457  0A40                     u3722:
  7458  0A40  0833               	movf	??___flmul+3,w
  7459  0A41  1103               	clrz
  7460  0A42  1803               	skipnc
  7461  0A43  3E01               	addlw	1
  7462  0A44  1903               	skipnz
  7463  0A45  2A47               	goto	u3723
  7464  0A46  07B9               	addwf	___flmul@grs+3,f
  7465  0A47                     u3723:
  7466  0A47                     l2600:
  7467  0A47  0841               	movf	___flmul@temp+1,w
  7468  0A48  00B0               	movwf	??___flmul
  7469  0A49  01B1               	clrf	??___flmul+1
  7470  0A4A  01B2               	clrf	??___flmul+2
  7471  0A4B  01B3               	clrf	??___flmul+3
  7472  0A4C  0830               	movf	??___flmul,w
  7473  0A4D  07BC               	addwf	___flmul@prod,f
  7474  0A4E  0831               	movf	??___flmul+1,w
  7475  0A4F  1103               	clrz
  7476  0A50  1803               	skipnc
  7477  0A51  3E01               	addlw	1
  7478  0A52  1903               	skipnz
  7479  0A53  2A55               	goto	u3731
  7480  0A54  07BD               	addwf	___flmul@prod+1,f
  7481  0A55                     u3731:
  7482  0A55  0832               	movf	??___flmul+2,w
  7483  0A56  1103               	clrz
  7484  0A57  1803               	skipnc
  7485  0A58  3E01               	addlw	1
  7486  0A59  1903               	skipnz
  7487  0A5A  2A5C               	goto	u3732
  7488  0A5B  07BE               	addwf	___flmul@prod+2,f
  7489  0A5C                     u3732:
  7490  0A5C  0833               	movf	??___flmul+3,w
  7491  0A5D  1103               	clrz
  7492  0A5E  1803               	skipnc
  7493  0A5F  3E01               	addlw	1
  7494  0A60  1903               	skipnz
  7495  0A61  2A63               	goto	u3733
  7496  0A62  07BF               	addwf	___flmul@prod+3,f
  7497  0A63                     u3733:
  7498  0A63                     l2602:
  7499  0A63  3008               	movlw	8
  7500  0A64  00B0               	movwf	??___flmul
  7501  0A65                     u3745:
  7502  0A65  1003               	clrc
  7503  0A66  0DB6               	rlf	___flmul@grs,f
  7504  0A67  0DB7               	rlf	___flmul@grs+1,f
  7505  0A68  0DB8               	rlf	___flmul@grs+2,f
  7506  0A69  0DB9               	rlf	___flmul@grs+3,f
  7507  0A6A  0BB0               	decfsz	??___flmul,f
  7508  0A6B  2A65               	goto	u3745
  7509  0A6C                     l2604:
  7510  0A6C  0829               	movf	___flmul@b+1,w
  7511  0A6D  00FF               	movwf	btemp+1
  7512  0A6E  087F               	movf	btemp+1,w
  7513  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  7514  0A70  082C               	movf	___flmul@a,w
  7515  0A71  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7516  0A76  0874               	movf	?__Umul8_16+1,w
  7517  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  7518  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  7519  0A79  00C1               	movwf	___flmul@temp+1
  7520  0A7A  0873               	movf	?__Umul8_16,w
  7521  0A7B  00C0               	movwf	___flmul@temp
  7522  0A7C                     l2606:
  7523  0A7C  0840               	movf	___flmul@temp,w
  7524  0A7D  00B0               	movwf	??___flmul
  7525  0A7E  0841               	movf	___flmul@temp+1,w
  7526  0A7F  00B1               	movwf	??___flmul+1
  7527  0A80  01B2               	clrf	??___flmul+2
  7528  0A81  01B3               	clrf	??___flmul+3
  7529  0A82  0830               	movf	??___flmul,w
  7530  0A83  07B6               	addwf	___flmul@grs,f
  7531  0A84  0831               	movf	??___flmul+1,w
  7532  0A85  1103               	clrz
  7533  0A86  1803               	skipnc
  7534  0A87  3E01               	addlw	1
  7535  0A88  1903               	skipnz
  7536  0A89  2A8B               	goto	u3751
  7537  0A8A  07B7               	addwf	___flmul@grs+1,f
  7538  0A8B                     u3751:
  7539  0A8B  0832               	movf	??___flmul+2,w
  7540  0A8C  1103               	clrz
  7541  0A8D  1803               	skipnc
  7542  0A8E  3E01               	addlw	1
  7543  0A8F  1903               	skipnz
  7544  0A90  2A92               	goto	u3752
  7545  0A91  07B8               	addwf	___flmul@grs+2,f
  7546  0A92                     u3752:
  7547  0A92  0833               	movf	??___flmul+3,w
  7548  0A93  1103               	clrz
  7549  0A94  1803               	skipnc
  7550  0A95  3E01               	addlw	1
  7551  0A96  1903               	skipnz
  7552  0A97  2A99               	goto	u3753
  7553  0A98  07B9               	addwf	___flmul@grs+3,f
  7554  0A99                     u3753:
  7555  0A99                     l2608:
  7556  0A99  0828               	movf	___flmul@b,w
  7557  0A9A  00FF               	movwf	btemp+1
  7558  0A9B  087F               	movf	btemp+1,w
  7559  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  7560  0A9D  082D               	movf	___flmul@a+1,w
  7561  0A9E  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7562  0AA3  0874               	movf	?__Umul8_16+1,w
  7563  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  7564  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  7565  0AA6  00C1               	movwf	___flmul@temp+1
  7566  0AA7  0873               	movf	?__Umul8_16,w
  7567  0AA8  00C0               	movwf	___flmul@temp
  7568  0AA9                     l2610:
  7569  0AA9  0840               	movf	___flmul@temp,w
  7570  0AAA  00B0               	movwf	??___flmul
  7571  0AAB  0841               	movf	___flmul@temp+1,w
  7572  0AAC  00B1               	movwf	??___flmul+1
  7573  0AAD  01B2               	clrf	??___flmul+2
  7574  0AAE  01B3               	clrf	??___flmul+3
  7575  0AAF  0830               	movf	??___flmul,w
  7576  0AB0  07B6               	addwf	___flmul@grs,f
  7577  0AB1  0831               	movf	??___flmul+1,w
  7578  0AB2  1103               	clrz
  7579  0AB3  1803               	skipnc
  7580  0AB4  3E01               	addlw	1
  7581  0AB5  1903               	skipnz
  7582  0AB6  2AB8               	goto	u3761
  7583  0AB7  07B7               	addwf	___flmul@grs+1,f
  7584  0AB8                     u3761:
  7585  0AB8  0832               	movf	??___flmul+2,w
  7586  0AB9  1103               	clrz
  7587  0ABA  1803               	skipnc
  7588  0ABB  3E01               	addlw	1
  7589  0ABC  1903               	skipnz
  7590  0ABD  2ABF               	goto	u3762
  7591  0ABE  07B8               	addwf	___flmul@grs+2,f
  7592  0ABF                     u3762:
  7593  0ABF  0833               	movf	??___flmul+3,w
  7594  0AC0  1103               	clrz
  7595  0AC1  1803               	skipnc
  7596  0AC2  3E01               	addlw	1
  7597  0AC3  1903               	skipnz
  7598  0AC4  2AC6               	goto	u3763
  7599  0AC5  07B9               	addwf	___flmul@grs+3,f
  7600  0AC6                     u3763:
  7601  0AC6                     l2612:
  7602  0AC6  3008               	movlw	8
  7603  0AC7  00B0               	movwf	??___flmul
  7604  0AC8                     u3775:
  7605  0AC8  1003               	clrc
  7606  0AC9  0DB6               	rlf	___flmul@grs,f
  7607  0ACA  0DB7               	rlf	___flmul@grs+1,f
  7608  0ACB  0DB8               	rlf	___flmul@grs+2,f
  7609  0ACC  0DB9               	rlf	___flmul@grs+3,f
  7610  0ACD  0BB0               	decfsz	??___flmul,f
  7611  0ACE  2AC8               	goto	u3775
  7612  0ACF  0828               	movf	___flmul@b,w
  7613  0AD0  00FF               	movwf	btemp+1
  7614  0AD1  087F               	movf	btemp+1,w
  7615  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  7616  0AD3  082C               	movf	___flmul@a,w
  7617  0AD4  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7618  0AD9  0874               	movf	?__Umul8_16+1,w
  7619  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  7620  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  7621  0ADC  00C1               	movwf	___flmul@temp+1
  7622  0ADD  0873               	movf	?__Umul8_16,w
  7623  0ADE  00C0               	movwf	___flmul@temp
  7624  0ADF                     l2614:
  7625  0ADF  0840               	movf	___flmul@temp,w
  7626  0AE0  00B0               	movwf	??___flmul
  7627  0AE1  0841               	movf	___flmul@temp+1,w
  7628  0AE2  00B1               	movwf	??___flmul+1
  7629  0AE3  01B2               	clrf	??___flmul+2
  7630  0AE4  01B3               	clrf	??___flmul+3
  7631  0AE5  0830               	movf	??___flmul,w
  7632  0AE6  07B6               	addwf	___flmul@grs,f
  7633  0AE7  0831               	movf	??___flmul+1,w
  7634  0AE8  1103               	clrz
  7635  0AE9  1803               	skipnc
  7636  0AEA  3E01               	addlw	1
  7637  0AEB  1903               	skipnz
  7638  0AEC  2AEE               	goto	u3781
  7639  0AED  07B7               	addwf	___flmul@grs+1,f
  7640  0AEE                     u3781:
  7641  0AEE  0832               	movf	??___flmul+2,w
  7642  0AEF  1103               	clrz
  7643  0AF0  1803               	skipnc
  7644  0AF1  3E01               	addlw	1
  7645  0AF2  1903               	skipnz
  7646  0AF3  2AF5               	goto	u3782
  7647  0AF4  07B8               	addwf	___flmul@grs+2,f
  7648  0AF5                     u3782:
  7649  0AF5  0833               	movf	??___flmul+3,w
  7650  0AF6  1103               	clrz
  7651  0AF7  1803               	skipnc
  7652  0AF8  3E01               	addlw	1
  7653  0AF9  1903               	skipnz
  7654  0AFA  2AFC               	goto	u3783
  7655  0AFB  07B9               	addwf	___flmul@grs+3,f
  7656  0AFC                     u3783:
  7657  0AFC                     l2616:
  7658  0AFC  0829               	movf	___flmul@b+1,w
  7659  0AFD  00FF               	movwf	btemp+1
  7660  0AFE  087F               	movf	btemp+1,w
  7661  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  7662  0B00  082E               	movf	___flmul@a+2,w
  7663  0B01  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7664  0B06  0874               	movf	?__Umul8_16+1,w
  7665  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  7666  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  7667  0B09  00C1               	movwf	___flmul@temp+1
  7668  0B0A  0873               	movf	?__Umul8_16,w
  7669  0B0B  00C0               	movwf	___flmul@temp
  7670  0B0C  0840               	movf	___flmul@temp,w
  7671  0B0D  00B0               	movwf	??___flmul
  7672  0B0E  0841               	movf	___flmul@temp+1,w
  7673  0B0F  00B1               	movwf	??___flmul+1
  7674  0B10  01B2               	clrf	??___flmul+2
  7675  0B11  01B3               	clrf	??___flmul+3
  7676  0B12  0830               	movf	??___flmul,w
  7677  0B13  07BC               	addwf	___flmul@prod,f
  7678  0B14  0831               	movf	??___flmul+1,w
  7679  0B15  1103               	clrz
  7680  0B16  1803               	skipnc
  7681  0B17  3E01               	addlw	1
  7682  0B18  1903               	skipnz
  7683  0B19  2B1B               	goto	u3791
  7684  0B1A  07BD               	addwf	___flmul@prod+1,f
  7685  0B1B                     u3791:
  7686  0B1B  0832               	movf	??___flmul+2,w
  7687  0B1C  1103               	clrz
  7688  0B1D  1803               	skipnc
  7689  0B1E  3E01               	addlw	1
  7690  0B1F  1903               	skipnz
  7691  0B20  2B22               	goto	u3792
  7692  0B21  07BE               	addwf	___flmul@prod+2,f
  7693  0B22                     u3792:
  7694  0B22  0833               	movf	??___flmul+3,w
  7695  0B23  1103               	clrz
  7696  0B24  1803               	skipnc
  7697  0B25  3E01               	addlw	1
  7698  0B26  1903               	skipnz
  7699  0B27  2B29               	goto	u3793
  7700  0B28  07BF               	addwf	___flmul@prod+3,f
  7701  0B29                     u3793:
  7702  0B29                     l2618:
  7703  0B29  082A               	movf	___flmul@b+2,w
  7704  0B2A  00FF               	movwf	btemp+1
  7705  0B2B  087F               	movf	btemp+1,w
  7706  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  7707  0B2D  082D               	movf	___flmul@a+1,w
  7708  0B2E  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7709  0B33  0874               	movf	?__Umul8_16+1,w
  7710  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  7711  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  7712  0B36  00C1               	movwf	___flmul@temp+1
  7713  0B37  0873               	movf	?__Umul8_16,w
  7714  0B38  00C0               	movwf	___flmul@temp
  7715  0B39                     l2620:
  7716  0B39  0840               	movf	___flmul@temp,w
  7717  0B3A  00B0               	movwf	??___flmul
  7718  0B3B  0841               	movf	___flmul@temp+1,w
  7719  0B3C  00B1               	movwf	??___flmul+1
  7720  0B3D  01B2               	clrf	??___flmul+2
  7721  0B3E  01B3               	clrf	??___flmul+3
  7722  0B3F  0830               	movf	??___flmul,w
  7723  0B40  07BC               	addwf	___flmul@prod,f
  7724  0B41  0831               	movf	??___flmul+1,w
  7725  0B42  1103               	clrz
  7726  0B43  1803               	skipnc
  7727  0B44  3E01               	addlw	1
  7728  0B45  1903               	skipnz
  7729  0B46  2B48               	goto	u3801
  7730  0B47  07BD               	addwf	___flmul@prod+1,f
  7731  0B48                     u3801:
  7732  0B48  0832               	movf	??___flmul+2,w
  7733  0B49  1103               	clrz
  7734  0B4A  1803               	skipnc
  7735  0B4B  3E01               	addlw	1
  7736  0B4C  1903               	skipnz
  7737  0B4D  2B4F               	goto	u3802
  7738  0B4E  07BE               	addwf	___flmul@prod+2,f
  7739  0B4F                     u3802:
  7740  0B4F  0833               	movf	??___flmul+3,w
  7741  0B50  1103               	clrz
  7742  0B51  1803               	skipnc
  7743  0B52  3E01               	addlw	1
  7744  0B53  1903               	skipnz
  7745  0B54  2B56               	goto	u3803
  7746  0B55  07BF               	addwf	___flmul@prod+3,f
  7747  0B56                     u3803:
  7748  0B56  082A               	movf	___flmul@b+2,w
  7749  0B57  00FF               	movwf	btemp+1
  7750  0B58  087F               	movf	btemp+1,w
  7751  0B59  00F3               	movwf	__Umul8_16@multiplicand
  7752  0B5A  082E               	movf	___flmul@a+2,w
  7753  0B5B  160A  158A  23DD  120A  158A  	fcall	__Umul8_16
  7754  0B60  0874               	movf	?__Umul8_16+1,w
  7755  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  7756  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  7757  0B63  00C1               	movwf	___flmul@temp+1
  7758  0B64  0873               	movf	?__Umul8_16,w
  7759  0B65  00C0               	movwf	___flmul@temp
  7760  0B66                     l2622:
  7761  0B66  0840               	movf	___flmul@temp,w
  7762  0B67  00B0               	movwf	??___flmul
  7763  0B68  0841               	movf	___flmul@temp+1,w
  7764  0B69  00B1               	movwf	??___flmul+1
  7765  0B6A  01B2               	clrf	??___flmul+2
  7766  0B6B  01B3               	clrf	??___flmul+3
  7767  0B6C  3008               	movlw	8
  7768  0B6D                     u3815:
  7769  0B6D  1003               	clrc
  7770  0B6E  0DB0               	rlf	??___flmul,f
  7771  0B6F  0DB1               	rlf	??___flmul+1,f
  7772  0B70  0DB2               	rlf	??___flmul+2,f
  7773  0B71  0DB3               	rlf	??___flmul+3,f
  7774  0B72                     u3810:
  7775  0B72  3EFF               	addlw	-1
  7776  0B73  1D03               	skipz
  7777  0B74  2B6D               	goto	u3815
  7778  0B75  0830               	movf	??___flmul,w
  7779  0B76  07BC               	addwf	___flmul@prod,f
  7780  0B77  0831               	movf	??___flmul+1,w
  7781  0B78  1103               	clrz
  7782  0B79  1803               	skipnc
  7783  0B7A  3E01               	addlw	1
  7784  0B7B  1903               	skipnz
  7785  0B7C  2B7E               	goto	u3821
  7786  0B7D  07BD               	addwf	___flmul@prod+1,f
  7787  0B7E                     u3821:
  7788  0B7E  0832               	movf	??___flmul+2,w
  7789  0B7F  1103               	clrz
  7790  0B80  1803               	skipnc
  7791  0B81  3E01               	addlw	1
  7792  0B82  1903               	skipnz
  7793  0B83  2B85               	goto	u3822
  7794  0B84  07BE               	addwf	___flmul@prod+2,f
  7795  0B85                     u3822:
  7796  0B85  0833               	movf	??___flmul+3,w
  7797  0B86  1103               	clrz
  7798  0B87  1803               	skipnc
  7799  0B88  3E01               	addlw	1
  7800  0B89  1903               	skipnz
  7801  0B8A  2B8C               	goto	u3823
  7802  0B8B  07BF               	addwf	___flmul@prod+3,f
  7803  0B8C                     u3823:
  7804  0B8C                     l2624:
  7805  0B8C  0836               	movf	___flmul@grs,w
  7806  0B8D  00B0               	movwf	??___flmul
  7807  0B8E  0837               	movf	___flmul@grs+1,w
  7808  0B8F  00B1               	movwf	??___flmul+1
  7809  0B90  0838               	movf	___flmul@grs+2,w
  7810  0B91  00B2               	movwf	??___flmul+2
  7811  0B92  0839               	movf	___flmul@grs+3,w
  7812  0B93  00B3               	movwf	??___flmul+3
  7813  0B94  3018               	movlw	24
  7814  0B95                     u3835:
  7815  0B95  1003               	clrc
  7816  0B96  0CB3               	rrf	??___flmul+3,f
  7817  0B97  0CB2               	rrf	??___flmul+2,f
  7818  0B98  0CB1               	rrf	??___flmul+1,f
  7819  0B99  0CB0               	rrf	??___flmul,f
  7820  0B9A                     u3830:
  7821  0B9A  3EFF               	addlw	-1
  7822  0B9B  1D03               	skipz
  7823  0B9C  2B95               	goto	u3835
  7824  0B9D  0830               	movf	??___flmul,w
  7825  0B9E  07BC               	addwf	___flmul@prod,f
  7826  0B9F  0831               	movf	??___flmul+1,w
  7827  0BA0  1103               	clrz
  7828  0BA1  1803               	skipnc
  7829  0BA2  3E01               	addlw	1
  7830  0BA3  1903               	skipnz
  7831  0BA4  2BA6               	goto	u3841
  7832  0BA5  07BD               	addwf	___flmul@prod+1,f
  7833  0BA6                     u3841:
  7834  0BA6  0832               	movf	??___flmul+2,w
  7835  0BA7  1103               	clrz
  7836  0BA8  1803               	skipnc
  7837  0BA9  3E01               	addlw	1
  7838  0BAA  1903               	skipnz
  7839  0BAB  2BAD               	goto	u3842
  7840  0BAC  07BE               	addwf	___flmul@prod+2,f
  7841  0BAD                     u3842:
  7842  0BAD  0833               	movf	??___flmul+3,w
  7843  0BAE  1103               	clrz
  7844  0BAF  1803               	skipnc
  7845  0BB0  3E01               	addlw	1
  7846  0BB1  1903               	skipnz
  7847  0BB2  2BB4               	goto	u3843
  7848  0BB3  07BF               	addwf	___flmul@prod+3,f
  7849  0BB4                     u3843:
  7850  0BB4                     l2626:
  7851  0BB4  3008               	movlw	8
  7852  0BB5  00B0               	movwf	??___flmul
  7853  0BB6                     u3855:
  7854  0BB6  1003               	clrc
  7855  0BB7  0DB6               	rlf	___flmul@grs,f
  7856  0BB8  0DB7               	rlf	___flmul@grs+1,f
  7857  0BB9  0DB8               	rlf	___flmul@grs+2,f
  7858  0BBA  0DB9               	rlf	___flmul@grs+3,f
  7859  0BBB  0BB0               	decfsz	??___flmul,f
  7860  0BBC  2BB6               	goto	u3855
  7861  0BBD                     l2628:
  7862  0BBD  083B               	movf	___flmul@bexp,w
  7863  0BBE  073A               	addwf	___flmul@aexp,w
  7864  0BBF  00B0               	movwf	??___flmul
  7865  0BC0  01B1               	clrf	??___flmul+1
  7866  0BC1  0DB1               	rlf	??___flmul+1,f
  7867  0BC2  0830               	movf	??___flmul,w
  7868  0BC3  3E82               	addlw	130
  7869  0BC4  00C0               	movwf	___flmul@temp
  7870  0BC5  0831               	movf	??___flmul+1,w
  7871  0BC6  1803               	skipnc
  7872  0BC7  3E01               	addlw	1
  7873  0BC8  3EFF               	addlw	255
  7874  0BC9  00C1               	movwf	___flmul@temp+1
  7875  0BCA  2BE8               	goto	l2640
  7876  0BCB                     l2630:
  7877  0BCB  3001               	movlw	1
  7878  0BCC  00B0               	movwf	??___flmul
  7879  0BCD                     u3865:
  7880  0BCD  1003               	clrc
  7881  0BCE  0DBC               	rlf	___flmul@prod,f
  7882  0BCF  0DBD               	rlf	___flmul@prod+1,f
  7883  0BD0  0DBE               	rlf	___flmul@prod+2,f
  7884  0BD1  0DBF               	rlf	___flmul@prod+3,f
  7885  0BD2  0BB0               	decfsz	??___flmul,f
  7886  0BD3  2BCD               	goto	u3865
  7887  0BD4                     l2632:
  7888  0BD4  1FB9               	btfss	___flmul@grs+3,7
  7889  0BD5  2BD7               	goto	u3871
  7890  0BD6  2BD8               	goto	u3870
  7891  0BD7                     u3871:
  7892  0BD7  2BD9               	goto	l2636
  7893  0BD8                     u3870:
  7894  0BD8                     l2634:
  7895  0BD8  143C               	bsf	___flmul@prod,0
  7896  0BD9                     l2636:
  7897  0BD9  3001               	movlw	1
  7898  0BDA  00B0               	movwf	??___flmul
  7899  0BDB                     u3885:
  7900  0BDB  1003               	clrc
  7901  0BDC  0DB6               	rlf	___flmul@grs,f
  7902  0BDD  0DB7               	rlf	___flmul@grs+1,f
  7903  0BDE  0DB8               	rlf	___flmul@grs+2,f
  7904  0BDF  0DB9               	rlf	___flmul@grs+3,f
  7905  0BE0  0BB0               	decfsz	??___flmul,f
  7906  0BE1  2BDB               	goto	u3885
  7907  0BE2                     l2638:
  7908  0BE2  30FF               	movlw	255
  7909  0BE3  07C0               	addwf	___flmul@temp,f
  7910  0BE4  1803               	skipnc
  7911  0BE5  0AC1               	incf	___flmul@temp+1,f
  7912  0BE6  30FF               	movlw	255
  7913  0BE7  07C1               	addwf	___flmul@temp+1,f
  7914  0BE8                     l2640:
  7915  0BE8  1FBE               	btfss	___flmul@prod+2,7
  7916  0BE9  2BEB               	goto	u3891
  7917  0BEA  2BEC               	goto	u3890
  7918  0BEB                     u3891:
  7919  0BEB  2BCB               	goto	l2630
  7920  0BEC                     u3890:
  7921  0BEC                     l2642:
  7922  0BEC  01BA               	clrf	___flmul@aexp
  7923  0BED                     l2644:
  7924  0BED  1FB9               	btfss	___flmul@grs+3,7
  7925  0BEE  2BF0               	goto	u3901
  7926  0BEF  2BF1               	goto	u3900
  7927  0BF0                     u3901:
  7928  0BF0  2C0D               	goto	l2652
  7929  0BF1                     u3900:
  7930  0BF1                     l2646:
  7931  0BF1  30FF               	movlw	255
  7932  0BF2  0536               	andwf	___flmul@grs,w
  7933  0BF3  00B0               	movwf	??___flmul
  7934  0BF4  30FF               	movlw	255
  7935  0BF5  0537               	andwf	___flmul@grs+1,w
  7936  0BF6  00B1               	movwf	??___flmul+1
  7937  0BF7  30FF               	movlw	255
  7938  0BF8  0538               	andwf	___flmul@grs+2,w
  7939  0BF9  00B2               	movwf	??___flmul+2
  7940  0BFA  307F               	movlw	127
  7941  0BFB  0539               	andwf	___flmul@grs+3,w
  7942  0BFC  00B3               	movwf	??___flmul+3
  7943  0BFD  0833               	movf	??___flmul+3,w
  7944  0BFE  0432               	iorwf	??___flmul+2,w
  7945  0BFF  0431               	iorwf	??___flmul+1,w
  7946  0C00  0430               	iorwf	??___flmul,w
  7947  0C01  1903               	skipnz
  7948  0C02  2C04               	goto	u3911
  7949  0C03  2C05               	goto	u3910
  7950  0C04                     u3911:
  7951  0C04  2C08               	goto	l714
  7952  0C05                     u3910:
  7953  0C05                     l2648:
  7954  0C05  01BA               	clrf	___flmul@aexp
  7955  0C06  0ABA               	incf	___flmul@aexp,f
  7956  0C07  2C0D               	goto	l2652
  7957  0C08                     l714:
  7958  0C08  1C3C               	btfss	___flmul@prod,0
  7959  0C09  2C0B               	goto	u3921
  7960  0C0A  2C0C               	goto	u3920
  7961  0C0B                     u3921:
  7962  0C0B  2C0D               	goto	l2652
  7963  0C0C                     u3920:
  7964  0C0C  2C05               	goto	l2648
  7965  0C0D                     l2652:
  7966  0C0D  083A               	movf	___flmul@aexp,w
  7967  0C0E  1903               	btfsc	3,2
  7968  0C0F  2C11               	goto	u3931
  7969  0C10  2C12               	goto	u3930
  7970  0C11                     u3931:
  7971  0C11  2C43               	goto	l2662
  7972  0C12                     u3930:
  7973  0C12                     l2654:
  7974  0C12  3001               	movlw	1
  7975  0C13  07BC               	addwf	___flmul@prod,f
  7976  0C14  3000               	movlw	0
  7977  0C15  1803               	skipnc
  7978  0C16  3001               	movlw	1
  7979  0C17  07BD               	addwf	___flmul@prod+1,f
  7980  0C18  3000               	movlw	0
  7981  0C19  1803               	skipnc
  7982  0C1A  3001               	movlw	1
  7983  0C1B  07BE               	addwf	___flmul@prod+2,f
  7984  0C1C  3000               	movlw	0
  7985  0C1D  1803               	skipnc
  7986  0C1E  3001               	movlw	1
  7987  0C1F  07BF               	addwf	___flmul@prod+3,f
  7988  0C20                     l2656:
  7989  0C20  1C3F               	btfss	___flmul@prod+3,0
  7990  0C21  2C23               	goto	u3941
  7991  0C22  2C24               	goto	u3940
  7992  0C23                     u3941:
  7993  0C23  2C43               	goto	l2662
  7994  0C24                     u3940:
  7995  0C24                     l2658:
  7996  0C24  083C               	movf	___flmul@prod,w
  7997  0C25  00B0               	movwf	??___flmul
  7998  0C26  083D               	movf	___flmul@prod+1,w
  7999  0C27  00B1               	movwf	??___flmul+1
  8000  0C28  083E               	movf	___flmul@prod+2,w
  8001  0C29  00B2               	movwf	??___flmul+2
  8002  0C2A  083F               	movf	___flmul@prod+3,w
  8003  0C2B  00B3               	movwf	??___flmul+3
  8004  0C2C  3001               	movlw	1
  8005  0C2D  00B4               	movwf	??___flmul+4
  8006  0C2E                     u3955:
  8007  0C2E  0D33               	rlf	??___flmul+3,w
  8008  0C2F  0CB3               	rrf	??___flmul+3,f
  8009  0C30  0CB2               	rrf	??___flmul+2,f
  8010  0C31  0CB1               	rrf	??___flmul+1,f
  8011  0C32  0CB0               	rrf	??___flmul,f
  8012  0C33                     u3950:
  8013  0C33  0BB4               	decfsz	??___flmul+4,f
  8014  0C34  2C2E               	goto	u3955
  8015  0C35  0833               	movf	??___flmul+3,w
  8016  0C36  00BF               	movwf	___flmul@prod+3
  8017  0C37  0832               	movf	??___flmul+2,w
  8018  0C38  00BE               	movwf	___flmul@prod+2
  8019  0C39  0831               	movf	??___flmul+1,w
  8020  0C3A  00BD               	movwf	___flmul@prod+1
  8021  0C3B  0830               	movf	??___flmul,w
  8022  0C3C  00BC               	movwf	___flmul@prod
  8023  0C3D                     l2660:
  8024  0C3D  3001               	movlw	1
  8025  0C3E  07C0               	addwf	___flmul@temp,f
  8026  0C3F  1803               	skipnc
  8027  0C40  0AC1               	incf	___flmul@temp+1,f
  8028  0C41  3000               	movlw	0
  8029  0C42  07C1               	addwf	___flmul@temp+1,f
  8030  0C43                     l2662:
  8031  0C43  0841               	movf	___flmul@temp+1,w
  8032  0C44  3A80               	xorlw	128
  8033  0C45  00FF               	movwf	btemp+1
  8034  0C46  3080               	movlw	128
  8035  0C47  027F               	subwf	btemp+1,w
  8036  0C48  1D03               	skipz
  8037  0C49  2C4C               	goto	u3965
  8038  0C4A  30FF               	movlw	255
  8039  0C4B  0240               	subwf	___flmul@temp,w
  8040  0C4C                     u3965:
  8041  0C4C  1C03               	skipc
  8042  0C4D  2C4F               	goto	u3961
  8043  0C4E  2C50               	goto	u3960
  8044  0C4F                     u3961:
  8045  0C4F  2C5B               	goto	l2666
  8046  0C50                     u3960:
  8047  0C50                     l2664:
  8048  0C50  307F               	movlw	127
  8049  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8050  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8051  0C53  00BF               	movwf	___flmul@prod+3
  8052  0C54  3080               	movlw	128
  8053  0C55  00BE               	movwf	___flmul@prod+2
  8054  0C56  3000               	movlw	0
  8055  0C57  00BD               	movwf	___flmul@prod+1
  8056  0C58  3000               	movlw	0
  8057  0C59  00BC               	movwf	___flmul@prod
  8058  0C5A  2C90               	goto	l720
  8059  0C5B                     l2666:
  8060  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8061  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8062  0C5D  0841               	movf	___flmul@temp+1,w
  8063  0C5E  3A80               	xorlw	128
  8064  0C5F  00FF               	movwf	btemp+1
  8065  0C60  3080               	movlw	128
  8066  0C61  027F               	subwf	btemp+1,w
  8067  0C62  1D03               	skipz
  8068  0C63  2C66               	goto	u3975
  8069  0C64  3001               	movlw	1
  8070  0C65  0240               	subwf	___flmul@temp,w
  8071  0C66                     u3975:
  8072  0C66  1803               	skipnc
  8073  0C67  2C69               	goto	u3971
  8074  0C68  2C6A               	goto	u3970
  8075  0C69                     u3971:
  8076  0C69  2C76               	goto	l2672
  8077  0C6A                     u3970:
  8078  0C6A                     l2668:
  8079  0C6A  3000               	movlw	0
  8080  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8081  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8082  0C6D  00BF               	movwf	___flmul@prod+3
  8083  0C6E  3000               	movlw	0
  8084  0C6F  00BE               	movwf	___flmul@prod+2
  8085  0C70  3000               	movlw	0
  8086  0C71  00BD               	movwf	___flmul@prod+1
  8087  0C72  3000               	movlw	0
  8088  0C73  00BC               	movwf	___flmul@prod
  8089  0C74                     l2670:
  8090  0C74  01B5               	clrf	___flmul@sign
  8091  0C75  2C90               	goto	l720
  8092  0C76                     l2672:
  8093  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8094  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8095  0C78  0840               	movf	___flmul@temp,w
  8096  0C79  00FF               	movwf	btemp+1
  8097  0C7A  087F               	movf	btemp+1,w
  8098  0C7B  00BB               	movwf	___flmul@bexp
  8099  0C7C                     l2674:
  8100  0C7C  30FF               	movlw	255
  8101  0C7D  05BC               	andwf	___flmul@prod,f
  8102  0C7E  30FF               	movlw	255
  8103  0C7F  05BD               	andwf	___flmul@prod+1,f
  8104  0C80  307F               	movlw	127
  8105  0C81  05BE               	andwf	___flmul@prod+2,f
  8106  0C82  3000               	movlw	0
  8107  0C83  05BF               	andwf	___flmul@prod+3,f
  8108  0C84                     l2676:
  8109  0C84  1C3B               	btfss	___flmul@bexp,0
  8110  0C85  2C87               	goto	u3981
  8111  0C86  2C88               	goto	u3980
  8112  0C87                     u3981:
  8113  0C87  2C89               	goto	l2680
  8114  0C88                     u3980:
  8115  0C88                     l2678:
  8116  0C88  17BE               	bsf	___flmul@prod+2,7
  8117  0C89                     l2680:
  8118  0C89  083B               	movf	___flmul@bexp,w
  8119  0C8A  00B0               	movwf	??___flmul
  8120  0C8B  1003               	clrc
  8121  0C8C  0C30               	rrf	??___flmul,w
  8122  0C8D  00FF               	movwf	btemp+1
  8123  0C8E  087F               	movf	btemp+1,w
  8124  0C8F  00BF               	movwf	___flmul@prod+3
  8125  0C90                     l720:
  8126  0C90  0835               	movf	___flmul@sign,w
  8127  0C91  00FF               	movwf	btemp+1
  8128  0C92  087F               	movf	btemp+1,w
  8129  0C93  04BF               	iorwf	___flmul@prod+3,f
  8130  0C94                     l2682:
  8131  0C94  083F               	movf	___flmul@prod+3,w
  8132  0C95  00AB               	movwf	?___flmul+3
  8133  0C96  083E               	movf	___flmul@prod+2,w
  8134  0C97  00AA               	movwf	?___flmul+2
  8135  0C98  083D               	movf	___flmul@prod+1,w
  8136  0C99  00A9               	movwf	?___flmul+1
  8137  0C9A  083C               	movf	___flmul@prod,w
  8138  0C9B  00A8               	movwf	?___flmul
  8139  0C9C                     l708:
  8140  0C9C  0008               	return
  8141  0C9D                     __end_of___flmul:
  8142                           
  8143                           	psect	text23
  8144  1BDD                     __ptext23:	
  8145 ;; *************** function __Umul8_16 *****************
  8146 ;; Defined at:
  8147 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  multiplier      1    wreg     unsigned char 
  8150 ;;  multiplicand    1    2[COMMON] unsigned char 
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;  multiplier      1   10[COMMON] unsigned char 
  8153 ;;  word_mpld       2    8[COMMON] unsigned int 
  8154 ;;  product         2    6[COMMON] unsigned int 
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  2    2[COMMON] unsigned int 
  8157 ;; Registers used:
  8158 ;;		wreg, status,2, status,0
  8159 ;; Tracked objects:
  8160 ;;		On entry : 0/0
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8164 ;;      Params:         2       0       0       0       0
  8165 ;;      Locals:         5       0       0       0       0
  8166 ;;      Temps:          2       0       0       0       0
  8167 ;;      Totals:         9       0       0       0       0
  8168 ;;Total ram usage:        9 bytes
  8169 ;; Hardware stack levels used:    1
  8170 ;; Hardware stack levels required when called:    1
  8171 ;; This function calls:
  8172 ;;		Nothing
  8173 ;; This function is called by:
  8174 ;;		___flmul
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           
  8179                           ;psect for function __Umul8_16
  8180  1BDD                     __Umul8_16:
  8181                           
  8182                           ;incstack = 0
  8183                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8184                           ;__Umul8_16@multiplier stored from wreg
  8185  1BDD  00FB               	movwf	__Umul8_16@multiplier
  8186  1BDE                     l2198:
  8187  1BDE  01F7               	clrf	__Umul8_16@product
  8188  1BDF  01F8               	clrf	__Umul8_16@product+1
  8189  1BE0                     l2200:
  8190  1BE0  0873               	movf	__Umul8_16@multiplicand,w
  8191  1BE1  00F5               	movwf	??__Umul8_16
  8192  1BE2  01F6               	clrf	??__Umul8_16+1
  8193  1BE3  0875               	movf	??__Umul8_16,w
  8194  1BE4  00F9               	movwf	__Umul8_16@word_mpld
  8195  1BE5  0876               	movf	??__Umul8_16+1,w
  8196  1BE6  00FA               	movwf	__Umul8_16@word_mpld+1
  8197  1BE7                     l2202:
  8198  1BE7  1C7B               	btfss	__Umul8_16@multiplier,0
  8199  1BE8  2BEA               	goto	u2811
  8200  1BE9  2BEB               	goto	u2810
  8201  1BEA                     u2811:
  8202  1BEA  2BF1               	goto	l727
  8203  1BEB                     u2810:
  8204  1BEB                     l2204:
  8205  1BEB  0879               	movf	__Umul8_16@word_mpld,w
  8206  1BEC  07F7               	addwf	__Umul8_16@product,f
  8207  1BED  1803               	skipnc
  8208  1BEE  0AF8               	incf	__Umul8_16@product+1,f
  8209  1BEF  087A               	movf	__Umul8_16@word_mpld+1,w
  8210  1BF0  07F8               	addwf	__Umul8_16@product+1,f
  8211  1BF1                     l727:
  8212  1BF1  3001               	movlw	1
  8213  1BF2                     u2825:
  8214  1BF2  1003               	clrc
  8215  1BF3  0DF9               	rlf	__Umul8_16@word_mpld,f
  8216  1BF4  0DFA               	rlf	__Umul8_16@word_mpld+1,f
  8217  1BF5  3EFF               	addlw	-1
  8218  1BF6  1D03               	skipz
  8219  1BF7  2BF2               	goto	u2825
  8220  1BF8  1003               	clrc
  8221  1BF9  0CFB               	rrf	__Umul8_16@multiplier,f
  8222  1BFA                     l2206:
  8223  1BFA  087B               	movf	__Umul8_16@multiplier,w
  8224  1BFB  1D03               	btfss	3,2
  8225  1BFC  2BFE               	goto	u2831
  8226  1BFD  2BFF               	goto	u2830
  8227  1BFE                     u2831:
  8228  1BFE  2BE7               	goto	l2202
  8229  1BFF                     u2830:
  8230  1BFF                     l2208:
  8231  1BFF  0878               	movf	__Umul8_16@product+1,w
  8232  1C00  00F4               	movwf	?__Umul8_16+1
  8233  1C01  0877               	movf	__Umul8_16@product,w
  8234  1C02  00F3               	movwf	?__Umul8_16
  8235  1C03                     l729:
  8236  1C03  0008               	return
  8237  1C04                     __end_of__Umul8_16:
  8238                           
  8239                           	psect	text24
  8240  1B73                     __ptext24:	
  8241 ;; *************** function _TIMER_init_timer1 *****************
  8242 ;; Defined at:
  8243 ;;		line 8 in file "timer.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;		None
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;		None
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  1    wreg      void 
  8250 ;; Registers used:
  8251 ;;		wreg
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8257 ;;      Params:         0       0       0       0       0
  8258 ;;      Locals:         0       0       0       0       0
  8259 ;;      Temps:          0       0       0       0       0
  8260 ;;      Totals:         0       0       0       0       0
  8261 ;;Total ram usage:        0 bytes
  8262 ;; Hardware stack levels used:    1
  8263 ;; Hardware stack levels required when called:    1
  8264 ;; This function calls:
  8265 ;;		Nothing
  8266 ;; This function is called by:
  8267 ;;		_main
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           
  8272                           ;psect for function _TIMER_init_timer1
  8273  1B73                     _TIMER_init_timer1:
  8274  1B73                     l3130:	
  8275                           ;incstack = 0
  8276                           ; Regs used in _TIMER_init_timer1: [wreg]
  8277                           
  8278                           
  8279                           ;timer.c: 10:     TMRA = 65535-5000;
  8280  1B73  3077               	movlw	119
  8281  1B74  1283               	bcf	3,5	;RP0=0, select bank2
  8282  1B75  1703               	bsf	3,6	;RP1=1, select bank2
  8283  1B76  0090               	movwf	16	;volatile
  8284  1B77                     l3132:
  8285                           
  8286                           ;timer.c: 24:     T1OSCEN=0;
  8287  1B77  1283               	bcf	3,5	;RP0=0, select bank0
  8288  1B78  1303               	bcf	3,6	;RP1=0, select bank0
  8289  1B79  1190               	bcf	16,3	;volatile
  8290  1B7A                     l3134:
  8291                           
  8292                           ;timer.c: 36:     TMRCS1=0;
  8293  1B7A  1390               	bcf	16,7	;volatile
  8294  1B7B                     l3136:
  8295                           
  8296                           ;timer.c: 37:     TMRCS0=0;
  8297  1B7B  1310               	bcf	16,6	;volatile
  8298  1B7C                     l3138:
  8299                           
  8300                           ;timer.c: 46:     T1CKPS0=1;
  8301  1B7C  1610               	bsf	16,4	;volatile
  8302  1B7D                     l3140:
  8303                           
  8304                           ;timer.c: 47:     T1CKPS1=1;
  8305  1B7D  1690               	bsf	16,5	;volatile
  8306  1B7E                     l3142:
  8307                           
  8308                           ;timer.c: 56:     T1SYNC=1;
  8309  1B7E  1510               	bsf	16,2	;volatile
  8310  1B7F                     l3144:
  8311                           
  8312                           ;timer.c: 62:     TMR1ON=1;
  8313  1B7F  1410               	bsf	16,0	;volatile
  8314  1B80                     l3146:
  8315                           
  8316                           ;timer.c: 71:     TMR1GE=0;
  8317  1B80  1683               	bsf	3,5	;RP0=1, select bank1
  8318  1B81  1303               	bcf	3,6	;RP1=0, select bank1
  8319  1B82  138F               	bcf	15,7	;volatile
  8320  1B83                     l3148:
  8321                           
  8322                           ;timer.c: 75:     TMR1IE=1;
  8323  1B83  140C               	bsf	12,0	;volatile
  8324  1B84                     l164:
  8325  1B84  0008               	return
  8326  1B85                     __end_of_TIMER_init_timer1:
  8327                           
  8328                           	psect	text25
  8329  1B97                     __ptext25:	
  8330 ;; *************** function _PORT_putString *****************
  8331 ;; Defined at:
  8332 ;;		line 136 in file "port.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  chaine          1    wreg     PTR unsigned char 
  8335 ;;		 -> main@tab(20), 
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;  chaine          1    6[COMMON] PTR unsigned char 
  8338 ;;		 -> main@tab(20), 
  8339 ;;  i               2    4[COMMON] int 
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  1    wreg      void 
  8342 ;; Registers used:
  8343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8349 ;;      Params:         0       0       0       0       0
  8350 ;;      Locals:         3       0       0       0       0
  8351 ;;      Temps:          1       0       0       0       0
  8352 ;;      Totals:         4       0       0       0       0
  8353 ;;Total ram usage:        4 bytes
  8354 ;; Hardware stack levels used:    1
  8355 ;; Hardware stack levels required when called:    2
  8356 ;; This function calls:
  8357 ;;		_PORT_putchar
  8358 ;; This function is called by:
  8359 ;;		_main
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           
  8364                           ;psect for function _PORT_putString
  8365  1B97                     _PORT_putString:
  8366                           
  8367                           ;incstack = 0
  8368                           ; Regs used in _PORT_putString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8369                           ;PORT_putString@chaine stored from wreg
  8370  1B97  00F7               	movwf	PORT_putString@chaine
  8371  1B98                     l3436:
  8372                           
  8373                           ;port.c: 138:     int i;;port.c: 140:     for(i=0 ; chaine[i]!=0 ; i++)
  8374  1B98  01F5               	clrf	PORT_putString@i
  8375  1B99  01F6               	clrf	PORT_putString@i+1
  8376  1B9A  2BAC               	goto	l3442
  8377  1B9B                     l3438:
  8378                           
  8379                           ;port.c: 141:     {;port.c: 142:         PORT_putchar(chaine[i]);
  8380  1B9B  0875               	movf	PORT_putString@i,w
  8381  1B9C  0777               	addwf	PORT_putString@chaine,w
  8382  1B9D  00F4               	movwf	??_PORT_putString
  8383  1B9E  0874               	movf	??_PORT_putString,w
  8384  1B9F  0084               	movwf	4
  8385  1BA0  0800               	movf	0,w
  8386  1BA1  160A  158A  2333  160A  158A  	fcall	_PORT_putchar
  8387  1BA6                     l3440:
  8388                           
  8389                           ;port.c: 143:     }
  8390  1BA6  3001               	movlw	1
  8391  1BA7  07F5               	addwf	PORT_putString@i,f
  8392  1BA8  1803               	skipnc
  8393  1BA9  0AF6               	incf	PORT_putString@i+1,f
  8394  1BAA  3000               	movlw	0
  8395  1BAB  07F6               	addwf	PORT_putString@i+1,f
  8396  1BAC                     l3442:
  8397  1BAC  0875               	movf	PORT_putString@i,w
  8398  1BAD  0777               	addwf	PORT_putString@chaine,w
  8399  1BAE  00F4               	movwf	??_PORT_putString
  8400  1BAF  0874               	movf	??_PORT_putString,w
  8401  1BB0  0084               	movwf	4
  8402  1BB1  1383               	bcf	3,7	;select IRP bank0
  8403  1BB2  0800               	movf	0,w
  8404  1BB3  1D03               	btfss	3,2
  8405  1BB4  2BB6               	goto	u5571
  8406  1BB5  2BB7               	goto	u5570
  8407  1BB6                     u5571:
  8408  1BB6  2B9B               	goto	l3438
  8409  1BB7                     u5570:
  8410  1BB7                     l129:
  8411  1BB7  0008               	return
  8412  1BB8                     __end_of_PORT_putString:
  8413                           
  8414                           	psect	text26
  8415  1B33                     __ptext26:	
  8416 ;; *************** function _PORT_putchar *****************
  8417 ;; Defined at:
  8418 ;;		line 126 in file "port.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  c               1    wreg     unsigned char 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  c               1    2[COMMON] unsigned char 
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		wreg
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8432 ;;      Params:         0       0       0       0       0
  8433 ;;      Locals:         1       0       0       0       0
  8434 ;;      Temps:          0       0       0       0       0
  8435 ;;      Totals:         1       0       0       0       0
  8436 ;;Total ram usage:        1 bytes
  8437 ;; Hardware stack levels used:    1
  8438 ;; Hardware stack levels required when called:    1
  8439 ;; This function calls:
  8440 ;;		Nothing
  8441 ;; This function is called by:
  8442 ;;		_PORT_putString
  8443 ;;		_puts_float
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           
  8448                           ;psect for function _PORT_putchar
  8449  1B33                     _PORT_putchar:
  8450                           
  8451                           ;incstack = 0
  8452                           ; Regs used in _PORT_putchar: [wreg]
  8453                           ;PORT_putchar@c stored from wreg
  8454  1B33  00F3               	movwf	PORT_putchar@c
  8455  1B34                     l2686:
  8456  1B34                     l120:	
  8457                           ;port.c: 128:     for(;(TXSTA&0x02)!=0x02;);
  8458                           
  8459  1B34  1683               	bsf	3,5	;RP0=1, select bank1
  8460  1B35  1303               	bcf	3,6	;RP1=0, select bank1
  8461  1B36  1C98               	btfss	24,1	;volatile
  8462  1B37  2B39               	goto	u3991
  8463  1B38  2B3A               	goto	u3990
  8464  1B39                     u3991:
  8465  1B39  2B34               	goto	l120
  8466  1B3A                     u3990:
  8467  1B3A                     l2688:
  8468                           
  8469                           ;port.c: 129:     TXREG = c;
  8470  1B3A  0873               	movf	PORT_putchar@c,w
  8471  1B3B  1283               	bcf	3,5	;RP0=0, select bank0
  8472  1B3C  1303               	bcf	3,6	;RP1=0, select bank0
  8473  1B3D  0099               	movwf	25	;volatile
  8474  1B3E                     l123:
  8475  1B3E  0008               	return
  8476  1B3F                     __end_of_PORT_putchar:
  8477                           
  8478                           	psect	text27
  8479  1B20                     __ptext27:	
  8480 ;; *************** function _PORT_Select_Mux0 *****************
  8481 ;; Defined at:
  8482 ;;		line 149 in file "port.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;		None
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;		None
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  1    wreg      void 
  8489 ;; Registers used:
  8490 ;;		wreg, status,2, status,0, btemp+1
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8496 ;;      Params:         0       0       0       0       0
  8497 ;;      Locals:         0       0       0       0       0
  8498 ;;      Temps:          0       0       0       0       0
  8499 ;;      Totals:         0       0       0       0       0
  8500 ;;Total ram usage:        0 bytes
  8501 ;; Hardware stack levels used:    1
  8502 ;; Hardware stack levels required when called:    1
  8503 ;; This function calls:
  8504 ;;		Nothing
  8505 ;; This function is called by:
  8506 ;;		_main
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           
  8511                           ;psect for function _PORT_Select_Mux0
  8512  1B20                     _PORT_Select_Mux0:
  8513  1B20                     l3150:	
  8514                           ;incstack = 0
  8515                           ; Regs used in _PORT_Select_Mux0: [wreg+status,2+status,0+btemp+1]
  8516                           
  8517                           
  8518                           ;port.c: 150:     PORTD |= 0x20;
  8519  1B20  1283               	bcf	3,5	;RP0=0, select bank0
  8520  1B21  1303               	bcf	3,6	;RP1=0, select bank0
  8521  1B22  1688               	bsf	8,5	;volatile
  8522  1B23                     l3152:
  8523                           
  8524                           ;port.c: 151:     PORTD &= 0xEF;
  8525  1B23  30EF               	movlw	239
  8526  1B24  00FF               	movwf	btemp+1
  8527  1B25  087F               	movf	btemp+1,w
  8528  1B26  0588               	andwf	8,f	;volatile
  8529  1B27                     l132:
  8530  1B27  0008               	return
  8531  1B28                     __end_of_PORT_Select_Mux0:
  8532                           
  8533                           	psect	text28
  8534  1C2F                     __ptext28:	
  8535 ;; *************** function _PORT_Init *****************
  8536 ;; Defined at:
  8537 ;;		line 44 in file "port.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;		None
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;		None
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      void 
  8544 ;; Registers used:
  8545 ;;		wreg, status,2, status,0, pclath, cstack
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8551 ;;      Params:         0       0       0       0       0
  8552 ;;      Locals:         0       0       0       0       0
  8553 ;;      Temps:          1       0       0       0       0
  8554 ;;      Totals:         1       0       0       0       0
  8555 ;;Total ram usage:        1 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; Hardware stack levels required when called:    2
  8558 ;; This function calls:
  8559 ;;		_PORT_Init_Serial
  8560 ;; This function is called by:
  8561 ;;		_main
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           
  8566                           ;psect for function _PORT_Init
  8567  1C2F                     _PORT_Init:
  8568  1C2F                     l3098:	
  8569                           ;incstack = 0
  8570                           ; Regs used in _PORT_Init: [wreg+status,2+status,0+pclath+cstack]
  8571                           
  8572                           
  8573                           ;port.c: 47:     WPUB=0;
  8574  1C2F  1683               	bsf	3,5	;RP0=1, select bank1
  8575  1C30  1303               	bcf	3,6	;RP1=0, select bank1
  8576  1C31  0195               	clrf	21	;volatile
  8577                           
  8578                           ;port.c: 48:     ANSELB = 0;
  8579  1C32  1683               	bsf	3,5	;RP0=1, select bank3
  8580  1C33  1703               	bsf	3,6	;RP1=1, select bank3
  8581  1C34  0186               	clrf	6	;volatile
  8582  1C35                     l3100:
  8583                           
  8584                           ;port.c: 51:     TRISB = 0xFE;
  8585  1C35  30FE               	movlw	254
  8586  1C36  1683               	bsf	3,5	;RP0=1, select bank1
  8587  1C37  1303               	bcf	3,6	;RP1=0, select bank1
  8588  1C38  0086               	movwf	6	;volatile
  8589  1C39                     l3102:
  8590                           
  8591                           ;port.c: 54:     OSCCON = 0x30;
  8592  1C39  3030               	movlw	48
  8593  1C3A  0090               	movwf	16	;volatile
  8594  1C3B                     l3104:	
  8595                           ;port.c: 55:     for( ; (OSCCON & 0xC) != 0xC ; );
  8596                           
  8597  1C3B  300C               	movlw	12
  8598  1C3C  0510               	andwf	16,w	;volatile
  8599  1C3D  00F3               	movwf	??_PORT_Init
  8600  1C3E  300C               	movlw	12
  8601  1C3F  0673               	xorwf	??_PORT_Init,w
  8602  1C40  1D03               	btfss	3,2
  8603  1C41  2C43               	goto	u5071
  8604  1C42  2C44               	goto	u5070
  8605  1C43                     u5071:
  8606  1C43  2C3B               	goto	l3104
  8607  1C44                     u5070:
  8608  1C44                     l3106:
  8609                           
  8610                           ;port.c: 59:     ANSELD = 0x00;
  8611  1C44  1683               	bsf	3,5	;RP0=1, select bank3
  8612  1C45  1703               	bsf	3,6	;RP1=1, select bank3
  8613  1C46  0188               	clrf	8	;volatile
  8614  1C47                     l3108:
  8615                           
  8616                           ;port.c: 62:     TRISA = 0xFF;
  8617  1C47  30FF               	movlw	255
  8618  1C48  1683               	bsf	3,5	;RP0=1, select bank1
  8619  1C49  1303               	bcf	3,6	;RP1=0, select bank1
  8620  1C4A  0085               	movwf	5	;volatile
  8621  1C4B                     l3110:
  8622                           
  8623                           ;port.c: 64:     TRISD = 0xC0;
  8624  1C4B  30C0               	movlw	192
  8625  1C4C  0088               	movwf	8	;volatile
  8626  1C4D                     l3112:
  8627                           
  8628                           ;port.c: 66:     PORT_Init_Serial();
  8629  1C4D  160A  158A  2404  160A  158A  	fcall	_PORT_Init_Serial
  8630  1C52                     l3114:
  8631                           
  8632                           ;port.c: 68:     ANSELA = 0x01;
  8633  1C52  3001               	movlw	1
  8634  1C53  1683               	bsf	3,5	;RP0=1, select bank3
  8635  1C54  1703               	bsf	3,6	;RP1=1, select bank3
  8636  1C55  0085               	movwf	5	;volatile
  8637  1C56                     l3116:
  8638                           
  8639                           ;port.c: 70:     ADCON0=0x01;
  8640  1C56  3001               	movlw	1
  8641  1C57  1283               	bcf	3,5	;RP0=0, select bank0
  8642  1C58  1303               	bcf	3,6	;RP1=0, select bank0
  8643  1C59  009F               	movwf	31	;volatile
  8644  1C5A                     l3118:
  8645                           
  8646                           ;port.c: 71:     ADCON1=0x60;
  8647  1C5A  3060               	movlw	96
  8648  1C5B  1683               	bsf	3,5	;RP0=1, select bank1
  8649  1C5C  1303               	bcf	3,6	;RP1=0, select bank1
  8650  1C5D  009F               	movwf	31	;volatile
  8651  1C5E                     l3120:
  8652                           
  8653                           ;port.c: 73:     FVRCON=0;
  8654  1C5E  019D               	clrf	29	;volatile
  8655  1C5F                     l3122:
  8656                           
  8657                           ;port.c: 74:     DACCON0=0x0;
  8658  1C5F  1283               	bcf	3,5	;RP0=0, select bank2
  8659  1C60  1703               	bsf	3,6	;RP1=1, select bank2
  8660  1C61  0193               	clrf	19	;volatile
  8661  1C62                     l3124:
  8662                           
  8663                           ;port.c: 75:     DACCON0=0x60;
  8664  1C62  3060               	movlw	96
  8665  1C63  0093               	movwf	19	;volatile
  8666  1C64                     l3126:
  8667                           
  8668                           ;port.c: 76:     DACCON0|=0x80;
  8669  1C64  1793               	bsf	19,7	;volatile
  8670  1C65                     l3128:
  8671                           
  8672                           ;port.c: 78:     DACCON1=0x18;
  8673  1C65  3018               	movlw	24
  8674  1C66  0094               	movwf	20	;volatile
  8675  1C67                     l101:
  8676  1C67  0008               	return
  8677  1C68                     __end_of_PORT_Init:
  8678                           
  8679                           	psect	text29
  8680  1C04                     __ptext29:	
  8681 ;; *************** function _PORT_Init_Serial *****************
  8682 ;; Defined at:
  8683 ;;		line 15 in file "port.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;		None
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;		None
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  1    wreg      void 
  8690 ;; Registers used:
  8691 ;;		wreg, status,2
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8697 ;;      Params:         0       0       0       0       0
  8698 ;;      Locals:         0       0       0       0       0
  8699 ;;      Temps:          0       0       0       0       0
  8700 ;;      Totals:         0       0       0       0       0
  8701 ;;Total ram usage:        0 bytes
  8702 ;; Hardware stack levels used:    1
  8703 ;; Hardware stack levels required when called:    1
  8704 ;; This function calls:
  8705 ;;		Nothing
  8706 ;; This function is called by:
  8707 ;;		_PORT_Init
  8708 ;; This function uses a non-reentrant model
  8709 ;;
  8710                           
  8711                           
  8712                           ;psect for function _PORT_Init_Serial
  8713  1C04                     _PORT_Init_Serial:
  8714  1C04                     l2700:	
  8715                           ;incstack = 0
  8716                           ; Regs used in _PORT_Init_Serial: [wreg+status,2]
  8717                           
  8718                           
  8719                           ;port.c: 18:     TRISC = 0xFF;
  8720  1C04  30FF               	movlw	255
  8721  1C05  1683               	bsf	3,5	;RP0=1, select bank1
  8722  1C06  1303               	bcf	3,6	;RP1=0, select bank1
  8723  1C07  0087               	movwf	7	;volatile
  8724                           
  8725                           ;port.c: 21:     SPBRG = 25;
  8726  1C08  3019               	movlw	25
  8727  1C09  0099               	movwf	25	;volatile
  8728  1C0A                     l2702:
  8729                           
  8730                           ;port.c: 25:     TXSTA = TXSTA & 0xDF;
  8731  1C0A  0818               	movf	24,w	;volatile
  8732  1C0B  39DF               	andlw	223
  8733  1C0C  0098               	movwf	24	;volatile
  8734  1C0D                     l2704:
  8735                           
  8736                           ;port.c: 26:     TXSTA = TXSTA | 1;
  8737  1C0D  0818               	movf	24,w	;volatile
  8738  1C0E  3801               	iorlw	1
  8739  1C0F  0098               	movwf	24	;volatile
  8740  1C10                     l2706:
  8741                           
  8742                           ;port.c: 27:     TXSTA = TXSTA & 0xFB;
  8743  1C10  0818               	movf	24,w	;volatile
  8744  1C11  39FB               	andlw	251
  8745  1C12  0098               	movwf	24	;volatile
  8746  1C13                     l2708:
  8747                           
  8748                           ;port.c: 30:     RCSTA = RCSTA | 0x20;
  8749  1C13  1283               	bcf	3,5	;RP0=0, select bank0
  8750  1C14  1303               	bcf	3,6	;RP1=0, select bank0
  8751  1C15  0818               	movf	24,w	;volatile
  8752  1C16  3820               	iorlw	32
  8753  1C17  0098               	movwf	24	;volatile
  8754  1C18                     l2710:
  8755                           
  8756                           ;port.c: 31:     RCSTA = RCSTA & 0xDF;
  8757  1C18  0818               	movf	24,w	;volatile
  8758  1C19  39DF               	andlw	223
  8759  1C1A  0098               	movwf	24	;volatile
  8760  1C1B                     l2712:
  8761                           
  8762                           ;port.c: 32:     RCSTA = RCSTA | 0x04;
  8763  1C1B  0818               	movf	24,w	;volatile
  8764  1C1C  3804               	iorlw	4
  8765  1C1D  0098               	movwf	24	;volatile
  8766  1C1E                     l2714:
  8767                           
  8768                           ;port.c: 33:     RCSTA = RCSTA | 0x02;
  8769  1C1E  0818               	movf	24,w	;volatile
  8770  1C1F  3802               	iorlw	2
  8771  1C20  0098               	movwf	24	;volatile
  8772  1C21                     l2716:
  8773                           
  8774                           ;port.c: 35:     TXSTA = TXSTA & 0xEF;
  8775  1C21  1683               	bsf	3,5	;RP0=1, select bank1
  8776  1C22  1303               	bcf	3,6	;RP1=0, select bank1
  8777  1C23  0818               	movf	24,w	;volatile
  8778  1C24  39EF               	andlw	239
  8779  1C25  0098               	movwf	24	;volatile
  8780  1C26                     l2718:
  8781                           
  8782                           ;port.c: 36:     TXSTA = TXSTA | 0x20;
  8783  1C26  0818               	movf	24,w	;volatile
  8784  1C27  3820               	iorlw	32
  8785  1C28  0098               	movwf	24	;volatile
  8786  1C29                     l2720:
  8787                           
  8788                           ;port.c: 37:     RCSTA = RCSTA | 0x80;
  8789  1C29  1283               	bcf	3,5	;RP0=0, select bank0
  8790  1C2A  1303               	bcf	3,6	;RP1=0, select bank0
  8791  1C2B  0818               	movf	24,w	;volatile
  8792  1C2C  3880               	iorlw	128
  8793  1C2D  0098               	movwf	24	;volatile
  8794  1C2E                     l95:
  8795  1C2E  0008               	return
  8796  1C2F                     __end_of_PORT_Init_Serial:
  8797                           
  8798                           	psect	text30
  8799  1B3F                     __ptext30:	
  8800 ;; *************** function _PORT_Blink_LED *****************
  8801 ;; Defined at:
  8802 ;;		line 84 in file "port.c"
  8803 ;; Parameters:    Size  Location     Type
  8804 ;;		None
  8805 ;; Auto vars:     Size  Location     Type
  8806 ;;		None
  8807 ;; Return value:  Size  Location     Type
  8808 ;;                  1    wreg      void 
  8809 ;; Registers used:
  8810 ;;		status,0
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8816 ;;      Params:         0       0       0       0       0
  8817 ;;      Locals:         0       0       0       0       0
  8818 ;;      Temps:          0       0       0       0       0
  8819 ;;      Totals:         0       0       0       0       0
  8820 ;;Total ram usage:        0 bytes
  8821 ;; Hardware stack levels used:    1
  8822 ;; Hardware stack levels required when called:    1
  8823 ;; This function calls:
  8824 ;;		Nothing
  8825 ;; This function is called by:
  8826 ;;		_main
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           
  8831                           ;psect for function _PORT_Blink_LED
  8832  1B3F                     _PORT_Blink_LED:
  8833  1B3F                     l3154:	
  8834                           ;incstack = 0
  8835                           ; Regs used in _PORT_Blink_LED: [status,0]
  8836                           
  8837                           
  8838                           ;port.c: 85:     PORTBbits.RB0 = !PORTBbits.RB0;
  8839  1B3F  1003               	clrc
  8840  1B40  1283               	bcf	3,5	;RP0=0, select bank0
  8841  1B41  1303               	bcf	3,6	;RP1=0, select bank0
  8842  1B42  1C06               	btfss	6,0	;volatile
  8843  1B43  1403               	setc
  8844  1B44  1803               	btfsc	3,0
  8845  1B45  2B47               	goto	u5081
  8846  1B46  2B4B               	goto	u5080
  8847  1B47                     u5081:
  8848  1B47  1283               	bcf	3,5	;RP0=0, select bank0
  8849  1B48  1303               	bcf	3,6	;RP1=0, select bank0
  8850  1B49  1406               	bsf	6,0	;volatile
  8851  1B4A  2B4E               	goto	u5094
  8852  1B4B                     u5080:
  8853  1B4B  1283               	bcf	3,5	;RP0=0, select bank0
  8854  1B4C  1303               	bcf	3,6	;RP1=0, select bank0
  8855  1B4D  1006               	bcf	6,0	;volatile
  8856  1B4E                     u5094:
  8857  1B4E                     l104:
  8858  1B4E  0008               	return
  8859  1B4F                     __end_of_PORT_Blink_LED:
  8860                           
  8861                           	psect	text31
  8862  1B61                     __ptext31:	
  8863 ;; *************** function _ADC_GetValue *****************
  8864 ;; Defined at:
  8865 ;;		line 16 in file "adc.c"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;  channel         1    wreg     unsigned char 
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;  channel         1    3[COMMON] unsigned char 
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  1    wreg      unsigned char 
  8872 ;; Registers used:
  8873 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/0
  8876 ;;		On exit  : 0/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8879 ;;      Params:         0       0       0       0       0
  8880 ;;      Locals:         1       0       0       0       0
  8881 ;;      Temps:          0       0       0       0       0
  8882 ;;      Totals:         1       0       0       0       0
  8883 ;;Total ram usage:        1 bytes
  8884 ;; Hardware stack levels used:    1
  8885 ;; Hardware stack levels required when called:    2
  8886 ;; This function calls:
  8887 ;;		_PORT_Choose_Mux
  8888 ;;		_PORT_Get_Value_Adc
  8889 ;;		_PORT_Start_ADC
  8890 ;; This function is called by:
  8891 ;;		_main
  8892 ;; This function uses a non-reentrant model
  8893 ;;
  8894                           
  8895                           
  8896                           ;psect for function _ADC_GetValue
  8897  1B61                     _ADC_GetValue:
  8898                           
  8899                           ;incstack = 0
  8900                           ; Regs used in _ADC_GetValue: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8901                           ;ADC_GetValue@channel stored from wreg
  8902  1B61  00F4               	movwf	ADC_GetValue@channel
  8903  1B62                     l3156:
  8904                           
  8905                           ;adc.c: 18:     PORT_Choose_Mux(channel);
  8906  1B62  0874               	movf	ADC_GetValue@channel,w
  8907  1B63  160A  158A  234F  160A  158A  	fcall	_PORT_Choose_Mux
  8908  1B68                     l3158:
  8909                           
  8910                           ;adc.c: 19:     PORT_Start_ADC();
  8911  1B68  160A  158A  2318  160A  158A  	fcall	_PORT_Start_ADC
  8912  1B6D                     l3160:
  8913                           
  8914                           ;adc.c: 20:     return PORT_Get_Value_Adc();
  8915  1B6D  160A  158A  2314  160A  158A  	fcall	_PORT_Get_Value_Adc
  8916  1B72                     l46:
  8917  1B72  0008               	return
  8918  1B73                     __end_of_ADC_GetValue:
  8919                           
  8920                           	psect	text32
  8921  1B18                     __ptext32:	
  8922 ;; *************** function _PORT_Start_ADC *****************
  8923 ;; Defined at:
  8924 ;;		line 104 in file "port.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;		None
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;		None
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      void 
  8931 ;; Registers used:
  8932 ;;		None
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8938 ;;      Params:         0       0       0       0       0
  8939 ;;      Locals:         0       0       0       0       0
  8940 ;;      Temps:          0       0       0       0       0
  8941 ;;      Totals:         0       0       0       0       0
  8942 ;;Total ram usage:        0 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; Hardware stack levels required when called:    1
  8945 ;; This function calls:
  8946 ;;		Nothing
  8947 ;; This function is called by:
  8948 ;;		_ADC_GetValue
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           
  8953                           ;psect for function _PORT_Start_ADC
  8954  1B18                     _PORT_Start_ADC:
  8955  1B18                     l2694:	
  8956                           ;incstack = 0
  8957                           ; Regs used in _PORT_Start_ADC: []
  8958                           
  8959                           
  8960                           ;port.c: 105:     GO_nDONE=1;
  8961  1B18  1283               	bcf	3,5	;RP0=0, select bank0
  8962  1B19  1303               	bcf	3,6	;RP1=0, select bank0
  8963  1B1A  149F               	bsf	31,1	;volatile
  8964  1B1B                     l111:	
  8965                           ;port.c: 106:     while(GO_nDONE);
  8966                           
  8967  1B1B  189F               	btfsc	31,1	;volatile
  8968  1B1C  2B1E               	goto	u4011
  8969  1B1D  2B1F               	goto	u4010
  8970  1B1E                     u4011:
  8971  1B1E  2B1B               	goto	l111
  8972  1B1F                     u4010:
  8973  1B1F                     l114:
  8974  1B1F  0008               	return
  8975  1B20                     __end_of_PORT_Start_ADC:
  8976                           
  8977                           	psect	text33
  8978  1B14                     __ptext33:	
  8979 ;; *************** function _PORT_Get_Value_Adc *****************
  8980 ;; Defined at:
  8981 ;;		line 118 in file "port.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;		None
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;		None
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  1    wreg      unsigned char 
  8988 ;; Registers used:
  8989 ;;		wreg
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8995 ;;      Params:         0       0       0       0       0
  8996 ;;      Locals:         0       0       0       0       0
  8997 ;;      Temps:          0       0       0       0       0
  8998 ;;      Totals:         0       0       0       0       0
  8999 ;;Total ram usage:        0 bytes
  9000 ;; Hardware stack levels used:    1
  9001 ;; Hardware stack levels required when called:    1
  9002 ;; This function calls:
  9003 ;;		Nothing
  9004 ;; This function is called by:
  9005 ;;		_ADC_GetValue
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           
  9010                           ;psect for function _PORT_Get_Value_Adc
  9011  1B14                     _PORT_Get_Value_Adc:
  9012  1B14                     l2696:	
  9013                           ;incstack = 0
  9014                           ; Regs used in _PORT_Get_Value_Adc: [wreg]
  9015                           
  9016                           
  9017                           ;port.c: 119:     return ADRES;
  9018  1B14  1283               	bcf	3,5	;RP0=0, select bank0
  9019  1B15  1303               	bcf	3,6	;RP1=0, select bank0
  9020  1B16  081E               	movf	30,w	;volatile
  9021  1B17                     l117:
  9022  1B17  0008               	return
  9023  1B18                     __end_of_PORT_Get_Value_Adc:
  9024                           
  9025                           	psect	text34
  9026  1B4F                     __ptext34:	
  9027 ;; *************** function _PORT_Choose_Mux *****************
  9028 ;; Defined at:
  9029 ;;		line 94 in file "port.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  _value          1    wreg     unsigned char 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;  _value          1    2[COMMON] unsigned char 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  1    wreg      void 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0, btemp+1
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9043 ;;      Params:         0       0       0       0       0
  9044 ;;      Locals:         1       0       0       0       0
  9045 ;;      Temps:          0       0       0       0       0
  9046 ;;      Totals:         1       0       0       0       0
  9047 ;;Total ram usage:        1 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    1
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_ADC_GetValue
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           
  9058                           ;psect for function _PORT_Choose_Mux
  9059  1B4F                     _PORT_Choose_Mux:
  9060                           
  9061                           ;incstack = 0
  9062                           ; Regs used in _PORT_Choose_Mux: [wreg+status,2+status,0+btemp+1]
  9063                           ;PORT_Choose_Mux@_value stored from wreg
  9064  1B4F  00F3               	movwf	PORT_Choose_Mux@_value
  9065  1B50                     l2690:
  9066                           
  9067                           ;port.c: 95:     if (_value <= 0x0F) {
  9068  1B50  3010               	movlw	16
  9069  1B51  0273               	subwf	PORT_Choose_Mux@_value,w
  9070  1B52  1803               	skipnc
  9071  1B53  2B55               	goto	u4001
  9072  1B54  2B56               	goto	u4000
  9073  1B55                     u4001:
  9074  1B55  2B60               	goto	l108
  9075  1B56                     u4000:
  9076  1B56                     l2692:
  9077                           
  9078                           ;port.c: 96:         PORTD &= 0xF0;
  9079  1B56  30F0               	movlw	240
  9080  1B57  00FF               	movwf	btemp+1
  9081  1B58  087F               	movf	btemp+1,w
  9082  1B59  1283               	bcf	3,5	;RP0=0, select bank0
  9083  1B5A  1303               	bcf	3,6	;RP1=0, select bank0
  9084  1B5B  0588               	andwf	8,f	;volatile
  9085                           
  9086                           ;port.c: 97:         PORTD |= _value;
  9087  1B5C  0873               	movf	PORT_Choose_Mux@_value,w	;volatile
  9088  1B5D  00FF               	movwf	btemp+1
  9089  1B5E  087F               	movf	btemp+1,w
  9090  1B5F  0488               	iorwf	8,f	;volatile
  9091  1B60                     l108:
  9092  1B60  0008               	return
  9093  1B61                     __end_of_PORT_Choose_Mux:
  9094                           
  9095                           	psect	text35
  9096  10B0                     __ptext35:	
  9097 ;; *************** function _isr *****************
  9098 ;; Defined at:
  9099 ;;		line 78 in file "timer.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;		None
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;		None
  9104 ;; Return value:  Size  Location     Type
  9105 ;;                  1    wreg      void 
  9106 ;; Registers used:
  9107 ;;		None
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9113 ;;      Params:         0       0       0       0       0
  9114 ;;      Locals:         0       0       0       0       0
  9115 ;;      Temps:          2       0       0       0       0
  9116 ;;      Totals:         2       0       0       0       0
  9117 ;;Total ram usage:        2 bytes
  9118 ;; Hardware stack levels used:    1
  9119 ;; This function calls:
  9120 ;;		Nothing
  9121 ;; This function is called by:
  9122 ;;		Interrupt level 1
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           
  9127                           ;psect for function _isr
  9128  10B0                     _isr:
  9129  10B0                     i1l3490:
  9130                           
  9131                           ;timer.c: 85: if (TMR1IF)
  9132  10B0  1283               	bcf	3,5	;RP0=0, select bank0
  9133  10B1  1303               	bcf	3,6	;RP1=0, select bank0
  9134  10B2  1C0C               	btfss	12,0	;volatile
  9135  10B3  28B5               	goto	u559_21
  9136  10B4  28B6               	goto	u559_20
  9137  10B5                     u559_21:
  9138  10B5  28BD               	goto	i1l169
  9139  10B6                     u559_20:
  9140  10B6                     i1l3492:
  9141                           
  9142                           ;timer.c: 86:      {;timer.c: 88:      Fincompt1 = 1;
  9143  10B6  1683               	bsf	3,5	;RP0=1, select bank1
  9144  10B7  1303               	bcf	3,6	;RP1=0, select bank1
  9145  10B8  01E4               	clrf	_Fincompt1^(0+128)
  9146  10B9  0AE4               	incf	_Fincompt1^(0+128),f
  9147                           
  9148                           ;timer.c: 91:      TMR1IF=0;
  9149  10BA  1283               	bcf	3,5	;RP0=0, select bank0
  9150  10BB  1303               	bcf	3,6	;RP1=0, select bank0
  9151  10BC  100C               	bcf	12,0	;volatile
  9152  10BD                     i1l169:	
  9153                           ;timer.c: 92:      }
  9154                           
  9155                           
  9156                           ;timer.c: 94: if (TMRAIF)
  9157  10BD  1E0D               	btfss	13,4	;volatile
  9158  10BE  28C0               	goto	u560_21
  9159  10BF  28C1               	goto	u560_20
  9160  10C0                     u560_21:
  9161  10C0  28C2               	goto	i1l171
  9162  10C1                     u560_20:
  9163  10C1                     i1l3494:
  9164                           
  9165                           ;timer.c: 95:      {;timer.c: 100:      TMRAIF=0;
  9166  10C1  120D               	bcf	13,4	;volatile
  9167  10C2                     i1l171:
  9168  10C2  0872               	movf	??_isr+1,w
  9169  10C3  008A               	movwf	10
  9170  10C4  0E71               	swapf	??_isr^(0+4294967168),w
  9171  10C5  0083               	movwf	3
  9172  10C6  0EFE               	swapf	btemp,f
  9173  10C7  0E7E               	swapf	btemp,w
  9174  10C8  0009               	retfie
  9175  10C9                     __end_of_isr:
  9176  007E                     btemp	set	126	;btemp
  9177  007E                     wtemp0	set	126
  9178                           
  9179                           	psect	intentry
  9180  0004                     __pintentry:	
  9181                           ;incstack = 0
  9182                           ; Regs used in _isr: []
  9183                           
  9184  0004                     interrupt_function:
  9185  007E                     saved_w	set	btemp
  9186  0004  00FE               	movwf	btemp
  9187  0005  0E03               	swapf	3,w
  9188  0006  00F1               	movwf	??_isr
  9189  0007  080A               	movf	10,w
  9190  0008  00F2               	movwf	??_isr+1
  9191  0009  160A  118A  28B0   	ljmp	_isr
  9192                           
  9193                           	psect	config
  9194                           
  9195                           ;Config register CONFIG @ 0x2007
  9196                           ;	Oscillator Selection bits
  9197                           ;	FOSC = INTOSC, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O function
      +                            on RA7/OSC1/CLKIN
  9198                           ;	Watchdog Timer Enable bit
  9199                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9200                           ;	Power-up Timer Enable bit
  9201                           ;	PWRTE = OFF, PWRT disabled
  9202                           ;	RE3/MCLR Pin Function Select bit
  9203                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  9204                           ;	Code Protection bit
  9205                           ;	CP = OFF, Program memory code protection is disabled
  9206                           ;	Brown-out Reset Selection bits
  9207                           ;	BOREN = ON, BOR enabled
  9208                           ;	Brown-out Reset Voltage Selection bit
  9209                           ;	BORV = 19, Brown-out Reset Voltage (VBOR) set to 1.9 V nominal
  9210                           ;	INTOSC PLLEN Enable Bit
  9211                           ;	PLLEN = ON, INTOSC Frequency is 16 MHz (32x)
  9212  2007                     	org	8199
  9213  2007  3FF5               	dw	16373
  9214                           
  9215                           ;Config register CONFIG2 @ 0x2008
  9216                           ;	Voltage Regulator Capacitor Enable bits
  9217                           ;	VCAPEN = OFF, All VCAP pin functions are disabled
  9218  2008                     	org	8200
  9219  2008  FFFF               	dw	65535
  9220                           
  9221                           	psect	text1_split_1
  9222  0345                     u5230:
  9223  0345                     l3266:
  9224  0345  1683               	bsf	3,5	;RP0=1, select bank1
  9225  0346  1303               	bcf	3,6	;RP1=0, select bank1
  9226  0347  0843               	movf	(sprintf@fval+3)^(0+128),w
  9227  0348  00F6               	movwf	___fleq@ff1+3
  9228  0349  0842               	movf	(sprintf@fval+2)^(0+128),w
  9229  034A  00F5               	movwf	___fleq@ff1+2
  9230  034B  0841               	movf	(sprintf@fval+1)^(0+128),w
  9231  034C  00F4               	movwf	___fleq@ff1+1
  9232  034D  0840               	movf	sprintf@fval^(0+128),w
  9233  034E  00F3               	movwf	___fleq@ff1
  9234  034F  3000               	movlw	0
  9235  0350  00FA               	movwf	___fleq@ff2+3
  9236  0351  3000               	movlw	0
  9237  0352  00F9               	movwf	___fleq@ff2+2
  9238  0353  3000               	movlw	0
  9239  0354  00F8               	movwf	___fleq@ff2+1
  9240  0355  3000               	movlw	0
  9241  0356  00F7               	movwf	___fleq@ff2
  9242  0357  160A  158A  2530  120A  118A  	fcall	___fleq
  9243  035C  1803               	btfsc	3,0
  9244  035D  2B5F               	goto	u5241
  9245  035E  2B60               	goto	u5240
  9246  035F                     u5241:
  9247  035F  2C08               	goto	l3286
  9248  0360                     u5240:
  9249  0360                     l3268:
  9250  0360  1683               	bsf	3,5	;RP0=1, select bank1
  9251  0361  1303               	bcf	3,6	;RP1=0, select bank1
  9252  0362  0843               	movf	(sprintf@fval+3)^(0+128),w
  9253  0363  1283               	bcf	3,5	;RP0=0, select bank0
  9254  0364  1303               	bcf	3,6	;RP1=0, select bank0
  9255  0365  00D8               	movwf	___fltol@f1+3
  9256  0366  1683               	bsf	3,5	;RP0=1, select bank1
  9257  0367  1303               	bcf	3,6	;RP1=0, select bank1
  9258  0368  0842               	movf	(sprintf@fval+2)^(0+128),w
  9259  0369  1283               	bcf	3,5	;RP0=0, select bank0
  9260  036A  1303               	bcf	3,6	;RP1=0, select bank0
  9261  036B  00D7               	movwf	___fltol@f1+2
  9262  036C  1683               	bsf	3,5	;RP0=1, select bank1
  9263  036D  1303               	bcf	3,6	;RP1=0, select bank1
  9264  036E  0841               	movf	(sprintf@fval+1)^(0+128),w
  9265  036F  1283               	bcf	3,5	;RP0=0, select bank0
  9266  0370  1303               	bcf	3,6	;RP1=0, select bank0
  9267  0371  00D6               	movwf	___fltol@f1+1
  9268  0372  1683               	bsf	3,5	;RP0=1, select bank1
  9269  0373  1303               	bcf	3,6	;RP1=0, select bank1
  9270  0374  0840               	movf	sprintf@fval^(0+128),w
  9271  0375  1283               	bcf	3,5	;RP0=0, select bank0
  9272  0376  1303               	bcf	3,6	;RP1=0, select bank0
  9273  0377  00D5               	movwf	___fltol@f1
  9274  0378  120A  158A  2002  120A  118A  	fcall	___fltol
  9275  037D  1283               	bcf	3,5	;RP0=0, select bank0
  9276  037E  1303               	bcf	3,6	;RP1=0, select bank0
  9277  037F  0858               	movf	?___fltol+3,w
  9278  0380  0457               	iorwf	?___fltol+2,w
  9279  0381  0456               	iorwf	?___fltol+1,w
  9280  0382  0455               	iorwf	?___fltol,w
  9281  0383  1D03               	skipz
  9282  0384  2B86               	goto	u5251
  9283  0385  2B87               	goto	u5250
  9284  0386                     u5251:
  9285  0386  2C08               	goto	l3286
  9286  0387                     u5250:
  9287  0387                     l3270:
  9288  0387  1683               	bsf	3,5	;RP0=1, select bank1
  9289  0388  1303               	bcf	3,6	;RP1=0, select bank1
  9290  0389  083F               	movf	(sprintf@eexp+1)^(0+128),w
  9291  038A  3A80               	xorlw	128
  9292  038B  00FF               	movwf	btemp+1
  9293  038C  3080               	movlw	128
  9294  038D  027F               	subwf	btemp+1,w
  9295  038E  1D03               	skipz
  9296  038F  2B92               	goto	u5265
  9297  0390  3002               	movlw	2
  9298  0391  023E               	subwf	sprintf@eexp^(0+128),w
  9299  0392                     u5265:
  9300  0392  1C03               	skipc
  9301  0393  2B95               	goto	u5261
  9302  0394  2B96               	goto	u5260
  9303  0395                     u5261:
  9304  0395  2C08               	goto	l3286
  9305  0396                     u5260:
  9306  0396                     l3272:
  9307                           
  9308                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9309  0396  1683               	bsf	3,5	;RP0=1, select bank1
  9310  0397  1303               	bcf	3,6	;RP1=0, select bank1
  9311  0398  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  9312  0399  00F6               	movwf	___flge@ff1+3
  9313  039A  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  9314  039B  00F5               	movwf	___flge@ff1+2
  9315  039C  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  9316  039D  00F4               	movwf	___flge@ff1+1
  9317  039E  083A               	movf	sprintf@tmpval^(0+128),w
  9318  039F  00F3               	movwf	___flge@ff1
  9319  03A0  3040               	movlw	64
  9320  03A1  00FA               	movwf	___flge@ff2+3
  9321  03A2  3089               	movlw	137
  9322  03A3  00F9               	movwf	___flge@ff2+2
  9323  03A4  3070               	movlw	112
  9324  03A5  00F8               	movwf	___flge@ff2+1
  9325  03A6  305F               	movlw	95
  9326  03A7  00F7               	movwf	___flge@ff2
  9327  03A8  160A  118A  2150  120A  118A  	fcall	___flge
  9328  03AD  1803               	btfsc	3,0
  9329  03AE  2BB0               	goto	u5271
  9330  03AF  2BB1               	goto	u5270
  9331  03B0                     u5271:
  9332  03B0  2BBA               	goto	l3276
  9333  03B1                     u5270:
  9334  03B1                     l3274:
  9335                           
  9336                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9337  03B1  30F7               	movlw	247
  9338  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  9339  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  9340  03B4  07BE               	addwf	sprintf@eexp^(0+128),f
  9341  03B5  1803               	skipnc
  9342  03B6  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  9343  03B7  30FF               	movlw	255
  9344  03B8  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  9345                           
  9346                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9347  03B9  2BC2               	goto	l3278
  9348  03BA                     l3276:
  9349                           
  9350                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9351  03BA  30F8               	movlw	248
  9352  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  9353  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  9354  03BD  07BE               	addwf	sprintf@eexp^(0+128),f
  9355  03BE  1803               	skipnc
  9356  03BF  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  9357  03C0  30FF               	movlw	255
  9358  03C1  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  9359  03C2                     l3278:
  9360                           
  9361                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9362  03C2  083E               	movf	sprintf@eexp^(0+128),w
  9363  03C3  120A  158A  249D  120A  118A  	fcall	_scale
  9364  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  9365  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  9366  03CA  0845               	movf	?_scale+3,w
  9367  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  9368  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  9369  03CD  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  9370  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  9371  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  9372  03D0  0844               	movf	?_scale+2,w
  9373  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  9374  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  9375  03D3  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  9376  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  9377  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  9378  03D6  0843               	movf	?_scale+1,w
  9379  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  9380  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  9381  03D9  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  9382  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  9383  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  9384  03DC  0842               	movf	?_scale,w
  9385  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  9386  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  9387  03DF  00BA               	movwf	sprintf@tmpval^(0+128)
  9388  03E0                     l3280:
  9389  03E0  0843               	movf	(sprintf@fval+3)^(0+128),w
  9390  03E1  00F6               	movwf	__div_to_l_@f1+3
  9391  03E2  0842               	movf	(sprintf@fval+2)^(0+128),w
  9392  03E3  00F5               	movwf	__div_to_l_@f1+2
  9393  03E4  0841               	movf	(sprintf@fval+1)^(0+128),w
  9394  03E5  00F4               	movwf	__div_to_l_@f1+1
  9395  03E6  0840               	movf	sprintf@fval^(0+128),w
  9396  03E7  00F3               	movwf	__div_to_l_@f1
  9397  03E8  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  9398  03E9  00FA               	movwf	__div_to_l_@f2+3
  9399  03EA  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  9400  03EB  00F9               	movwf	__div_to_l_@f2+2
  9401  03EC  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  9402  03ED  00F8               	movwf	__div_to_l_@f2+1
  9403  03EE  083A               	movf	sprintf@tmpval^(0+128),w
  9404  03EF  00F7               	movwf	__div_to_l_@f2
  9405  03F0  120A  158A  207E  120A  118A  	fcall	__div_to_l_
  9406  03F5  0876               	movf	?__div_to_l_+3,w
  9407  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  9408  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  9409  03F8  00B5               	movwf	(sprintf@val+3)^(0+128)
  9410  03F9  0875               	movf	?__div_to_l_+2,w
  9411  03FA  00B4               	movwf	(sprintf@val+2)^(0+128)
  9412  03FB  0874               	movf	?__div_to_l_+1,w
  9413  03FC  00B3               	movwf	(sprintf@val+1)^(0+128)
  9414  03FD  0873               	movf	?__div_to_l_,w
  9415  03FE  00B2               	movwf	sprintf@val^(0+128)
  9416  03FF                     l3284:
  9417                           
  9418                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9419  03FF  3000               	movlw	0
  9420  0400  00C3               	movwf	(sprintf@fval+3)^(0+128)
  9421  0401  3000               	movlw	0
  9422  0402  00C2               	movwf	(sprintf@fval+2)^(0+128)
  9423  0403  3000               	movlw	0
  9424  0404  00C1               	movwf	(sprintf@fval+1)^(0+128)
  9425  0405  3000               	movlw	0
  9426  0406  00C0               	movwf	sprintf@fval^(0+128)
  9427                           
  9428                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9429  0407  2C6E               	goto	l3290
  9430  0408                     l3286:
  9431                           
  9432                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9433  0408  1683               	bsf	3,5	;RP0=1, select bank1
  9434  0409  1303               	bcf	3,6	;RP1=0, select bank1
  9435  040A  0843               	movf	(sprintf@fval+3)^(0+128),w
  9436  040B  1283               	bcf	3,5	;RP0=0, select bank0
  9437  040C  1303               	bcf	3,6	;RP1=0, select bank0
  9438  040D  00D8               	movwf	___fltol@f1+3
  9439  040E  1683               	bsf	3,5	;RP0=1, select bank1
  9440  040F  1303               	bcf	3,6	;RP1=0, select bank1
  9441  0410  0842               	movf	(sprintf@fval+2)^(0+128),w
  9442  0411  1283               	bcf	3,5	;RP0=0, select bank0
  9443  0412  1303               	bcf	3,6	;RP1=0, select bank0
  9444  0413  00D7               	movwf	___fltol@f1+2
  9445  0414  1683               	bsf	3,5	;RP0=1, select bank1
  9446  0415  1303               	bcf	3,6	;RP1=0, select bank1
  9447  0416  0841               	movf	(sprintf@fval+1)^(0+128),w
  9448  0417  1283               	bcf	3,5	;RP0=0, select bank0
  9449  0418  1303               	bcf	3,6	;RP1=0, select bank0
  9450  0419  00D6               	movwf	___fltol@f1+1
  9451  041A  1683               	bsf	3,5	;RP0=1, select bank1
  9452  041B  1303               	bcf	3,6	;RP1=0, select bank1
  9453  041C  0840               	movf	sprintf@fval^(0+128),w
  9454  041D  1283               	bcf	3,5	;RP0=0, select bank0
  9455  041E  1303               	bcf	3,6	;RP1=0, select bank0
  9456  041F  00D5               	movwf	___fltol@f1
  9457  0420  120A  158A  2002  120A  118A  	fcall	___fltol
  9458  0425  1283               	bcf	3,5	;RP0=0, select bank0
  9459  0426  1303               	bcf	3,6	;RP1=0, select bank0
  9460  0427  0858               	movf	?___fltol+3,w
  9461  0428  1683               	bsf	3,5	;RP0=1, select bank1
  9462  0429  1303               	bcf	3,6	;RP1=0, select bank1
  9463  042A  00B5               	movwf	(sprintf@val+3)^(0+128)
  9464  042B  1283               	bcf	3,5	;RP0=0, select bank0
  9465  042C  1303               	bcf	3,6	;RP1=0, select bank0
  9466  042D  0857               	movf	?___fltol+2,w
  9467  042E  1683               	bsf	3,5	;RP0=1, select bank1
  9468  042F  1303               	bcf	3,6	;RP1=0, select bank1
  9469  0430  00B4               	movwf	(sprintf@val+2)^(0+128)
  9470  0431  1283               	bcf	3,5	;RP0=0, select bank0
  9471  0432  1303               	bcf	3,6	;RP1=0, select bank0
  9472  0433  0856               	movf	?___fltol+1,w
  9473  0434  1683               	bsf	3,5	;RP0=1, select bank1
  9474  0435  1303               	bcf	3,6	;RP1=0, select bank1
  9475  0436  00B3               	movwf	(sprintf@val+1)^(0+128)
  9476  0437  1283               	bcf	3,5	;RP0=0, select bank0
  9477  0438  1303               	bcf	3,6	;RP1=0, select bank0
  9478  0439  0855               	movf	?___fltol,w
  9479  043A  1683               	bsf	3,5	;RP0=1, select bank1
  9480  043B  1303               	bcf	3,6	;RP1=0, select bank1
  9481  043C  00B2               	movwf	sprintf@val^(0+128)
  9482                           
  9483                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9484  043D  0835               	movf	(sprintf@val+3)^(0+128),w
  9485  043E  00F6               	movwf	___xxtofl@val+3
  9486  043F  0834               	movf	(sprintf@val+2)^(0+128),w
  9487  0440  00F5               	movwf	___xxtofl@val+2
  9488  0441  0833               	movf	(sprintf@val+1)^(0+128),w
  9489  0442  00F4               	movwf	___xxtofl@val+1
  9490  0443  0832               	movf	sprintf@val^(0+128),w
  9491  0444  00F3               	movwf	___xxtofl@val
  9492  0445  3000               	movlw	0
  9493  0446  160A  118A  21F4  120A  118A  	fcall	___xxtofl
  9494  044B  0876               	movf	?___xxtofl+3,w
  9495  044C  1683               	bsf	3,5	;RP0=1, select bank1
  9496  044D  1303               	bcf	3,6	;RP1=0, select bank1
  9497  044E  00A3               	movwf	(___flsub@a+3)^(0+128)
  9498  044F  0875               	movf	?___xxtofl+2,w
  9499  0450  00A2               	movwf	(___flsub@a+2)^(0+128)
  9500  0451  0874               	movf	?___xxtofl+1,w
  9501  0452  00A1               	movwf	(___flsub@a+1)^(0+128)
  9502  0453  0873               	movf	?___xxtofl,w
  9503  0454  00A0               	movwf	___flsub@a^(0+128)
  9504  0455  0843               	movf	(sprintf@fval+3)^(0+128),w
  9505  0456  00A7               	movwf	(___flsub@b+3)^(0+128)
  9506  0457  0842               	movf	(sprintf@fval+2)^(0+128),w
  9507  0458  00A6               	movwf	(___flsub@b+2)^(0+128)
  9508  0459  0841               	movf	(sprintf@fval+1)^(0+128),w
  9509  045A  00A5               	movwf	(___flsub@b+1)^(0+128)
  9510  045B  0840               	movf	sprintf@fval^(0+128),w
  9511  045C  00A4               	movwf	___flsub@b^(0+128)
  9512  045D  120A  118A  2010  120A  118A  	fcall	___flsub
  9513  0462  1683               	bsf	3,5	;RP0=1, select bank1
  9514  0463  1303               	bcf	3,6	;RP1=0, select bank1
  9515  0464  0823               	movf	(?___flsub+3)^(0+128),w
  9516  0465  00C3               	movwf	(sprintf@fval+3)^(0+128)
  9517  0466  0822               	movf	(?___flsub+2)^(0+128),w
  9518  0467  00C2               	movwf	(sprintf@fval+2)^(0+128)
  9519  0468  0821               	movf	(?___flsub+1)^(0+128),w
  9520  0469  00C1               	movwf	(sprintf@fval+1)^(0+128)
  9521  046A  0820               	movf	?___flsub^(0+128),w
  9522  046B  00C0               	movwf	sprintf@fval^(0+128)
  9523  046C                     l3288:
  9524                           
  9525                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9526  046C  01BE               	clrf	sprintf@eexp^(0+128)
  9527  046D  01BF               	clrf	(sprintf@eexp+1)^(0+128)
  9528  046E                     l3290:
  9529                           
  9530                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9531  046E  01C7               	clrf	sprintf@c^(0+128)
  9532  046F  0AC7               	incf	sprintf@c^(0+128),f
  9533  0470                     l3296:
  9534                           
  9535                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9536  0470  0847               	movf	sprintf@c^(0+128),w
  9537  0471  00A8               	movwf	??_sprintf^(0+128)
  9538  0472  3001               	movlw	1
  9539  0473                     u5285:
  9540  0473  1003               	clrc
  9541  0474  0DA8               	rlf	??_sprintf^(0+128),f
  9542  0475  3EFF               	addlw	-1
  9543  0476  1D03               	skipz
  9544  0477  2C73               	goto	u5285
  9545  0478  1003               	clrc
  9546  0479  0D28               	rlf	??_sprintf^(0+128),w
  9547  047A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9548  047B  0084               	movwf	4
  9549  047C  160A  118A  2000  120A  118A  	fcall	stringdir
  9550  0481  00A9               	movwf	(??_sprintf+1)^(0+128)
  9551  0482  160A  118A  2000  120A  118A  	fcall	stringdir
  9552  0487  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  9553  0488  160A  118A  2000  120A  118A  	fcall	stringdir
  9554  048D  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  9555  048E  160A  118A  2000  120A  118A  	fcall	stringdir
  9556  0493  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  9557  0494  082C               	movf	(??_sprintf+4)^(0+128),w
  9558  0495  0235               	subwf	(sprintf@val+3)^(0+128),w
  9559  0496  1D03               	skipz
  9560  0497  2CA2               	goto	u5295
  9561  0498  082B               	movf	(??_sprintf+3)^(0+128),w
  9562  0499  0234               	subwf	(sprintf@val+2)^(0+128),w
  9563  049A  1D03               	skipz
  9564  049B  2CA2               	goto	u5295
  9565  049C  082A               	movf	(??_sprintf+2)^(0+128),w
  9566  049D  0233               	subwf	(sprintf@val+1)^(0+128),w
  9567  049E  1D03               	skipz
  9568  049F  2CA2               	goto	u5295
  9569  04A0  0829               	movf	(??_sprintf+1)^(0+128),w
  9570  04A1  0232               	subwf	sprintf@val^(0+128),w
  9571  04A2                     u5295:
  9572  04A2  1803               	skipnc
  9573  04A3  2CA5               	goto	u5291
  9574  04A4  2CA6               	goto	u5290
  9575  04A5                     u5291:
  9576  04A5  2CA7               	goto	l3300
  9577  04A6                     u5290:
  9578  04A6  2CB1               	goto	l3304
  9579  04A7                     l3300:
  9580  04A7  3001               	movlw	1
  9581  04A8  00FF               	movwf	btemp+1
  9582  04A9  087F               	movf	btemp+1,w
  9583  04AA  07C7               	addwf	sprintf@c^(0+128),f
  9584  04AB                     l3302:
  9585  04AB  300A               	movlw	10
  9586  04AC  0647               	xorwf	sprintf@c^(0+128),w
  9587  04AD  1D03               	btfss	3,2
  9588  04AE  2CB0               	goto	u5301
  9589  04AF  2CB1               	goto	u5300
  9590  04B0                     u5301:
  9591  04B0  2C70               	goto	l3296
  9592  04B1                     u5300:
  9593  04B1                     l3304:
  9594                           
  9595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9596  04B1  0847               	movf	sprintf@c^(0+128),w
  9597  04B2  0745               	addwf	sprintf@prec^(0+128),w
  9598  04B3  00A8               	movwf	??_sprintf^(0+128)
  9599  04B4  0846               	movf	(sprintf@prec+1)^(0+128),w
  9600  04B5  1803               	skipnc
  9601  04B6  0A46               	incf	(sprintf@prec+1)^(0+128),w
  9602  04B7  00A9               	movwf	(??_sprintf^(0+128)+1)
  9603  04B8  083E               	movf	sprintf@eexp^(0+128),w
  9604  04B9  0728               	addwf	??_sprintf^(0+128),w
  9605  04BA  00AA               	movwf	(??_sprintf+2)^(0+128)
  9606  04BB  083F               	movf	(sprintf@eexp+1)^(0+128),w
  9607  04BC  1803               	skipnc
  9608  04BD  0A3F               	incf	(sprintf@eexp+1)^(0+128),w
  9609  04BE  0729               	addwf	(??_sprintf+1)^(0+128),w
  9610  04BF  00AB               	movwf	(??_sprintf+3)^(0+128)
  9611  04C0  082A               	movf	(??_sprintf+2)^(0+128),w
  9612  04C1  02B8               	subwf	sprintf@width^(0+128),f
  9613  04C2  082B               	movf	(??_sprintf+3)^(0+128),w
  9614  04C3  1C03               	skipc
  9615  04C4  03B9               	decf	(sprintf@width+1)^(0+128),f
  9616  04C5  02B9               	subwf	(sprintf@width+1)^(0+128),f
  9617                           
  9618                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1169:     if(
  9619  04C6  0845               	movf	sprintf@prec^(0+128),w
  9620  04C7  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  9621  04C8  1903               	btfsc	3,2
  9622  04C9  2CCB               	goto	u5311
  9623  04CA  2CCC               	goto	u5310
  9624  04CB                     u5311:
  9625  04CB  2CD2               	goto	l3308
  9626  04CC                     u5310:
  9627  04CC                     l3306:
  9628                           
  9629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9630  04CC  30FF               	movlw	255
  9631  04CD  07B8               	addwf	sprintf@width^(0+128),f
  9632  04CE  1803               	skipnc
  9633  04CF  0AB9               	incf	(sprintf@width+1)^(0+128),f
  9634  04D0  30FF               	movlw	255
  9635  04D1  07B9               	addwf	(sprintf@width+1)^(0+128),f
  9636  04D2                     l3308:
  9637                           
  9638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9639  04D2  3003               	movlw	3
  9640  04D3  0536               	andwf	sprintf@flag^(0+128),w
  9641  04D4  00A8               	movwf	??_sprintf^(0+128)
  9642  04D5  3000               	movlw	0
  9643  04D6  0537               	andwf	(sprintf@flag+1)^(0+128),w
  9644  04D7  00A9               	movwf	(??_sprintf+1)^(0+128)
  9645  04D8  0828               	movf	??_sprintf^(0+128),w
  9646  04D9  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9647  04DA  1903               	btfsc	3,2
  9648  04DB  2CDD               	goto	u5321
  9649  04DC  2CDE               	goto	u5320
  9650  04DD                     u5321:
  9651  04DD  2CF3               	goto	l3318
  9652  04DE                     u5320:
  9653  04DE                     l3310:
  9654                           
  9655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9656  04DE  30FF               	movlw	255
  9657  04DF  07B8               	addwf	sprintf@width^(0+128),f
  9658  04E0  1803               	skipnc
  9659  04E1  0AB9               	incf	(sprintf@width+1)^(0+128),f
  9660  04E2  30FF               	movlw	255
  9661  04E3  07B9               	addwf	(sprintf@width+1)^(0+128),f
  9662  04E4  2CF3               	goto	l3318
  9663  04E5                     l3312:
  9664                           
  9665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9666  04E5  3020               	movlw	32
  9667  04E6  00FF               	movwf	btemp+1
  9668  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  9669  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  9670  04E9  0844               	movf	sprintf@sp^(0+128),w
  9671  04EA  0084               	movwf	4
  9672  04EB  087F               	movf	btemp+1,w
  9673  04EC  1383               	bcf	3,7	;select IRP bank0
  9674  04ED  0080               	movwf	0
  9675  04EE                     l3314:
  9676  04EE  3001               	movlw	1
  9677  04EF  00FF               	movwf	btemp+1
  9678  04F0  087F               	movf	btemp+1,w
  9679  04F1  07C4               	addwf	sprintf@sp^(0+128),f
  9680  04F2  2CDE               	goto	l3310
  9681  04F3                     l3318:
  9682                           
  9683                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9684  04F3  0839               	movf	(sprintf@width+1)^(0+128),w
  9685  04F4  3A80               	xorlw	128
  9686  04F5  00FF               	movwf	btemp+1
  9687  04F6  3080               	movlw	128
  9688  04F7  027F               	subwf	btemp+1,w
  9689  04F8  1D03               	skipz
  9690  04F9  2CFC               	goto	u5335
  9691  04FA  3001               	movlw	1
  9692  04FB  0238               	subwf	sprintf@width^(0+128),w
  9693  04FC                     u5335:
  9694  04FC  1803               	skipnc
  9695  04FD  2CFF               	goto	u5331
  9696  04FE  2D00               	goto	u5330
  9697  04FF                     u5331:
  9698  04FF  2CE5               	goto	l3312
  9699  0500                     u5330:
  9700  0500                     l3320:
  9701                           
  9702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9703  0500  3003               	movlw	3
  9704  0501  1683               	bsf	3,5	;RP0=1, select bank1
  9705  0502  1303               	bcf	3,6	;RP1=0, select bank1
  9706  0503  0536               	andwf	sprintf@flag^(0+128),w
  9707  0504  00A8               	movwf	??_sprintf^(0+128)
  9708  0505  3000               	movlw	0
  9709  0506  0537               	andwf	(sprintf@flag+1)^(0+128),w
  9710  0507  00A9               	movwf	(??_sprintf+1)^(0+128)
  9711  0508  0828               	movf	??_sprintf^(0+128),w
  9712  0509  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9713  050A  1903               	btfsc	3,2
  9714  050B  2D0D               	goto	u5341
  9715  050C  2D0E               	goto	u5340
  9716  050D                     u5341:
  9717  050D  2D80               	goto	l3332
  9718  050E                     u5340:
  9719  050E                     l3322:
  9720                           
  9721                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9722  050E  302D               	movlw	45
  9723  050F  00FF               	movwf	btemp+1
  9724  0510  0844               	movf	sprintf@sp^(0+128),w
  9725  0511  0084               	movwf	4
  9726  0512  087F               	movf	btemp+1,w
  9727  0513  1383               	bcf	3,7	;select IRP bank0
  9728  0514  0080               	movwf	0
  9729  0515                     l3324:
  9730  0515  3001               	movlw	1
  9731  0516  00FF               	movwf	btemp+1
  9732  0517  087F               	movf	btemp+1,w
  9733  0518  07C4               	addwf	sprintf@sp^(0+128),f
  9734  0519  2D80               	goto	l3332
  9735  051A                     l3326:
  9736                           
  9737                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9738  051A  0847               	movf	sprintf@c^(0+128),w
  9739  051B  00A8               	movwf	??_sprintf^(0+128)
  9740  051C  3001               	movlw	1
  9741  051D                     u5355:
  9742  051D  1003               	clrc
  9743  051E  0DA8               	rlf	??_sprintf^(0+128),f
  9744  051F  3EFF               	addlw	-1
  9745  0520  1D03               	skipz
  9746  0521  2D1D               	goto	u5355
  9747  0522  1003               	clrc
  9748  0523  0D28               	rlf	??_sprintf^(0+128),w
  9749  0524  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9750  0525  0084               	movwf	4
  9751  0526  160A  118A  2000  120A  118A  	fcall	stringdir
  9752  052B  00F3               	movwf	___lldiv@divisor
  9753  052C  160A  118A  2000  120A  118A  	fcall	stringdir
  9754  0531  00F4               	movwf	___lldiv@divisor+1
  9755  0532  160A  118A  2000  120A  118A  	fcall	stringdir
  9756  0537  00F5               	movwf	___lldiv@divisor+2
  9757  0538  160A  118A  2000  120A  118A  	fcall	stringdir
  9758  053D  00F6               	movwf	___lldiv@divisor+3
  9759  053E  0835               	movf	(sprintf@val+3)^(0+128),w
  9760  053F  00FA               	movwf	___lldiv@dividend+3
  9761  0540  0834               	movf	(sprintf@val+2)^(0+128),w
  9762  0541  00F9               	movwf	___lldiv@dividend+2
  9763  0542  0833               	movf	(sprintf@val+1)^(0+128),w
  9764  0543  00F8               	movwf	___lldiv@dividend+1
  9765  0544  0832               	movf	sprintf@val^(0+128),w
  9766  0545  00F7               	movwf	___lldiv@dividend
  9767  0546  160A  158A  262F  120A  118A  	fcall	___lldiv
  9768  054B  0876               	movf	?___lldiv+3,w
  9769  054C  1683               	bsf	3,5	;RP0=1, select bank1
  9770  054D  1303               	bcf	3,6	;RP1=0, select bank1
  9771  054E  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  9772  054F  0875               	movf	?___lldiv+2,w
  9773  0550  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  9774  0551  0874               	movf	?___lldiv+1,w
  9775  0552  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  9776  0553  0873               	movf	?___lldiv,w
  9777  0554  00BA               	movwf	sprintf@tmpval^(0+128)
  9778  0555                     l3328:
  9779                           
  9780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9781  0555  3000               	movlw	0
  9782  0556  00F6               	movwf	___llmod@divisor+3
  9783  0557  3000               	movlw	0
  9784  0558  00F5               	movwf	___llmod@divisor+2
  9785  0559  3000               	movlw	0
  9786  055A  00F4               	movwf	___llmod@divisor+1
  9787  055B  300A               	movlw	10
  9788  055C  00F3               	movwf	___llmod@divisor
  9789  055D  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  9790  055E  00FA               	movwf	___llmod@dividend+3
  9791  055F  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  9792  0560  00F9               	movwf	___llmod@dividend+2
  9793  0561  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  9794  0562  00F8               	movwf	___llmod@dividend+1
  9795  0563  083A               	movf	sprintf@tmpval^(0+128),w
  9796  0564  00F7               	movwf	___llmod@dividend
  9797  0565  160A  158A  2580  120A  118A  	fcall	___llmod
  9798  056A  0876               	movf	?___llmod+3,w
  9799  056B  1683               	bsf	3,5	;RP0=1, select bank1
  9800  056C  1303               	bcf	3,6	;RP1=0, select bank1
  9801  056D  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  9802  056E  0875               	movf	?___llmod+2,w
  9803  056F  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  9804  0570  0874               	movf	?___llmod+1,w
  9805  0571  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  9806  0572  0873               	movf	?___llmod,w
  9807  0573  00BA               	movwf	sprintf@tmpval^(0+128)
  9808  0574                     l3330:
  9809                           
  9810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9811  0574  083A               	movf	sprintf@tmpval^(0+128),w
  9812  0575  3E30               	addlw	48
  9813  0576  00FF               	movwf	btemp+1
  9814  0577  0844               	movf	sprintf@sp^(0+128),w
  9815  0578  0084               	movwf	4
  9816  0579  087F               	movf	btemp+1,w
  9817  057A  1383               	bcf	3,7	;select IRP bank0
  9818  057B  0080               	movwf	0
  9819  057C  3001               	movlw	1
  9820  057D  00FF               	movwf	btemp+1
  9821  057E  087F               	movf	btemp+1,w
  9822  057F  07C4               	addwf	sprintf@sp^(0+128),f
  9823  0580                     l3332:
  9824                           
  9825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9826  0580  3001               	movlw	1
  9827  0581  02C7               	subwf	sprintf@c^(0+128),f
  9828  0582  0A47               	incf	sprintf@c^(0+128),w
  9829  0583  1D03               	btfss	3,2
  9830  0584  2D86               	goto	u5361
  9831  0585  2D87               	goto	u5360
  9832  0586                     u5361:
  9833  0586  2D1A               	goto	l3326
  9834  0587                     u5360:
  9835  0587  2D9B               	goto	l3340
  9836  0588                     l3334:
  9837                           
  9838                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9839  0588  3030               	movlw	48
  9840  0589  00FF               	movwf	btemp+1
  9841  058A  1683               	bsf	3,5	;RP0=1, select bank1
  9842  058B  1303               	bcf	3,6	;RP1=0, select bank1
  9843  058C  0844               	movf	sprintf@sp^(0+128),w
  9844  058D  0084               	movwf	4
  9845  058E  087F               	movf	btemp+1,w
  9846  058F  1383               	bcf	3,7	;select IRP bank0
  9847  0590  0080               	movwf	0
  9848  0591                     l3336:
  9849  0591  3001               	movlw	1
  9850  0592  00FF               	movwf	btemp+1
  9851  0593  087F               	movf	btemp+1,w
  9852  0594  07C4               	addwf	sprintf@sp^(0+128),f
  9853  0595                     l3338:
  9854                           
  9855                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9856  0595  30FF               	movlw	255
  9857  0596  07BE               	addwf	sprintf@eexp^(0+128),f
  9858  0597  1803               	skipnc
  9859  0598  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  9860  0599  30FF               	movlw	255
  9861  059A  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  9862  059B                     l3340:
  9863                           
  9864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9865  059B  083F               	movf	(sprintf@eexp+1)^(0+128),w
  9866  059C  3A80               	xorlw	128
  9867  059D  00FF               	movwf	btemp+1
  9868  059E  3080               	movlw	128
  9869  059F  027F               	subwf	btemp+1,w
  9870  05A0  1D03               	skipz
  9871  05A1  2DA4               	goto	u5375
  9872  05A2  3001               	movlw	1
  9873  05A3  023E               	subwf	sprintf@eexp^(0+128),w
  9874  05A4                     u5375:
  9875  05A4  1803               	skipnc
  9876  05A5  2DA7               	goto	u5371
  9877  05A6  2DA8               	goto	u5370
  9878  05A7                     u5371:
  9879  05A7  2D88               	goto	l3334
  9880  05A8                     u5370:
  9881  05A8                     l3342:
  9882                           
  9883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9884  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  9885  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  9886  05AA  0846               	movf	(sprintf@prec+1)^(0+128),w
  9887  05AB  3A80               	xorlw	128
  9888  05AC  00FF               	movwf	btemp+1
  9889  05AD  3080               	movlw	128
  9890  05AE  027F               	subwf	btemp+1,w
  9891  05AF  1D03               	skipz
  9892  05B0  2DB3               	goto	u5385
  9893  05B1  3009               	movlw	9
  9894  05B2  0245               	subwf	sprintf@prec^(0+128),w
  9895  05B3                     u5385:
  9896  05B3  1C03               	skipc
  9897  05B4  2DB6               	goto	u5381
  9898  05B5  2DB7               	goto	u5380
  9899  05B6                     u5381:
  9900  05B6  2DBE               	goto	l3346
  9901  05B7                     u5380:
  9902  05B7                     l3344:
  9903                           
  9904                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9905  05B7  3008               	movlw	8
  9906  05B8  00FF               	movwf	btemp+1
  9907  05B9  087F               	movf	btemp+1,w
  9908  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  9909  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  9910  05BC  00C7               	movwf	sprintf@c^(0+128)
  9911  05BD  2DC4               	goto	l3348
  9912  05BE                     l3346:
  9913                           
  9914                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9915  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  9916  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  9917  05C0  0845               	movf	sprintf@prec^(0+128),w
  9918  05C1  00FF               	movwf	btemp+1
  9919  05C2  087F               	movf	btemp+1,w
  9920  05C3  00C7               	movwf	sprintf@c^(0+128)
  9921  05C4                     l3348:
  9922                           
  9923                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9924  05C4  0847               	movf	sprintf@c^(0+128),w
  9925  05C5  00A8               	movwf	??_sprintf^(0+128)
  9926  05C6  01A9               	clrf	(??_sprintf^(0+128)+1)
  9927  05C7  0828               	movf	??_sprintf^(0+128),w
  9928  05C8  02C5               	subwf	sprintf@prec^(0+128),f
  9929  05C9  0829               	movf	(??_sprintf+1)^(0+128),w
  9930  05CA  1C03               	skipc
  9931  05CB  03C6               	decf	(sprintf@prec+1)^(0+128),f
  9932  05CC  02C6               	subwf	(sprintf@prec+1)^(0+128),f
  9933  05CD                     l3350:
  9934                           
  9935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9936  05CD  0847               	movf	sprintf@c^(0+128),w
  9937  05CE  1903               	btfsc	3,2
  9938  05CF  2DD1               	goto	u5391
  9939  05D0  2DD2               	goto	u5390
  9940  05D1                     u5391:
  9941  05D1  2DDD               	goto	l3356
  9942  05D2                     u5390:
  9943  05D2                     l3352:
  9944                           
  9945                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9946  05D2  302E               	movlw	46
  9947  05D3  00FF               	movwf	btemp+1
  9948  05D4  0844               	movf	sprintf@sp^(0+128),w
  9949  05D5  0084               	movwf	4
  9950  05D6  087F               	movf	btemp+1,w
  9951  05D7  1383               	bcf	3,7	;select IRP bank0
  9952  05D8  0080               	movwf	0
  9953  05D9                     l3354:
  9954  05D9  3001               	movlw	1
  9955  05DA  00FF               	movwf	btemp+1
  9956  05DB  087F               	movf	btemp+1,w
  9957  05DC  07C4               	addwf	sprintf@sp^(0+128),f
  9958  05DD                     l3356:
  9959                           
  9960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9961  05DD  0847               	movf	sprintf@c^(0+128),w
  9962  05DE  120A  158A  249D  120A  118A  	fcall	_scale
  9963  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  9964  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  9965  05E5  0845               	movf	?_scale+3,w
  9966  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  9967  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  9968  05E8  00B0               	movwf	(_sprintf$734+3)^(0+128)
  9969  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  9970  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  9971  05EB  0844               	movf	?_scale+2,w
  9972  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  9973  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  9974  05EE  00AF               	movwf	(_sprintf$734+2)^(0+128)
  9975  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  9976  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  9977  05F1  0843               	movf	?_scale+1,w
  9978  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  9979  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  9980  05F4  00AE               	movwf	(_sprintf$734+1)^(0+128)
  9981  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  9982  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  9983  05F7  0842               	movf	?_scale,w
  9984  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  9985  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  9986  05FA  00AD               	movwf	_sprintf$734^(0+128)
  9987  05FB                     l3358:
  9988                           
  9989                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9990  05FB  0830               	movf	(_sprintf$734+3)^(0+128),w
  9991  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  9992  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  9993  05FE  00AF               	movwf	___flmul@a+3
  9994  05FF  1683               	bsf	3,5	;RP0=1, select bank1
  9995  0600  1303               	bcf	3,6	;RP1=0, select bank1
  9996  0601  082F               	movf	(_sprintf$734+2)^(0+128),w
  9997  0602  1283               	bcf	3,5	;RP0=0, select bank0
  9998  0603  1303               	bcf	3,6	;RP1=0, select bank0
  9999  0604  00AE               	movwf	___flmul@a+2
 10000  0605  1683               	bsf	3,5	;RP0=1, select bank1
 10001  0606  1303               	bcf	3,6	;RP1=0, select bank1
 10002  0607  082E               	movf	(_sprintf$734+1)^(0+128),w
 10003  0608  1283               	bcf	3,5	;RP0=0, select bank0
 10004  0609  1303               	bcf	3,6	;RP1=0, select bank0
 10005  060A  00AD               	movwf	___flmul@a+1
 10006  060B  1683               	bsf	3,5	;RP0=1, select bank1
 10007  060C  1303               	bcf	3,6	;RP1=0, select bank1
 10008  060D  082D               	movf	_sprintf$734^(0+128),w
 10009  060E  1283               	bcf	3,5	;RP0=0, select bank0
 10010  060F  1303               	bcf	3,6	;RP1=0, select bank0
 10011  0610  00AC               	movwf	___flmul@a
 10012  0611  1683               	bsf	3,5	;RP0=1, select bank1
 10013  0612  1303               	bcf	3,6	;RP1=0, select bank1
 10014  0613  0843               	movf	(sprintf@fval+3)^(0+128),w
 10015  0614  1283               	bcf	3,5	;RP0=0, select bank0
 10016  0615  1303               	bcf	3,6	;RP1=0, select bank0
 10017  0616  00AB               	movwf	___flmul@b+3
 10018  0617  1683               	bsf	3,5	;RP0=1, select bank1
 10019  0618  1303               	bcf	3,6	;RP1=0, select bank1
 10020  0619  0842               	movf	(sprintf@fval+2)^(0+128),w
 10021  061A  1283               	bcf	3,5	;RP0=0, select bank0
 10022  061B  1303               	bcf	3,6	;RP1=0, select bank0
 10023  061C  00AA               	movwf	___flmul@b+2
 10024  061D  1683               	bsf	3,5	;RP0=1, select bank1
 10025  061E  1303               	bcf	3,6	;RP1=0, select bank1
 10026  061F  0841               	movf	(sprintf@fval+1)^(0+128),w
 10027  0620  1283               	bcf	3,5	;RP0=0, select bank0
 10028  0621  1303               	bcf	3,6	;RP1=0, select bank0
 10029  0622  00A9               	movwf	___flmul@b+1
 10030  0623  1683               	bsf	3,5	;RP0=1, select bank1
 10031  0624  1303               	bcf	3,6	;RP1=0, select bank1
 10032  0625  0840               	movf	sprintf@fval^(0+128),w
 10033  0626  1283               	bcf	3,5	;RP0=0, select bank0
 10034  0627  1303               	bcf	3,6	;RP1=0, select bank0
 10035  0628  00A8               	movwf	___flmul@b
 10036  0629  120A  158A  213C  120A  118A  	fcall	___flmul
 10037  062E  1283               	bcf	3,5	;RP0=0, select bank0
 10038  062F  1303               	bcf	3,6	;RP1=0, select bank0
 10039  0630  082B               	movf	?___flmul+3,w
 10040  0631  00D8               	movwf	___fltol@f1+3
 10041  0632  082A               	movf	?___flmul+2,w
 10042  0633  00D7               	movwf	___fltol@f1+2
 10043  0634  0829               	movf	?___flmul+1,w
 10044  0635  00D6               	movwf	___fltol@f1+1
 10045  0636  0828               	movf	?___flmul,w
 10046  0637  00D5               	movwf	___fltol@f1
 10047  0638  120A  158A  2002  120A  118A  	fcall	___fltol
 10048  063D  1283               	bcf	3,5	;RP0=0, select bank0
 10049  063E  1303               	bcf	3,6	;RP1=0, select bank0
 10050  063F  0858               	movf	?___fltol+3,w
 10051  0640  1683               	bsf	3,5	;RP0=1, select bank1
 10052  0641  1303               	bcf	3,6	;RP1=0, select bank1
 10053  0642  00B5               	movwf	(sprintf@val+3)^(0+128)
 10054  0643  1283               	bcf	3,5	;RP0=0, select bank0
 10055  0644  1303               	bcf	3,6	;RP1=0, select bank0
 10056  0645  0857               	movf	?___fltol+2,w
 10057  0646  1683               	bsf	3,5	;RP0=1, select bank1
 10058  0647  1303               	bcf	3,6	;RP1=0, select bank1
 10059  0648  00B4               	movwf	(sprintf@val+2)^(0+128)
 10060  0649  1283               	bcf	3,5	;RP0=0, select bank0
 10061  064A  1303               	bcf	3,6	;RP1=0, select bank0
 10062  064B  0856               	movf	?___fltol+1,w
 10063  064C  1683               	bsf	3,5	;RP0=1, select bank1
 10064  064D  1303               	bcf	3,6	;RP1=0, select bank1
 10065  064E  00B3               	movwf	(sprintf@val+1)^(0+128)
 10066  064F  1283               	bcf	3,5	;RP0=0, select bank0
 10067  0650  1303               	bcf	3,6	;RP1=0, select bank0
 10068  0651  0855               	movf	?___fltol,w
 10069  0652  1683               	bsf	3,5	;RP0=1, select bank1
 10070  0653  1303               	bcf	3,6	;RP1=0, select bank1
 10071  0654  00B2               	movwf	sprintf@val^(0+128)
 10072                           
 10073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10074  0655  2EF7               	goto	l3368
 10075  0656                     l3360:
 10076                           
 10077                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10078  0656  0847               	movf	sprintf@c^(0+128),w
 10079  0657  00A8               	movwf	??_sprintf^(0+128)
 10080  0658  3001               	movlw	1
 10081  0659                     u5405:
 10082  0659  1003               	clrc
 10083  065A  0DA8               	rlf	??_sprintf^(0+128),f
 10084  065B  3EFF               	addlw	-1
 10085  065C  1D03               	skipz
 10086  065D  2E59               	goto	u5405
 10087  065E  1003               	clrc
 10088  065F  0D28               	rlf	??_sprintf^(0+128),w
 10089  0660  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10090  0661  0084               	movwf	4
 10091  0662  160A  118A  2000  120A  118A  	fcall	stringdir
 10092  0667  00F3               	movwf	___lldiv@divisor
 10093  0668  160A  118A  2000  120A  118A  	fcall	stringdir
 10094  066D  00F4               	movwf	___lldiv@divisor+1
 10095  066E  160A  118A  2000  120A  118A  	fcall	stringdir
 10096  0673  00F5               	movwf	___lldiv@divisor+2
 10097  0674  160A  118A  2000  120A  118A  	fcall	stringdir
 10098  0679  00F6               	movwf	___lldiv@divisor+3
 10099  067A  0835               	movf	(sprintf@val+3)^(0+128),w
 10100  067B  00FA               	movwf	___lldiv@dividend+3
 10101  067C  0834               	movf	(sprintf@val+2)^(0+128),w
 10102  067D  00F9               	movwf	___lldiv@dividend+2
 10103  067E  0833               	movf	(sprintf@val+1)^(0+128),w
 10104  067F  00F8               	movwf	___lldiv@dividend+1
 10105  0680  0832               	movf	sprintf@val^(0+128),w
 10106  0681  00F7               	movwf	___lldiv@dividend
 10107  0682  160A  158A  262F  120A  118A  	fcall	___lldiv
 10108  0687  0876               	movf	?___lldiv+3,w
 10109  0688  1683               	bsf	3,5	;RP0=1, select bank1
 10110  0689  1303               	bcf	3,6	;RP1=0, select bank1
 10111  068A  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
 10112  068B  0875               	movf	?___lldiv+2,w
 10113  068C  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
 10114  068D  0874               	movf	?___lldiv+1,w
 10115  068E  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
 10116  068F  0873               	movf	?___lldiv,w
 10117  0690  00BA               	movwf	sprintf@tmpval^(0+128)
 10118  0691                     l3362:
 10119                           
 10120                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10121  0691  3000               	movlw	0
 10122  0692  00F6               	movwf	___llmod@divisor+3
 10123  0693  3000               	movlw	0
 10124  0694  00F5               	movwf	___llmod@divisor+2
 10125  0695  3000               	movlw	0
 10126  0696  00F4               	movwf	___llmod@divisor+1
 10127  0697  300A               	movlw	10
 10128  0698  00F3               	movwf	___llmod@divisor
 10129  0699  083D               	movf	(sprintf@tmpval+3)^(0+128),w
 10130  069A  00FA               	movwf	___llmod@dividend+3
 10131  069B  083C               	movf	(sprintf@tmpval+2)^(0+128),w
 10132  069C  00F9               	movwf	___llmod@dividend+2
 10133  069D  083B               	movf	(sprintf@tmpval+1)^(0+128),w
 10134  069E  00F8               	movwf	___llmod@dividend+1
 10135  069F  083A               	movf	sprintf@tmpval^(0+128),w
 10136  06A0  00F7               	movwf	___llmod@dividend
 10137  06A1  160A  158A  2580  120A  118A  	fcall	___llmod
 10138  06A6  0876               	movf	?___llmod+3,w
 10139  06A7  1683               	bsf	3,5	;RP0=1, select bank1
 10140  06A8  1303               	bcf	3,6	;RP1=0, select bank1
 10141  06A9  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
 10142  06AA  0875               	movf	?___llmod+2,w
 10143  06AB  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
 10144  06AC  0874               	movf	?___llmod+1,w
 10145  06AD  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
 10146  06AE  0873               	movf	?___llmod,w
 10147  06AF  00BA               	movwf	sprintf@tmpval^(0+128)
 10148  06B0                     l3364:
 10149                           
 10150                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10151  06B0  083A               	movf	sprintf@tmpval^(0+128),w
 10152  06B1  3E30               	addlw	48
 10153  06B2  00FF               	movwf	btemp+1
 10154  06B3  0844               	movf	sprintf@sp^(0+128),w
 10155  06B4  0084               	movwf	4
 10156  06B5  087F               	movf	btemp+1,w
 10157  06B6  1383               	bcf	3,7	;select IRP bank0
 10158  06B7  0080               	movwf	0
 10159  06B8  3001               	movlw	1
 10160  06B9  00FF               	movwf	btemp+1
 10161  06BA  087F               	movf	btemp+1,w
 10162  06BB  07C4               	addwf	sprintf@sp^(0+128),f
 10163  06BC                     l3366:
 10164                           
 10165                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10166  06BC  0847               	movf	sprintf@c^(0+128),w
 10167  06BD  00A8               	movwf	??_sprintf^(0+128)
 10168  06BE  3001               	movlw	1
 10169  06BF                     u5415:
 10170  06BF  1003               	clrc
 10171  06C0  0DA8               	rlf	??_sprintf^(0+128),f
 10172  06C1  3EFF               	addlw	-1
 10173  06C2  1D03               	skipz
 10174  06C3  2EBF               	goto	u5415
 10175  06C4  1003               	clrc
 10176  06C5  0D28               	rlf	??_sprintf^(0+128),w
 10177  06C6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10178  06C7  0084               	movwf	4
 10179  06C8  160A  118A  2000  120A  118A  	fcall	stringdir
 10180  06CD  00F3               	movwf	___llmod@divisor
 10181  06CE  160A  118A  2000  120A  118A  	fcall	stringdir
 10182  06D3  00F4               	movwf	___llmod@divisor+1
 10183  06D4  160A  118A  2000  120A  118A  	fcall	stringdir
 10184  06D9  00F5               	movwf	___llmod@divisor+2
 10185  06DA  160A  118A  2000  120A  118A  	fcall	stringdir
 10186  06DF  00F6               	movwf	___llmod@divisor+3
 10187  06E0  0835               	movf	(sprintf@val+3)^(0+128),w
 10188  06E1  00FA               	movwf	___llmod@dividend+3
 10189  06E2  0834               	movf	(sprintf@val+2)^(0+128),w
 10190  06E3  00F9               	movwf	___llmod@dividend+2
 10191  06E4  0833               	movf	(sprintf@val+1)^(0+128),w
 10192  06E5  00F8               	movwf	___llmod@dividend+1
 10193  06E6  0832               	movf	sprintf@val^(0+128),w
 10194  06E7  00F7               	movwf	___llmod@dividend
 10195  06E8  160A  158A  2580  120A  118A  	fcall	___llmod
 10196  06ED  0876               	movf	?___llmod+3,w
 10197  06EE  1683               	bsf	3,5	;RP0=1, select bank1
 10198  06EF  1303               	bcf	3,6	;RP1=0, select bank1
 10199  06F0  00B5               	movwf	(sprintf@val+3)^(0+128)
 10200  06F1  0875               	movf	?___llmod+2,w
 10201  06F2  00B4               	movwf	(sprintf@val+2)^(0+128)
 10202  06F3  0874               	movf	?___llmod+1,w
 10203  06F4  00B3               	movwf	(sprintf@val+1)^(0+128)
 10204  06F5  0873               	movf	?___llmod,w
 10205  06F6  00B2               	movwf	sprintf@val^(0+128)
 10206  06F7                     l3368:
 10207                           
 10208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10209  06F7  3001               	movlw	1
 10210  06F8  02C7               	subwf	sprintf@c^(0+128),f
 10211  06F9  0A47               	incf	sprintf@c^(0+128),w
 10212  06FA  1D03               	btfss	3,2
 10213  06FB  2EFD               	goto	u5421
 10214  06FC  2EFE               	goto	u5420
 10215  06FD                     u5421:
 10216  06FD  2E56               	goto	l3360
 10217  06FE                     u5420:
 10218  06FE  2F10               	goto	l3376
 10219  06FF                     l3370:
 10220                           
 10221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10222  06FF  3030               	movlw	48
 10223  0700  00FF               	movwf	btemp+1
 10224  0701  0844               	movf	sprintf@sp^(0+128),w
 10225  0702  0084               	movwf	4
 10226  0703  087F               	movf	btemp+1,w
 10227  0704  1383               	bcf	3,7	;select IRP bank0
 10228  0705  0080               	movwf	0
 10229  0706                     l3372:
 10230  0706  3001               	movlw	1
 10231  0707  00FF               	movwf	btemp+1
 10232  0708  087F               	movf	btemp+1,w
 10233  0709  07C4               	addwf	sprintf@sp^(0+128),f
 10234  070A                     l3374:
 10235                           
 10236                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10237  070A  30FF               	movlw	255
 10238  070B  07C5               	addwf	sprintf@prec^(0+128),f
 10239  070C  1803               	skipnc
 10240  070D  0AC6               	incf	(sprintf@prec+1)^(0+128),f
 10241  070E  30FF               	movlw	255
 10242  070F  07C6               	addwf	(sprintf@prec+1)^(0+128),f
 10243  0710                     l3376:
 10244                           
 10245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10246  0710  0845               	movf	sprintf@prec^(0+128),w
 10247  0711  0446               	iorwf	(sprintf@prec+1)^(0+128),w
 10248  0712  1D03               	btfss	3,2
 10249  0713  2F15               	goto	u5431
 10250  0714  2F16               	goto	u5430
 10251  0715                     u5431:
 10252  0715  2EFF               	goto	l3370
 10253  0716                     u5430:
 10254  0716  2FDC               	goto	l3424
 10255  0717                     l3378:
 10256                           
 10257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 10258  0717  0845               	movf	sprintf@prec^(0+128),w
 10259  0718  0446               	iorwf	(sprintf@prec+1)^(0+128),w
 10260  0719  1D03               	btfss	3,2
 10261  071A  2F1C               	goto	u5441
 10262  071B  2F1D               	goto	u5440
 10263  071C                     u5441:
 10264  071C  2F2B               	goto	l266
 10265  071D                     u5440:
 10266  071D                     l3380:
 10267  071D  0835               	movf	(sprintf@val+3)^(0+128),w
 10268  071E  0434               	iorwf	(sprintf@val+2)^(0+128),w
 10269  071F  0433               	iorwf	(sprintf@val+1)^(0+128),w
 10270  0720  0432               	iorwf	sprintf@val^(0+128),w
 10271  0721  1D03               	skipz
 10272  0722  2F24               	goto	u5451
 10273  0723  2F25               	goto	u5450
 10274  0724                     u5451:
 10275  0724  2F2B               	goto	l266
 10276  0725                     u5450:
 10277  0725                     l3382:
 10278                           
 10279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10280  0725  3001               	movlw	1
 10281  0726  07C5               	addwf	sprintf@prec^(0+128),f
 10282  0727  1803               	skipnc
 10283  0728  0AC6               	incf	(sprintf@prec+1)^(0+128),f
 10284  0729  3000               	movlw	0
 10285  072A  07C6               	addwf	(sprintf@prec+1)^(0+128),f
 10286  072B                     l266:
 10287                           
 10288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10289  072B  0846               	movf	(sprintf@prec+1)^(0+128),w
 10290  072C  3A80               	xorlw	128
 10291  072D  3C80               	sublw	128
 10292  072E  1D03               	skipz
 10293  072F  2F32               	goto	u5465
 10294  0730  0845               	movf	sprintf@prec^(0+128),w
 10295  0731  0247               	subwf	sprintf@c^(0+128),w
 10296  0732                     u5465:
 10297  0732  1803               	skipnc
 10298  0733  2F35               	goto	u5461
 10299  0734  2F36               	goto	u5460
 10300  0735                     u5461:
 10301  0735  2F3D               	goto	l3386
 10302  0736                     u5460:
 10303  0736                     l3384:
 10304                           
 10305                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10306  0736  1683               	bsf	3,5	;RP0=1, select bank1
 10307  0737  1303               	bcf	3,6	;RP1=0, select bank1
 10308  0738  0845               	movf	sprintf@prec^(0+128),w
 10309  0739  00FF               	movwf	btemp+1
 10310  073A  087F               	movf	btemp+1,w
 10311  073B  00C7               	movwf	sprintf@c^(0+128)
 10312  073C  2F55               	goto	l3390
 10313  073D                     l3386:
 10314  073D  1683               	bsf	3,5	;RP0=1, select bank1
 10315  073E  1303               	bcf	3,6	;RP1=0, select bank1
 10316  073F  0846               	movf	(sprintf@prec+1)^(0+128),w
 10317  0740  3A80               	xorlw	128
 10318  0741  00A8               	movwf	??_sprintf^(0+128)
 10319  0742  3080               	movlw	128
 10320  0743  0228               	subwf	??_sprintf^(0+128),w
 10321  0744  1D03               	skipz
 10322  0745  2F48               	goto	u5475
 10323  0746  0847               	movf	sprintf@c^(0+128),w
 10324  0747  0245               	subwf	sprintf@prec^(0+128),w
 10325  0748                     u5475:
 10326  0748  1803               	skipnc
 10327  0749  2F4B               	goto	u5471
 10328  074A  2F4C               	goto	u5470
 10329  074B                     u5471:
 10330  074B  2F55               	goto	l3390
 10331  074C                     u5470:
 10332  074C                     l3388:
 10333                           
 10334                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10335  074C  1683               	bsf	3,5	;RP0=1, select bank1
 10336  074D  1303               	bcf	3,6	;RP1=0, select bank1
 10337  074E  0847               	movf	sprintf@c^(0+128),w
 10338  074F  00A8               	movwf	??_sprintf^(0+128)
 10339  0750  01A9               	clrf	(??_sprintf^(0+128)+1)
 10340  0751  0828               	movf	??_sprintf^(0+128),w
 10341  0752  00C5               	movwf	sprintf@prec^(0+128)
 10342  0753  0829               	movf	(??_sprintf+1)^(0+128),w
 10343  0754  00C6               	movwf	(sprintf@prec+1)^(0+128)
 10344  0755                     l3390:
 10345                           
 10346                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10347  0755  1683               	bsf	3,5	;RP0=1, select bank1
 10348  0756  1303               	bcf	3,6	;RP1=0, select bank1
 10349  0757  0838               	movf	sprintf@width^(0+128),w
 10350  0758  0439               	iorwf	(sprintf@width+1)^(0+128),w
 10351  0759  1903               	btfsc	3,2
 10352  075A  2F5C               	goto	u5481
 10353  075B  2F5D               	goto	u5480
 10354  075C                     u5481:
 10355  075C  2F6F               	goto	l3396
 10356  075D                     u5480:
 10357  075D                     l3392:
 10358  075D  3003               	movlw	3
 10359  075E  0536               	andwf	sprintf@flag^(0+128),w
 10360  075F  00A8               	movwf	??_sprintf^(0+128)
 10361  0760  3000               	movlw	0
 10362  0761  0537               	andwf	(sprintf@flag+1)^(0+128),w
 10363  0762  00A9               	movwf	(??_sprintf+1)^(0+128)
 10364  0763  0828               	movf	??_sprintf^(0+128),w
 10365  0764  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10366  0765  1903               	btfsc	3,2
 10367  0766  2F68               	goto	u5491
 10368  0767  2F69               	goto	u5490
 10369  0768                     u5491:
 10370  0768  2F6F               	goto	l3396
 10371  0769                     u5490:
 10372  0769                     l3394:
 10373                           
 10374                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10375  0769  30FF               	movlw	255
 10376  076A  07B8               	addwf	sprintf@width^(0+128),f
 10377  076B  1803               	skipnc
 10378  076C  0AB9               	incf	(sprintf@width+1)^(0+128),f
 10379  076D  30FF               	movlw	255
 10380  076E  07B9               	addwf	(sprintf@width+1)^(0+128),f
 10381  076F                     l3396:
 10382                           
 10383                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10384  076F  1F37               	btfss	(sprintf@flag+1)^(0+128),6
 10385  0770  2F72               	goto	u5501
 10386  0771  2F73               	goto	u5500
 10387  0772                     u5501:
 10388  0772  2F8E               	goto	l3404
 10389  0773                     u5500:
 10390  0773                     l3398:
 10391                           
 10392                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10393  0773  0846               	movf	(sprintf@prec+1)^(0+128),w
 10394  0774  3A80               	xorlw	128
 10395  0775  00A8               	movwf	??_sprintf^(0+128)
 10396  0776  0839               	movf	(sprintf@width+1)^(0+128),w
 10397  0777  3A80               	xorlw	128
 10398  0778  0228               	subwf	??_sprintf^(0+128),w
 10399  0779  1D03               	skipz
 10400  077A  2F7D               	goto	u5515
 10401  077B  0838               	movf	sprintf@width^(0+128),w
 10402  077C  0245               	subwf	sprintf@prec^(0+128),w
 10403  077D                     u5515:
 10404  077D  1803               	skipnc
 10405  077E  2F80               	goto	u5511
 10406  077F  2F81               	goto	u5510
 10407  0780                     u5511:
 10408  0780  2F8A               	goto	l3402
 10409  0781                     u5510:
 10410  0781                     l3400:
 10411                           
 10412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10413  0781  1683               	bsf	3,5	;RP0=1, select bank1
 10414  0782  1303               	bcf	3,6	;RP1=0, select bank1
 10415  0783  0845               	movf	sprintf@prec^(0+128),w
 10416  0784  02B8               	subwf	sprintf@width^(0+128),f
 10417  0785  0846               	movf	(sprintf@prec+1)^(0+128),w
 10418  0786  1C03               	skipc
 10419  0787  03B9               	decf	(sprintf@width+1)^(0+128),f
 10420  0788  02B9               	subwf	(sprintf@width+1)^(0+128),f
 10421  0789  2F8E               	goto	l3404
 10422  078A                     l3402:
 10423                           
 10424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10425  078A  1683               	bsf	3,5	;RP0=1, select bank1
 10426  078B  1303               	bcf	3,6	;RP1=0, select bank1
 10427  078C  01B8               	clrf	sprintf@width^(0+128)
 10428  078D  01B9               	clrf	(sprintf@width+1)^(0+128)
 10429  078E                     l3404:
 10430                           
 10431                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10432  078E  0839               	movf	(sprintf@width+1)^(0+128),w
 10433  078F  3A80               	xorlw	128
 10434  0790  3C80               	sublw	128
 10435  0791  1D03               	skipz
 10436  0792  2F95               	goto	u5525
 10437  0793  0838               	movf	sprintf@width^(0+128),w
 10438  0794  0247               	subwf	sprintf@c^(0+128),w
 10439  0795                     u5525:
 10440  0795  1803               	skipnc
 10441  0796  2F98               	goto	u5521
 10442  0797  2F99               	goto	u5520
 10443  0798                     u5521:
 10444  0798  2FA5               	goto	l3408
 10445  0799                     u5520:
 10446  0799                     l3406:
 10447                           
 10448                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10449  0799  1683               	bsf	3,5	;RP0=1, select bank1
 10450  079A  1303               	bcf	3,6	;RP1=0, select bank1
 10451  079B  0847               	movf	sprintf@c^(0+128),w
 10452  079C  00A8               	movwf	??_sprintf^(0+128)
 10453  079D  01A9               	clrf	(??_sprintf^(0+128)+1)
 10454  079E  0828               	movf	??_sprintf^(0+128),w
 10455  079F  02B8               	subwf	sprintf@width^(0+128),f
 10456  07A0  0829               	movf	(??_sprintf+1)^(0+128),w
 10457  07A1  1C03               	skipc
 10458  07A2  03B9               	decf	(sprintf@width+1)^(0+128),f
 10459  07A3  02B9               	subwf	(sprintf@width+1)^(0+128),f
 10460  07A4  2FA9               	goto	l3410
 10461  07A5                     l3408:
 10462                           
 10463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10464  07A5  1683               	bsf	3,5	;RP0=1, select bank1
 10465  07A6  1303               	bcf	3,6	;RP1=0, select bank1
 10466  07A7  01B8               	clrf	sprintf@width^(0+128)
 10467  07A8  01B9               	clrf	(sprintf@width+1)^(0+128)
 10468  07A9                     l3410:
 10469                           
 10470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10471  07A9  0838               	movf	sprintf@width^(0+128),w
 10472  07AA  0439               	iorwf	(sprintf@width+1)^(0+128),w
 10473  07AB  1903               	btfsc	3,2
 10474  07AC  2FAE               	goto	u5531
 10475  07AD  2FAF               	goto	u5530
 10476  07AE                     u5531:
 10477  07AE  2FC6               	goto	l3418
 10478  07AF                     u5530:
 10479  07AF                     l3412:
 10480                           
 10481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10482  07AF  3020               	movlw	32
 10483  07B0  00FF               	movwf	btemp+1
 10484  07B1  0844               	movf	sprintf@sp^(0+128),w
 10485  07B2  0084               	movwf	4
 10486  07B3  087F               	movf	btemp+1,w
 10487  07B4  1383               	bcf	3,7	;select IRP bank0
 10488  07B5  0080               	movwf	0
 10489  07B6                     l3414:
 10490  07B6  3001               	movlw	1
 10491  07B7  00FF               	movwf	btemp+1
 10492  07B8  087F               	movf	btemp+1,w
 10493  07B9  07C4               	addwf	sprintf@sp^(0+128),f
 10494  07BA                     l3416:
 10495  07BA  30FF               	movlw	255
 10496  07BB  07B8               	addwf	sprintf@width^(0+128),f
 10497  07BC  1803               	skipnc
 10498  07BD  0AB9               	incf	(sprintf@width+1)^(0+128),f
 10499  07BE  30FF               	movlw	255
 10500  07BF  07B9               	addwf	(sprintf@width+1)^(0+128),f
 10501  07C0  0838               	movf	sprintf@width^(0+128),w
 10502  07C1  0439               	iorwf	(sprintf@width+1)^(0+128),w
 10503  07C2  1D03               	btfss	3,2
 10504  07C3  2FC5               	goto	u5541
 10505  07C4  2FC6               	goto	u5540
 10506  07C5                     u5541:
 10507  07C5  2FAF               	goto	l3412
 10508  07C6                     u5540:
 10509  07C6                     l3418:
 10510                           
 10511                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10512  07C6  3003               	movlw	3
 10513  07C7  0536               	andwf	sprintf@flag^(0+128),w
 10514  07C8  00A8               	movwf	??_sprintf^(0+128)
 10515  07C9  3000               	movlw	0
 10516  07CA  0537               	andwf	(sprintf@flag+1)^(0+128),w
 10517  07CB  00A9               	movwf	(??_sprintf+1)^(0+128)
 10518  07CC  0828               	movf	??_sprintf^(0+128),w
 10519  07CD  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10520  07CE  1903               	btfsc	3,2
 10521  07CF  2FD1               	goto	u5551
 10522  07D0  2FD2               	goto	u5550
 10523  07D1                     u5551:
 10524  07D1  2FDC               	goto	l3424
 10525  07D2                     u5550:
 10526  07D2                     l3420:
 10527                           
 10528                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10529  07D2  302D               	movlw	45
 10530  07D3  00FF               	movwf	btemp+1
 10531  07D4  0844               	movf	sprintf@sp^(0+128),w
 10532  07D5  0084               	movwf	4
 10533  07D6  087F               	movf	btemp+1,w
 10534  07D7  1383               	bcf	3,7	;select IRP bank0
 10535  07D8  0080               	movwf	0
 10536  07D9  120A  118A  2877   	goto	l3176
 10537  07DC                     l3424:
 10538                           
 10539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10540  07DC  3001               	movlw	1
 10541  07DD  1283               	bcf	3,5	;RP0=0, select bank0
 10542  07DE  1303               	bcf	3,6	;RP1=0, select bank0
 10543  07DF  07EA               	addwf	sprintf@f,f
 10544  07E0  30FF               	movlw	-1
 10545  07E1  076A               	addwf	sprintf@f,w
 10546  07E2  0084               	movwf	4
 10547  07E3  160A  118A  2000  120A  118A  	fcall	stringdir
 10548  07E8  00FF               	movwf	btemp+1
 10549  07E9  087F               	movf	btemp+1,w
 10550  07EA  1683               	bsf	3,5	;RP0=1, select bank1
 10551  07EB  1303               	bcf	3,6	;RP1=0, select bank1
 10552  07EC  00C7               	movwf	sprintf@c^(0+128)
 10553  07ED  0847               	movf	sprintf@c^(0+128),w
 10554  07EE  1D03               	btfss	3,2
 10555  07EF  2FF1               	goto	u5561
 10556  07F0  2FF4               	goto	u5560
 10557  07F1                     u5561:
 10558  07F1  120A  118A  286A   	goto	l3172
 10559  07F4                     u5560:
 10560  07F4                     l3426:
 10561                           
 10562                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10563  07F4  0844               	movf	sprintf@sp^(0+128),w
 10564  07F5  0084               	movwf	4
 10565  07F6  1383               	bcf	3,7	;select IRP bank0
 10566  07F7  0180               	clrf	0
 10567  07F8                     l281:
 10568  07F8  0008               	return
 10569  07F9                     __end_of_sprintf:

Data Sizes:
    Strings     26
    Constant    144
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     11      11
    BANK0            80     79      79
    BANK1            80     68      69
    BANK3            85      0       0
    BANK2            91      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[26]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@tab(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    PORT_putString@chaine	PTR unsigned char  size(1) Largest target is 20
		 -> main@tab(BANK1[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    ___flmul->___lwdiv
    _PORT_putString->_PORT_putchar
    _ADC_GetValue->_PORT_Choose_Mux

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _Voltage_Value->___flmul
    ___flmul->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   38943
                                             40 BANK1     28    28      0
                       _ADC_GetValue
                     _PORT_Blink_LED
                          _PORT_Init
                   _PORT_Select_Mux0
                     _PORT_putString
                  _TIMER_init_timer1
                      _Voltage_Value
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   33376
                                             74 BANK0      5     0      5
                                              8 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7391
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1223
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1226
                                              7 COMMON     4     0      4
                                              0 BANK0      3     3      0
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             53 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Voltage_Value                                       13     9      4    5239
                                             34 BANK0     13     9      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _TIMER_init_timer1                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PORT_putString                                       4     4      0     145
                                              3 COMMON     4     4      0
                       _PORT_putchar
 ---------------------------------------------------------------------------------
 (2) _PORT_putchar                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PORT_Select_Mux0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            1     1      0       0
                                              2 COMMON     1     1      0
                   _PORT_Init_Serial
 ---------------------------------------------------------------------------------
 (2) _PORT_Init_Serial                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PORT_Blink_LED                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetValue                                         1     1      0      66
                                              3 COMMON     1     1      0
                    _PORT_Choose_Mux
                 _PORT_Get_Value_Adc
                     _PORT_Start_ADC
 ---------------------------------------------------------------------------------
 (2) _PORT_Start_ADC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORT_Get_Value_Adc                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORT_Choose_Mux                                      1     1      0      44
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetValue
     _PORT_Choose_Mux
     _PORT_Get_Value_Adc
     _PORT_Start_ADC
   _PORT_Blink_LED
   _PORT_Init
     _PORT_Init_Serial
   _PORT_Select_Mux0
   _PORT_putString
     _PORT_putchar
   _TIMER_init_timer1
   _Voltage_Value
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      B       B       1       84.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
DATA                 0      0      9F       6        0.0%
BITBANK1            50      0       0       7        0.0%
BANK1               50     44      45       8       86.2%
BITBANK3            55      0       0       9        0.0%
BANK3               55      0       0      10        0.0%
BITBANK2            5B      0       0      11        0.0%
BANK2               5B      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue May 30 11:48:42 2023

                          pc 0002                           l37 1D2F                           l46 1B72  
                         l95 1C2E                 ___awdiv@sign 0025                           fsr 0004  
        ___wmul@multiplicand 0075          __Umul8_16@word_mpld 0079             ??_PORT_Blink_LED 0073  
                        l101 1C67                          l111 1B1B                          l104 1B4E  
                        l120 1B34                          l114 1B1F                          l123 1B3E  
                        l108 1B60                          l132 1B27                          l220 013E  
                        l117 1B17                          l129 1BB7                          l321 1E96  
                        l164 1B84                          l502 136C                          l503 12DE  
                        l191 1577                          l513 135F                          l601 1CA1  
                        l281 07F8                          l506 132F                          l266 072B  
                        l451 1E2E                          l612 15DB                          l541 1DD5  
                        l285 1BC4                          l438 1EFF                          l198 0FFF  
                        l471 1D4E                          l287 1BDC                          l455 093B  
                        l720 0C90                          l472 1D6A                          l480 11F3  
                        l616 1682                          l456 08A0                          l473 1D7F  
                        l633 174D                          l625 17FF                          l714 0C08  
                        l618 1659                          l466 092E                          l643 1793  
                        l459 08FE                          l708 0C9C                          l476 116E  
                        l484 1B32                          l637 1771                          l654 17F3  
                        l727 1BF1                          l479 11DA                          l655 17FF  
                        l495 0868                          l591 1CE7                          l752 1218  
                        l488 087D                          l729 1C03                          l754 12AF  
                        l658 005F                          l498 087D                          l772 1B96  
                        l765 1279                          l766 1285    __end_of_TIMER_init_timer1 1B85  
                        _isr 10B0                          fsr0 0004                          indf 0000  
               ___awmod@sign 0078                 ___flmul@aexp 003A                 ___flmul@bexp 003B  
                _sprintf$734 00AD                 ___flmul@sign 0035                 ___flmul@temp 0040  
               ___flmul@prod 003C     __end_of_PORT_Select_Mux0 1B28                 ___fltol@exp1 005E  
                       l2200 1BE0                         l3000 083C                         l2202 1BE7  
                       l3010 0856                         l3100 1C35                         l2204 1BEB  
                       l3020 0872                         l2300 1CAF                         l2220 1EA5  
                       l2212 1E97                         l3110 1C4B                         l3102 1C39  
                       l2206 1BFA                         l3006 0844                         l3030 1D9A  
                       l3022 1D80                         l2310 1CD5                         l2302 1CB6  
                       l2230 1EBA                         l2222 1EA9                         l2214 1E9A  
                       l3120 1C5E                         l3112 1C4D                         l3104 1C3B  
                       l2208 1BFF                         l2400 15FD                         l3016 085D  
                       l3008 084D                         l3032 1D9E                         l3024 1D88  
                       l3040 1DCD                         l2312 1CD6                         l2304 1CBA  
                       l2320 1C68                         l2240 1EDD                         l2232 1EBD  
                       l2224 1EAE                         l2216 1E9E                         l3200 00F4  
                       l3122 1C5F                         l3114 1C52                         l3106 1C44  
                       l3130 1B73                         l3050 11F7                         l2410 1611  
                       l2402 1601                         l3018 086D                         l3034 1DB0  
                       l3026 1D8D                         l2314 1CDD                         l2306 1CBE  
                       l2330 1C80                         l2322 1C6E                         l2250 1EF6  
                       l2242 1EE3                         l2234 1EC4                         l2226 1EB2  
                       l2218 1EA3                         l3210 013C                         l3202 0109  
                       l3124 1C62                         l3116 1C56                         l3108 1C47  
                       l3140 1B7D                         l3132 1B77                         l3052 11FC  
                       l2500 177F                         l2412 1615                         l2404 1605  
                       l2420 1625                         l3044 0010                         l3036 1DBE  
                       l3028 1D96                         l2308 1CCF                         l2316 1CE3  
                       l2332 1C8A                         l2324 1C71                         l2252 1EFB  
                       l2244 1EE4                         l2236 1EC8                         l2228 1EB4  
                       l2260 1DDB                         l3300 04A7                         l3220 0170  
                       l3204 0120                         l3126 1C64                         l3118 1C5A  
                       l3150 1B20                         l3142 1B7E                         l3134 1B7A  
                       l3070 1242                         l3062 1229                         l3054 1200  
                       l2510 1790                         l2502 1781                         l2430 165D  
                       l2422 1626                         l2414 1619                         l2406 1609  
                       l2350 158A                         l2342 1578                         l3046 0014  
                       l3038 1DC7                         l2334 1C90                         l2326 1C78  
                       l2246 1EEB                         l2238 1ECC                         l2270 1DF1  
                       l2262 1DE0                         l3310 04DE                         l3302 04AB  
                       l3230 01B8                         l3222 0174                         l3214 0140  
                       l3206 0126                         l3160 1B6D                         l3128 1C65  
                       l3152 1B23                         l3144 1B7F                         l3136 1B7B  
                       l2600 0A47                         l3080 126F                         l3072 1246  
                       l3064 122E                         l3056 1210                         l2520 17AF  
                       l2504 1785                         l2440 1676                         l2432 1666  
                       l2424 163D                         l2416 161D                         l2408 160D  
                       l2352 158F                         l2360 159F                         l2344 157F  
                       l2336 1C97                         l2328 1C7C                         l2248 1EF1  
                       l2280 1E0D                         l2272 1DF4                         l2264 1DE2  
                       l2256 1DD6                         l3400 0781                         l3320 0500  
                       l3312 04E5                         l3304 04B1                         l3240 01EA  
                       l3232 01BC                         l3224 0182                         l3216 015E  
                       l3208 0138                         l3154 1B3F                         l3146 1B80  
                       l3138 1B7C                         l2610 0AA9                         l2602 0A63  
                       l3090 12A2                         l3082 1273                         l3074 1254  
                       l3066 1232                         l3058 1220                         l2530 17E3  
                       l2522 17CD                         l2514 1798                         l2506 1786  
                       l2450 1694                         l2434 1668                         l2426 164C  
                       l2442 167A                         l2418 1621                         l2370 15B9  
                       l2362 15A7                         l2354 1594                         l2346 1585  
                       l2338 1C9D                         l2290 1E2A                         l2282 1E13  
                       l2274 1DFB                         l2266 1DE6                         l2258 1DD7  
                       l3410 07A9                         l3402 078A                         l3330 0574  
                       l3322 050E                         l3314 04EE                         l3306 04CC  
                       l3250 0249                         l3242 01FD                         l3234 01C0  
                       l3226 0186                         l3218 016C                         l3170 0063  
                       l3156 1B62                         l2700 1C04                         l3148 1B83  
                       l2620 0B39                         l2612 0AC6                         l2604 0A6C  
                       l3092 12A6                         l3084 127D                         l3076 125D  
                       l3068 123B                         l3164 1CEB                         l2540 17FA  
                       l2532 17E8                         l2516 179D                         l2524 17D1  
                       l2508 178A                         l2460 16BE                         l2452 16AB  
                       l2444 1686                         l2436 166C                         l2428 1654  
                       l2380 15D0                         l2372 15BD                         l2364 15AC  
                       l2356 159C                         l2348 1589                         l2284 1E1A  
                       l2276 1DFF                         l2268 1DEB                         l3420 07D2  
                       l3412 07AF                         l3404 078E                         l3340 059B  
                       l3324 0515                         l3332 0580                         l3308 04D2  
                       l3252 0294                         l3244 0220                         l3236 01D9  
                       l3260 02D9                         l3228 019F                         l3180 0080  
                       l3172 006A                         l3158 1B68                         l2710 1C18  
                       l2702 1C0A                         l2198 1BDE                         l2630 0BCB  
                       l2622 0B66                         l2614 0ADF                         l2606 0A7C  
                       l2550 094D                         l3094 12A7                         l3086 1287  
                       l3078 1264                         l3166 1D27                         l2542 17FE  
                       l2534 17E9                         l2526 17D6                         l2518 17AB  
                       l2470 16E7                         l2462 16C2                         l2454 16AF  
                       l2446 168B                         l2438 166D                         l2390 15E9  
                       l2382 15D1                         l2374 15BE                         l2366 15B2  
                       l2358 159D                         l2294 1CA2                         l2278 1E03  
                       l2286 1E20                         l3414 07B6                         l3406 0799  
                       l3350 05CD                         l3342 05A8                         l3334 0588  
                       l3326 051A                         l3318 04F3                         l3270 0387  
                       l3262 02E8                         l3254 02AD                         l3246 0224  
                       l3238 01E4                         l3190 00C8                         l3182 0092  
                       l3174 0070                         l2720 1C29                         l2712 1C1B  
                       l2704 1C0D                         l3440 1BA6                         l2632 0BD4  
                       l2640 0BE8                         l2624 0B8C                         l2616 0AFC  
                       l2608 0A99                         l2560 0962                         l2552 094E  
                       l2544 093C                         l3088 129D                         l2536 17ED  
                       l2528 17DB                         l2472 1725                         l2480 173F  
                       l2464 16C3                         l2456 16B3                         l2392 15ED  
                       l2376 15C3                         l2384 15D3                         l2368 15B3  
                       l2296 1CA6                         l2288 1E25                         l3416 07BA  
                       l3408 07A5                         l3360 0656                         l3352 05D2  
                       l3344 05B7                         l3336 0591                         l3328 0555  
                       l3280 03E0                         l3272 0396                         l3264 032F  
                       l3256 02B6                         l3248 022A                         l3184 0096  
                       l3192 00D8                         l3176 0077                         l3424 07DC  
                       l2714 1C1E                         l2706 1C10                         l3098 1C2F  
                       l3442 1BAC                         l2642 0BEC                         l2634 0BD8  
                       l2626 0BB4                         l2618 0B29                         l2570 097A  
                       l2562 096A                         l2554 0953                         l2546 0943  
                       l2538 17EF                         l2490 176C                         l2482 1755  
                       l2474 1729                         l2466 16CC                         l2458 16BC  
                       l2394 15F1                         l2386 15E1                         l2378 15C8  
                       l2810 12F6                         l2298 1CAC                         l2730 1483  
                       l2722 1370                         l3418 07C6                         l3370 06FF  
                       l3362 0691                         l3354 05D9                         l3346 05BE  
                       l3338 0595                         l3290 046E                         l3274 03B1  
                       l3266 0345                         l3258 02D1                         l3426 07F4  
                       l3194 00E6                         l3186 00AB                         l3178 007C  
                       l3450 10DF                         l2716 1C21                         l2708 1C13  
                       l3436 1B98                         l2660 0C3D                         l2652 0C0D  
                       l2644 0BED                         l2636 0BD9                         l2628 0BBD  
                       l2580 0996                         l2572 097F                         l2564 096F  
                       l2556 0958                         l2548 0949                         l2492 1770  
                       l2484 175A                         l2476 172B                         l2468 16D1  
                       l2396 15F5                         l2388 15E5                         l2900 0933  
                       l2820 1320                         l2812 12FB                         l2804 12DF  
                       l2732 1489                         l2724 1376                         l2740 0CA0  
                       l3380 071D                         l3372 0706                         l3364 06B0  
                       l3356 05DD                         l3348 05C4                         l3284 03FF  
                       l3276 03BA                         l3268 0360                         l3196 00E9  
                       l3188 00C2                         l3460 10FC                         l3452 10E0  
                       l3444 10C9                         l2718 1C26                         l3438 1B9B  
                       l2670 0C74                         l2654 0C12                         l2662 0C43  
                       l2646 0BF1                         l2638 0BE2                         l2590 09B9  
                       l2582 099B                         l2574 0984                         l2566 0975  
                       l2558 0960                         l2494 1775                         l2478 1730  
                       l2398 15F9                         l2910 1BCB                         l2822 1321  
                       l2814 12FF                         l2806 12E5                         l2742 0CA4  
                       l3390 0755                         l3382 0725                         l3374 070A  
                       l3366 06BC                         l3358 05FB                         l3278 03C2  
                       l3286 0408                         l3526 0156                         l3198 00EF  
                       l3462 1102                         l3454 10E5                         l3446 10D3  
                       l2680 0C89                         l2672 0C76                         l2664 0C50  
                       l2656 0C20                         l2648 0C05                         l2592 09C6  
                       l2584 09A0                         l2576 098C                         l2568 0979  
                       l2496 1778                         l2488 1763                         l2920 1E41  
                       l2912 1BD2                         l2904 1BB8                         l2832 133B  
                       l2824 1329                         l2816 1308                         l2808 12F4  
                       l2736 1534                         l2752 0D97                         l2744 0CA6  
                       l3392 075D                         l3384 0736                         l3376 0710  
                       l3368 06F7                         l3296 0470                         l3288 046C  
                       l3464 1122                         l3456 10F0                         l3448 10D8  
                       l2690 1B50                         l2682 0C94                         l2674 0C7C  
                       l2666 0C5B                         l2658 0C24                         l2594 09E3  
                       l2578 098E                         l2498 177A                         l2930 1E5E  
                       l2922 1E44                         l2914 1BD8                         l2906 1BBA  
                       l2850 088B                         l2842 1354                         l2834 1344  
                       l2826 1333                         l2818 1316                         l2770 0F44  
                       l2754 0D9E                         l2746 0CAD                         l2762 0E53  
                       l3394 0769                         l3386 073D                         l3378 0717  
                       l3466 1146                         l3458 10F6                         l2692 1B56  
                       l2676 0C84                         l2668 0C6A                         l2596 09FF  
                       l2588 09A9                         l2932 1E70                         l2924 1E4D  
                       l2940 1E8E                         l2908 1BBE                         l2860 08A1  
                       l2844 1364                         l2836 134D                         l2780 1B86  
                       l2772 0F4B                         l2764 0E5A                         l3396 076F  
                       l3388 074C                         l2694 1B18                         l2686 1B34  
                       l2678 0C88                         l2598 0A2B                         l2950 1D7C  
                       l2934 1E7E                         l2926 1E51                         l2918 1E2F  
                       l2870 08C5                         l2862 08A9                         l2854 0894  
                       l2782 1B87                         l2758 0E26                         l3398 0773  
                       l2696 1B14                         l2688 1B3A                         l2952 1D7E  
                       l2944 1D30                         l2960 1182                         l2936 1E7F  
                       l2928 1E55                         l2880 08F8                         l2872 08CE  
                       l2864 08BA                         l2848 087E                         l2792 12B0  
                       l2784 1B8D                         l2776 0FD3                         l2946 1D46  
                       l2970 11F0                         l2962 118A                         l2938 1E88  
                       l2890 0913                         l2882 0902                         l2874 08E0  
                       l2866 08BC                         l2794 12C3                         l2786 1B93  
                       l2948 1D62                         l2972 11F2                         l2964 118E  
                       l2956 1150                         l2980 1B32                         l2892 091C  
                       l2876 08EE                         l2868 08C1                         l2788 1B95  
                       l2966 11B2                         l2958 1166                         l2990 0818  
                       l2878 08EF                         l2798 12CC                         l2968 11B6  
                       l2976 1B28                         l2992 082D                         l2984 0802  
                       l2888 090A                         l2978 1B30                         l2994 082E  
                       l2986 080F                         l2898 0923                         l2996 0836  
                       l2998 0838                         ?_isr 0071                         STR_1 1096  
                       u3010 1E20                         u3011 1E1F                         u3100 1C6E  
                       u3020 1E25                         u3101 1C6D                         u3021 1E24  
                       u3005 1E14                         u3030 1CAC                         u3031 1CAB  
                       u4000 1B56                         u3200 15BD                         u3120 1C80  
                       u4001 1B55                         u3201 15BC                         u3121 1C7F  
                       u4010 1B1F                         u3210 15C3                         u3050 1CBE  
                       u3130 1C8A                         u4011 1B1E                         u3211 15C2  
                       u3051 1CBD                         u3131 1C89                         u3115 1C72  
                       u3220 15C8                         u4020 1376                         u4100 0CA4  
                       u3221 15C7                         u3045 1CB0                         u4021 1375  
                       u4101 0CA3                         u3310 1682                         u3230 15E1  
                       u3070 1CCF                         u3150 1C9D                         u4110 0CAD  
                       u3311 1681                         u3231 15E0                         u3071 1CCE  
                       u3151 1C9C                         u3135 1C86                         u4111 0CAC  
                       u3320 1686                         u3240 15E5                         u3160 1589  
                       u3401 16FE                         u3321 1685                         u3305 166F  
                       u3241 15E4                         u3161 1588                         u3065 1CBF  
                       u3145 1C91                         u5010 1273                         u3410 1712  
                       u3402 16FF                         u3330 168B                         u3250 163D  
                       u3170 158F                         u3090 1CE3                         u5011 1272  
                       u3411 1713                         u3403 1704                         u3331 168A  
                       u3251 163C                         u3171 158E                         u3091 1CE2  
                       u3075 1CCB                         u4035 1393                         u5020 1279  
                       u3500 178A                         u3420 1730                         u3412 1718  
                       u3404 1705                         u3260 1648                         u3180 1594  
                       u4300 12DD                         u4060 1489                         u5100 0070  
                       u5021 1278                         u5005 1268                         u3501 1789  
                       u3421 172F                         u3413 1719                         u3405 170A  
                       u3341 169D                         u3261 1646                         u3181 1593  
                       u4301 12DC                         u3085 1CD7                         u4061 1488  
                       u4045 13ED                         u4205 0E7C                         u4125 0CCF  
                       u5101 006F                         u5030 127D                         u3510 1790  
                       u3430 1755                         u3406 170B                         u3350 16AF  
                       u3342 16A4                         u3270 1649                         u3190 15B2  
                       u4230 0F4B                         u4150 0D9E                         u5110 0092  
                       u5031 127C                         u3511 178F                         u3431 1754  
                       u3351 16AE                         u3343 16AB                         u3255 1639  
                       u3191 15B1                         u4055 1442                         u4231 0F4A  
                       u4215 0EB8                         u4151 0D9D                         u4135 0D0B  
                       u5111 0091                         u5040 1292                         u3600 17ED  
                       u3520 1797                         u3440 175A                         u3360 16B3  
                       u3280 165D                         u4320 1316                         u5200 02AD  
                       u5120 00D8                         u3601 17EC                         u3521 1796  
                       u3441 1759                         u3361 16B2                         u3281 165C  
                       u4321 1315                         u4225 0F03                         u4145 0D56  
                       u5201 02AC                         u5121 00D7                         u2810 1BEB  
                       u5050 12A2                         u3610 17FE                         u3530 179D  
                       u3370 16C2                         u3290 166C                         u4410 1364  
                       u5210 02D1                         u5130 00E6                         u2811 1BEA  
                       u5051 12A1                         u3611 17FD                         u3531 179C  
                       u3371 16C1                         u3291 166B                         u4411 1363  
                       u4315 1301                         u4075 14A6                         u5211 02D0  
                       u5131 00E5                         u3620 094D                         u5060 12A6  
                       u3540 17AF                         u3460 1770                         u4420 088B  
                       u4340 132F                         u2900 1EDD                         u5300 04B1  
                       u5220 02E8                         u5140 0137                         u3701 09F1  
                       u3621 094C                         u5061 12A5                         u5045 128D  
                       u3541 17AE                         u3461 176F                         u4421 088A  
                       u4405 1356                         u4341 132E                         u4325 1312  
                       u4085 14F3                         u2901 1EDC                         u4245 0F5E  
                       u4165 0DB1                         u5301 04B0                         u5221 02E7  
                       u5141 0136                         u5070 1C44                         u2830 1BFF  
                       u3702 09F8                         u3630 0953                         u3550 17BE  
                       u3470 1775                         u3390 16E7                         u4510 091B  
                       u4430 089F                         u4350 1333                         u4270 1B8D  
                       u4190 0E5A                         u5310 04CC                         u5230 0345  
                       u5150 016C                         u5071 1C43                         u2831 1BFE  
                       u3711 0A0D                         u3703 09FF                         u3631 0952  
                       u3471 1774                         u3455 1765                         u3391 16E6  
                       u4511 091A                         u4431 089E                         u4351 1332  
                       u4335 1322                         u4095 153F                         u4271 1B8C  
                       u4255 0F9A                         u4191 0E59                         u4175 0DED  
                       u5311 04CB                         u5231 033F                         u5151 0169  
                       u5080 1B4B                         u3712 0A14                         u3640 0958  
                       u3560 17CD                         u3480 177F                         u4520 0922  
                       u4360 133A                         u4280 1B93                         u2920 1EF1  
                       u2840 1E9E                         u5320 04DE                         u5240 0360  
                       u5160 0170                         u5081 1B47                         u2825 1BF2  
                       u3801 0B48                         u3721 0A39                         u3713 0A1B  
                       u3641 0957                         u3561 17CC                         u3481 177E  
                       u3393 16E3                         u3385 16C5                         u4521 0921  
                       u4505 090B                         u4361 1339                         u4281 1B92  
                       u2921 1EF0                         u2905 1ED9                         u2841 1E9D  
                       u4265 0FD6                         u4185 0E29                         u5321 04DD  
                       u5241 035F                         u5225 02E4                         u5161 016F  
                       u3810 0B72                         u3802 0B4F                         u3722 0A40  
                       u3650 0979                         u3570 17D6                         u3490 1785  
                       u4610 1E55                         u4450 08E0                         u4290 12C3  
                       u2930 1EF6                         u2850 1EA9                         u5330 0500  
                       u5250 0387                         u5170 019F                         u3803 0B56  
                       u3731 0A55                         u3723 0A47                         u3651 0978  
                       u3571 17D5                         u3555 17B9                         u3491 1784  
                       u4611 1E54                         u4451 08DF                         u4291 12C2  
                       u2931 1EF5                         u2915 1EE5                         u2851 1EA8  
                       u5331 04FF                         u5251 0386                         u5235 033A  
                       u5171 019E                         u3900 0BF1                         u3732 0A5C  
                       u3660 097F                         u4700 1182                         u3580 17DB  
                       u4540 0933                         u4380 134C                         u2860 1EBA  
                       u2940 1DDB                         u5500 0773                         u5420 06FE  
                       u5340 050E                         u5260 0396                         u5180 01D9  
                       u3901 0BF0                         u3821 0B7E                         u3733 0A63  
                       u3661 097E                         u4701 1181                         u3581 17DA  
                       u4605 1E46                         u4541 0932                         u4445 08C7  
                       u4381 134B                         u2861 1EB9                         u2941 1DDA  
                       u5501 0772                         u5421 06FD                         u5405 0659  
                       u5341 050D                         u5261 0395                         u5181 01D8  
                       u5094 1B4E                         u3910 0C05                         u3830 0B9A  
                       u3822 0B85                         u3670 0984                         u4710 118E  
                       u3590 17E8                         u4630 1E70                         u4550 1BBE  
                       u4470 08FE                         u4390 1353                         u2950 1DE6  
                       u5510 0781                         u5430 0716                         u5270 03B1  
                       u5190 0224                         u3911 0C04                         u3823 0B8C  
                       u3815 0B6D                         u3751 0A8B                         u3671 0983  
                       u4711 118D                         u3591 17E7                         u4631 1E6F  
                       u4551 1BBD                         u4535 0925                         u4471 08FD  
                       u4455 08DC                         u4391 1352                         u4375 133C  
                       u2951 1DE5                         u5511 0780                         u5431 0715  
                       u5415 06BF                         u5335 04FC                         u5271 03B0  
                       u5191 0223                         u3920 0C0C                         u3752 0A92  
                       u3680 099B                         u4800 0843                         u4480 0902  
                       u2880 1ECC                         u2960 1DF1                         u5520 0799  
                       u5440 071D                         u5360 0587                         u3921 0C0B  
                       u3841 0BA6                         u3761 0AB8                         u3753 0A99  
                       u3745 0A65                         u3681 099A                         u4721 119D  
                       u4801 0842                         u4625 1E57                         u4481 0901  
                       u4465 08F1                         u2881 1ECB                         u2961 1DF0  
                       u5521 0798                         u5441 071C                         u5361 0586  
                       u5265 0392                         u3930 0C12                         u3842 0BAD  
                       u3762 0ABF                         u3690 09A0                         u4730 11B6  
                       u4722 119E                         u4650 1E8E                         u4490 0909  
                       u5530 07AF                         u5450 0725                         u5370 05A8  
                       u5290 04A6                         u3931 0C11                         u3843 0BB4  
                       u3835 0B95                         u3763 0AC6                         u3691 099F  
                       u4731 11B5                         u4723 11A3                         u4651 1E8D  
                       u4635 1E6C                         u4491 0908                         u2875 1EBE  
                       u5531 07AE                         u5515 077D                         u5451 0724  
                       u5371 05A7                         u5355 051D                         u5291 04A5  
                       u3940 0C24                         u4660 1D46                         u4724 11A4  
                       u4820 0855                         u4900 1DB0                         u4580 1BD8  
                       u2980 1E03                         u5540 07C6                         u5460 0736  
                       u5380 05B7                         u3941 0C23                         u3781 0AEE  
                       u4661 1D45                         u4741 11C5                         u4725 11A9  
                       u4821 0854                         u4645 1E80                         u4901 1DAF  
                       u4581 1BD7                         u4565 1BC5                         u2981 1E02  
                       u5541 07C5                         u5525 0795                         u5461 0735  
                       u5381 05B6                         u5285 0473                         u3950 0C33  
                       u3870 0BD8                         u3782 0AF5                         u4670 1D62  
                       u4750 11F0                         u4742 11C6                         u4726 11AA  
                       u4830 085C                         u4590 1E41                         u2990 1E0D  
                       u5550 07D2                         u5470 074C                         u5390 05D2  
                       u3871 0BD7                         u3855 0BB6                         u3791 0B1B  
                       u3783 0AFC                         u3775 0AC8                         u4671 1D61  
                       u4751 11EF                         u4743 11CB                         u4831 085B  
                       u4815 0845                         u4591 1E40                         u4575 1BCC  
                       u2895 1ECD                         u2991 1E0C                         u2975 1DF5  
                       u5551 07D1                         u5471 074B                         u5391 05D1  
                       u5375 05A4                         u5295 04A2                         u3960 0C50  
                       u3792 0B22                         u4680 1D7C                         u4744 11CC  
                       u4760 1B30                         u4920 1DCD                         u5560 07F4  
                       u5480 075D                         u3961 0C4F                         u3865 0BCD  
                       u3793 0B29                         u4681 1D7B                         u4745 11D1  
                       u4761 1B2F                         u4921 1DCC                         u4905 1DAC  
                       u5561 07F1                         u5481 075C                         u5465 0732  
                       u5385 05B3                         u5570 1BB7                         u3970 0C6A  
                       u3890 0BEC                         u4930 11FC                         u4746 11D2  
                       u4690 1166                         u4850 086D                         u4770 080F  
                       u5490 0769                         u5571 1BB6                         u3971 0C69  
                       u3955 0C2E                         u3891 0BEB                         u4931 11FB  
                       u4755 11EC                         u4691 1165                         u4851 086C  
                       u4771 080E                         u4915 1DBF                         u2995 1E09  
                       u5491 0768                         u5475 0748                         u3980 0C88  
                       u4940 1200                         u4860 0872                         u4780 0826  
                       u5580 10DF                         u3981 0C87                         u3965 0C4C  
                       u3885 0BDB                         u4941 11FF                         u4685 1D78  
                       u4861 0871                         u4845 085F                         u5581 10DE  
                       u3990 1B3A                         u4950 1220                         u4790 083C  
                       u4870 1D88                         u3991 1B39                         u3975 0C66  
                       u4951 121F                         u4791 083B                         u4871 1D87  
                       u4785 0821                         u4970 1241                         u4890 1D9E  
                       u4971 1240                         u4891 1D9D                         u4965 1233  
                       u4885 1D8F                         u4990 1263                         u4991 1262  
                       u4985 1255                         _TMRA 0110                         _WPUB 0095  
                       _main 10C9                  main@sensor1 00E3                         btemp 007E  
          ??_PORT_Choose_Mux 0073                         start 000C        __size_of_ADC_GetValue 0012  
                      ??_isr 0071                ___fltol@sign1 005D              __end_of___fladd 1800  
                      ?_main 0071              __end_of___awdiv 1F00              __end_of___flneg 1B33  
                      _ADRES 001E              __end_of___awmod 1E2F              __end_of___flmul 0C9D  
            __end_of___flsub 0060              __end_of___fltol 087E              __end_of___lldiv 1E97  
            ___awdiv@divisor 0020              __end_of___llmod 1DD6              __end_of___lwdiv 1CE8  
                      i1l171 10C2                        i1l169 10BD              __end_of___lwmod 1CA2  
            ___awdiv@counter 0024                _Voltage_Value 1CE8                        _RCSTA 0018  
                      _SPBRG 0099                        _PORTD 0008                        _TRISA 0085  
                      _TRISB 0086                        _TRISC 0087                        _TRISD 0088  
                      _TXREG 0019                        _TXSTA 0098             ??_PORT_Start_ADC 0073  
            __end_of_dpowers 1096                        _scale 0C9D              __end_of_isdigit 1B97  
         __size_of_PORT_Init 0039                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_sprintf 07F9                 _ADC_GetValue 1B61  
 __end_of_PORT_Get_Value_Adc 1B18              __initialization 07F9                PORT_putchar@c 0073  
               __end_of_main 1150                       ??_main 007C               ?_Voltage_Value 0042  
 __size_of_TIMER_init_timer1 0012         __size_of__tdiv_to_l_ 00BD                       _ADCON0 001F  
                     _ADCON1 009F             ___llmod@dividend 0077                       ?_scale 0042  
           ___awdiv@dividend 0022                       _ANSELA 0185                       _ANSELB 0186  
                     _ANSELD 0188                       i1l3490 10B0                       _T1SYNC 0082  
                     i1l3492 10B6                       i1l3494 10C1                       _FVRCON 009D  
                     u560_20 10C1                       u560_21 10C0                       _OSCCON 0090  
                     u559_20 10B6                       u559_21 10B5                       _TMR1GE 047F  
                     _TMR1IE 0460                       _TMR1IF 0060                       _TMR1ON 0080  
                     _TMRAIF 006C                       _TMRCS0 0086                       _TMRCS1 0087  
           __end_of___xxtofl 12B0             __end_of__powers_ 103A                       ___flge 1150  
                     ___fleq 1D30                    ??___fladd 005E                       ___wmul 1BB8  
                  ??___awdiv 0079                    ??___flneg 0077                    ??___awmod 0077  
                  ??___flmul 0030                    ??___flsub 007C                    ??___fltol 0059  
                  ??___lldiv 007B                    ??___llmod 007B                    ??___lwdiv 007C  
                  ??___lwmod 0077            __end_of_PORT_Init 1C68                       _fround 136D  
           ___awdiv@quotient 0026              ___awmod@divisor 0073              ___awmod@counter 0077  
          ?_PORT_Init_Serial 0071                       main@Vs 00DF                    ??_isdigit 0073  
         ??_PORT_Init_Serial 0073           __size_of__Umul8_16 0027                       saved_w 007E  
                  ??_sprintf 00A8             ??_PORT_putString 0074                   ___flge@ff1 0073  
                 ___flge@ff2 0077                 ___xxtofl@arg 0022                 ___xxtofl@exp 0021  
               ___xxtofl@val 0073                   ___fleq@ff1 0073                   ___fleq@ff2 0077  
    __end_of__initialization 07FC                   ___flneg@f1 0073                   ___fltol@f1 0055  
             __pcstackCOMMON 0071                __end_of_scale 1000              ??_Voltage_Value 0046  
                 __div_to_l_ 087E              _PORT_Choose_Mux 1B4F              __div_to_l_@exp1 0025  
            __div_to_l_@cntr 0024                      ??_scale 0046              __div_to_l_@quot 0020  
               sprintf@width 00B8            ?_PORT_Select_Mux0 0071                   __pbssBANK1 00E4  
         ??_PORT_Select_Mux0 0073                __div_to_l_@f1 0073                __div_to_l_@f2 0077  
          __end_of__Umul8_16 1C04                   __pmaintext 10C9                      ?___flge 0073  
                    ?___fleq 0073                      ?___wmul 0073          ADC_GetValue@channel 0074  
                 __pintentry 0004                      _DACCON0 0113                      _DACCON1 0114  
                    ?_fround 0042                      _T1CKPS0 0084                      _T1CKPS1 0085  
                    _T1OSCEN 0083                    ?___xxtofl 0073                   __stringtab 1000  
          __end_of__npowers_ 106E              __size_of___flge 00A4              __size_of___fleq 0050  
                    ___fladd 1578                      ___awdiv 1E97                      ___flneg 1B28  
                    ___awmod 1DD6                      ___flmul 093C                      ___flsub 0010  
                    ___fltol 0802                      ___lldiv 1E2F              __size_of___wmul 0025  
                    ___llmod 1D80                   _fround$731 0051                   _fround$732 004D  
                    ___lwdiv 1CA2                      ___lwmod 1C68              __size_of_fround 020B  
    __end_of_PORT_Choose_Mux 1B61                      __ptext1 0060                      __ptext2 0C9D  
                    __ptext3 1DD6                      __ptext4 1E97                      __ptext5 1B85  
                    __ptext6 136D                      __ptext7 1C68                      __ptext8 1CA2  
                    __ptext9 12B0                  ?__div_to_l_ 0073                      _dpowers 106E  
         _PORT_Get_Value_Adc 1B14                      _isdigit 1B85                 __size_of_isr 0019  
                 ??___xxtofl 0077             ___awmod@dividend 0075                      _sprintf 0060  
                    main@tab 00C8          ?_PORT_Get_Value_Adc 0071         end_of_initialization 07FC  
    __size_of_PORT_Blink_LED 0010              ___lldiv@divisor 0073              ___lldiv@counter 0024  
                    psplit$0 9002E         ??_PORT_Get_Value_Adc 0073               __tdiv_to_l_@f1 0073  
             __tdiv_to_l_@f2 0077                ??__tdiv_to_l_ 0020                    _PORTBbits 0006  
                  _PORT_Init 1C2F                  ___fladd@grs 0069                ___xxtofl@sign 0020  
              ?_PORT_putchar 0071    __size_of_PORT_Init_Serial 002B                  ___flmul@grs 0036  
        __size_of__div_to_l_ 00BE      __size_of_PORT_Start_ADC 0008              PORT_putString@i 0075  
             __end_of___flge 11F4               __end_of___fleq 1D80               __end_of___wmul 1BDD  
                  _Fincompt1 00E4            pnum$text1_split_1 002E             ?_PORT_Choose_Mux 0071  
             __end_of_fround 1578                   ?_PORT_Init 0071               ??_PORT_putchar 0073  
        start_initialization 07F9          __end_of__tdiv_to_l_ 136D                  __end_of_isr 10C9  
            ___llmod@divisor 0073              ___llmod@counter 0020                     ??___flge 0020  
                   ??___fleq 0020    __size_of_PORT_Select_Mux0 0008                     ??___wmul 0077  
                  __Umul8_16 1BDD                     ??_fround 0046                sprintf@tmpval 00BA  
      __end_of_Voltage_Value 1D30                    ___fladd@a 005A                    ___fladd@b 0056  
                 fround@prec 0055                    ___flmul@a 002C                    ___flmul@b 0028  
                  ___flsub@a 00A0                    ___flsub@b 00A4                    ___latbits 0002  
              __pcstackBANK0 0020                __pcstackBANK1 00A0            __size_of___xxtofl 00BC  
             _PORT_Blink_LED 1B3F                  sprintf@flag 00B6                  sprintf@eexp 00BE  
                sprintf@fval 00C0                ?_ADC_GetValue 0071                  sprintf@prec 00C5  
           ___lwdiv@dividend 007A      __size_of_PORT_putString 0021                     ?___fladd 0056  
                   ?___awdiv 0020                     ?___flneg 0073                     ?___awmod 0073  
                   ?___flmul 0028                     ?___flsub 00A0                     ?___fltol 0055  
                   ?___lldiv 0073                     ?___llmod 0073                    __npowers_ 103A  
                 ?__Umul8_16 0073                     ?___lwdiv 0078                     ?___lwmod 0073  
                  __pstrings 1000                  __tdiv_to_l_ 12B0                  ??_PORT_Init 0073  
               ??__div_to_l_ 007B                     ?_isdigit 0071                    _scale$733 0050  
     __end_of_PORT_Blink_LED 1B4F             ___lwdiv@quotient 0020                     ?_sprintf 006A  
             __size_of_scale 0363             _PORT_Init_Serial 1C04               ??_ADC_GetValue 0074  
          interrupt_function 0004               ___wmul@product 0077               _PORT_Start_ADC 1B18  
       __end_of_PORT_putchar 1B3F        PORT_Choose_Mux@_value 0073           __end_of__div_to_l_ 093C  
                   _GO_nDONE 00F9                  __stringbase 1005            ___wmul@multiplier 0073  
            ?_PORT_Blink_LED 0071       __end_of_PORT_Start_ADC 1B20             _PORT_Select_Mux0 1B20  
                ??__Umul8_16 0075  __size_of_PORT_Get_Value_Adc 0004             __size_of___fladd 0288  
           __size_of___awdiv 0069             __size_of___flneg 000B             __size_of___awmod 0059  
           __size_of___flmul 0361             __size_of___flsub 0050             __size_of___fltol 007C  
           __size_of___lldiv 0068             __size_of___llmod 0056             __size_of___lwdiv 0046  
           __size_of___lwmod 003A           __end_of__stringtab 1006                  _isdigit$600 0073  
                 sprintf@val 00B2                     ___xxtofl 11F4             __size_of_isdigit 0012  
            ___lwdiv@divisor 0078              ___lwdiv@counter 0022                     __ptext10 087E  
                   __ptext11 1BB8                     __ptext20 1CE8                     __ptext12 1D80  
                   __ptext21 11F4                     __ptext13 1E2F                     __ptext30 1B3F  
                   __ptext22 093C                     __ptext14 0802                     __ptext31 1B61  
                   __ptext23 1BDD                     __ptext15 0010                     __ptext32 1B18  
                   __ptext24 1B73                     __ptext16 1578                     __ptext33 1B14  
                   __ptext25 1B97                     __ptext17 1B28                     __ptext34 1B4F  
                   __ptext26 1B33                     __ptext18 1150                     __ptext35 10B0  
                   __ptext27 1B20                     __ptext19 1D30                     __ptext28 1C2F  
                   __ptext29 1C04                     __powers_ 1006             __size_of_sprintf 0799  
            ?_PORT_Start_ADC 0071                __size_of_main 0087                    pnum$text1 0009  
             _PORT_putString 1B97         __end_of_ADC_GetValue 1B73         Voltage_Value@fSensor 004B  
                   isdigit@c 0074                     scale@scl 0054     __size_of_PORT_Choose_Mux 0012  
                   intlevel1 0000                    sprintf@ap 00B1             __tdiv_to_l_@exp1 0028  
           __tdiv_to_l_@cntr 0027                    sprintf@sp 00C4             __tdiv_to_l_@quot 0023  
      __size_of_PORT_putchar 000C             ___lwmod@dividend 0075             ___lldiv@dividend 0077  
     __end_of_PORT_putString 1BB8                    stringcode 1000     __end_of_PORT_Init_Serial 1C2F  
               ?__tdiv_to_l_ 0073         PORT_putString@chaine 0077       __Umul8_16@multiplicand 0073  
                   sprintf@c 00C7                     sprintf@f 006A          Voltage_Value@sensor 004A  
           ___lldiv@quotient 0020              ___lwmod@divisor 0073              ___lwmod@counter 0077  
                   stringdir 1000                     stringtab 1000                 _PORT_putchar 1B33  
          _TIMER_init_timer1 1B73                ___fladd@signs 0066           ?_TIMER_init_timer1 0071  
               ___fladd@aexp 0067                 ___fladd@bexp 0068              ?_PORT_putString 0071  
       __Umul8_16@multiplier 007B          ??_TIMER_init_timer1 0073       __size_of_Voltage_Value 0048  
          __Umul8_16@product 0077  
