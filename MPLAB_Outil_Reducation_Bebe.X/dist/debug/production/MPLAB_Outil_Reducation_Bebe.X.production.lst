

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue May 30 12:26:49 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F707
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	psect	text35,local,class=CODE,merge=1,delta=2
    46                           	psect	text36,local,class=CODE,merge=1,delta=2
    47                           	psect	text37,local,class=CODE,merge=1,delta=2
    48                           	psect	text38,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F707 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  0105                     	;# 
   151  0106                     	;# 
   152  0107                     	;# 
   153  0108                     	;# 
   154  0109                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0110                     	;# 
   160  0111                     	;# 
   161  0112                     	;# 
   162  0113                     	;# 
   163  0114                     	;# 
   164  0185                     	;# 
   165  0186                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0106                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0110                     	;# 
   243  0111                     	;# 
   244  0112                     	;# 
   245  0113                     	;# 
   246  0114                     	;# 
   247  0185                     	;# 
   248  0186                     	;# 
   249  0187                     	;# 
   250  0188                     	;# 
   251  0189                     	;# 
   252  018C                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0088                     	;# 
   293  0089                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  008F                     	;# 
   298  0090                     	;# 
   299  0091                     	;# 
   300  0092                     	;# 
   301  0093                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0095                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009A                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  0105                     	;# 
   317  0106                     	;# 
   318  0107                     	;# 
   319  0108                     	;# 
   320  0109                     	;# 
   321  010C                     	;# 
   322  010D                     	;# 
   323  010E                     	;# 
   324  010F                     	;# 
   325  0110                     	;# 
   326  0111                     	;# 
   327  0112                     	;# 
   328  0113                     	;# 
   329  0114                     	;# 
   330  0185                     	;# 
   331  0186                     	;# 
   332  0187                     	;# 
   333  0188                     	;# 
   334  0189                     	;# 
   335  018C                     	;# 
   336                           
   337                           	psect	strings
   338  1800                     __pstrings:
   339  1800                     stringtab:
   340  1800                     __stringtab:
   341  1800                     stringcode:	
   342                           ;	String table - string pointers are 1 byte each
   343                           
   344  1800                     stringdir:
   345  1800  3018               	movlw	high stringdir
   346  1801  008A               	movwf	10
   347  1802  0804               	movf	4,w
   348  1803  0A84               	incf	4,f
   349  1804  0782               	addwf	2,f
   350  1805                     __stringbase:
   351  1805  3400               	retlw	0
   352  1806                     __end_of__stringtab:
   353  1806                     __powers_:
   354  1806  3400               	retlw	0
   355  1807  3400               	retlw	0
   356  1808  3480               	retlw	128
   357  1809  343F               	retlw	63
   358  180A  3400               	retlw	0
   359  180B  3400               	retlw	0
   360  180C  3420               	retlw	32
   361  180D  3441               	retlw	65
   362  180E  3400               	retlw	0
   363  180F  3400               	retlw	0
   364  1810  34C8               	retlw	200
   365  1811  3442               	retlw	66
   366  1812  3400               	retlw	0
   367  1813  3400               	retlw	0
   368  1814  347A               	retlw	122
   369  1815  3444               	retlw	68
   370  1816  3400               	retlw	0
   371  1817  3440               	retlw	64
   372  1818  341C               	retlw	28
   373  1819  3446               	retlw	70
   374  181A  3400               	retlw	0
   375  181B  3450               	retlw	80
   376  181C  34C3               	retlw	195
   377  181D  3447               	retlw	71
   378  181E  3400               	retlw	0
   379  181F  3424               	retlw	36
   380  1820  3474               	retlw	116
   381  1821  3449               	retlw	73
   382  1822  3480               	retlw	128
   383  1823  3496               	retlw	150
   384  1824  3418               	retlw	24
   385  1825  344B               	retlw	75
   386  1826  3420               	retlw	32
   387  1827  34BC               	retlw	188
   388  1828  34BE               	retlw	190
   389  1829  344C               	retlw	76
   390  182A  3428               	retlw	40
   391  182B  346B               	retlw	107
   392  182C  346E               	retlw	110
   393  182D  344E               	retlw	78
   394  182E  34F9               	retlw	249
   395  182F  3402               	retlw	2
   396  1830  3415               	retlw	21
   397  1831  3450               	retlw	80
   398  1832  34EC               	retlw	236
   399  1833  3478               	retlw	120
   400  1834  34AD               	retlw	173
   401  1835  3460               	retlw	96
   402  1836  34CA               	retlw	202
   403  1837  34F2               	retlw	242
   404  1838  3449               	retlw	73
   405  1839  3471               	retlw	113
   406  183A                     __end_of__powers_:
   407  183A                     __npowers_:
   408  183A  3400               	retlw	0
   409  183B  3400               	retlw	0
   410  183C  3480               	retlw	128
   411  183D  343F               	retlw	63
   412  183E  34CD               	retlw	205
   413  183F  34CC               	retlw	204
   414  1840  34CC               	retlw	204
   415  1841  343D               	retlw	61
   416  1842  340A               	retlw	10
   417  1843  34D7               	retlw	215
   418  1844  3423               	retlw	35
   419  1845  343C               	retlw	60
   420  1846  346F               	retlw	111
   421  1847  3412               	retlw	18
   422  1848  3483               	retlw	131
   423  1849  343A               	retlw	58
   424  184A  3417               	retlw	23
   425  184B  34B7               	retlw	183
   426  184C  34D1               	retlw	209
   427  184D  3438               	retlw	56
   428  184E  34AC               	retlw	172
   429  184F  34C5               	retlw	197
   430  1850  3427               	retlw	39
   431  1851  3437               	retlw	55
   432  1852  34BD               	retlw	189
   433  1853  3437               	retlw	55
   434  1854  3486               	retlw	134
   435  1855  3435               	retlw	53
   436  1856  3495               	retlw	149
   437  1857  34BF               	retlw	191
   438  1858  34D6               	retlw	214
   439  1859  3433               	retlw	51
   440  185A  3477               	retlw	119
   441  185B  34CC               	retlw	204
   442  185C  342B               	retlw	43
   443  185D  3432               	retlw	50
   444  185E  345F               	retlw	95
   445  185F  3470               	retlw	112
   446  1860  3489               	retlw	137
   447  1861  3430               	retlw	48
   448  1862  34FF               	retlw	255
   449  1863  34E6               	retlw	230
   450  1864  34DB               	retlw	219
   451  1865  342E               	retlw	46
   452  1866  3408               	retlw	8
   453  1867  34E5               	retlw	229
   454  1868  343C               	retlw	60
   455  1869  341E               	retlw	30
   456  186A  3460               	retlw	96
   457  186B  3442               	retlw	66
   458  186C  34A2               	retlw	162
   459  186D  340D               	retlw	13
   460  186E                     __end_of__npowers_:
   461  186E                     _dpowers:
   462  186E  3401               	retlw	1
   463  186F  3400               	retlw	0
   464  1870  3400               	retlw	0
   465  1871  3400               	retlw	0
   466  1872  340A               	retlw	10
   467  1873  3400               	retlw	0
   468  1874  3400               	retlw	0
   469  1875  3400               	retlw	0
   470  1876  3464               	retlw	100
   471  1877  3400               	retlw	0
   472  1878  3400               	retlw	0
   473  1879  3400               	retlw	0
   474  187A  34E8               	retlw	232
   475  187B  3403               	retlw	3
   476  187C  3400               	retlw	0
   477  187D  3400               	retlw	0
   478  187E  3410               	retlw	16
   479  187F  3427               	retlw	39
   480  1880  3400               	retlw	0
   481  1881  3400               	retlw	0
   482  1882  34A0               	retlw	160
   483  1883  3486               	retlw	134
   484  1884  3401               	retlw	1
   485  1885  3400               	retlw	0
   486  1886  3440               	retlw	64
   487  1887  3442               	retlw	66
   488  1888  340F               	retlw	15
   489  1889  3400               	retlw	0
   490  188A  3480               	retlw	128
   491  188B  3496               	retlw	150
   492  188C  3498               	retlw	152
   493  188D  3400               	retlw	0
   494  188E  3400               	retlw	0
   495  188F  34E1               	retlw	225
   496  1890  34F5               	retlw	245
   497  1891  3405               	retlw	5
   498  1892  3400               	retlw	0
   499  1893  34CA               	retlw	202
   500  1894  349A               	retlw	154
   501  1895  343B               	retlw	59
   502  1896                     __end_of_dpowers:
   503  0007                     _PORTCbits	set	7
   504  0019                     _TXREG	set	25
   505  001E                     _ADRES	set	30
   506  0008                     _PORTD	set	8
   507  0006                     _PORTBbits	set	6
   508  001F                     _ADCON0	set	31
   509  0018                     _RCSTA	set	24
   510  006C                     _TMRAIF	set	108
   511  0060                     _TMR1IF	set	96
   512  0080                     _TMR1ON	set	128
   513  0082                     _T1SYNC	set	130
   514  0085                     _T1CKPS1	set	133
   515  0084                     _T1CKPS0	set	132
   516  0086                     _TMRCS0	set	134
   517  0087                     _TMRCS1	set	135
   518  0083                     _T1OSCEN	set	131
   519  00F9                     _GO_nDONE	set	249
   520  009D                     _FVRCON	set	157
   521  009F                     _ADCON1	set	159
   522  0088                     _TRISD	set	136
   523  0085                     _TRISA	set	133
   524  0090                     _OSCCON	set	144
   525  0086                     _TRISB	set	134
   526  0095                     _WPUB	set	149
   527  0098                     _TXSTA	set	152
   528  0099                     _SPBRG	set	153
   529  0087                     _TRISC	set	135
   530  0460                     _TMR1IE	set	1120
   531  047F                     _TMR1GE	set	1151
   532  0110                     _TMRA	set	272
   533  0114                     _DACCON1	set	276
   534  0113                     _DACCON0	set	275
   535  0185                     _ANSELA	set	389
   536  0188                     _ANSELD	set	392
   537  0186                     _ANSELB	set	390
   538  1896                     STR_1:
   539  1896  3452               	retlw	82	;'R'
   540  1897  3465               	retlw	101	;'e'
   541  1898  3473               	retlw	115	;'s'
   542  1899  3469               	retlw	105	;'i'
   543  189A  3473               	retlw	115	;'s'
   544  189B  3474               	retlw	116	;'t'
   545  189C  3461               	retlw	97	;'a'
   546  189D  346E               	retlw	110	;'n'
   547  189E  3463               	retlw	99	;'c'
   548  189F  3465               	retlw	101	;'e'
   549  18A0  3420               	retlw	32	;' '
   550  18A1  3425               	retlw	37	;'%'
   551  18A2  3432               	retlw	50	;'2'
   552  18A3  342E               	retlw	46	;'.'
   553  18A4  3432               	retlw	50	;'2'
   554  18A5  3466               	retlw	102	;'f'
   555  18A6  3420               	retlw	32	;' '
   556  18A7  344F               	retlw	79	;'O'
   557  18A8  3468               	retlw	104	;'h'
   558  18A9  346D               	retlw	109	;'m'
   559  18AA  3420               	retlw	32	;' '
   560  18AB  340A               	retlw	10
   561  18AC  3400               	retlw	0
   562                           
   563                           	psect	cinit
   564  000F                     start_initialization:	
   565                           ; #config settings
   566                           
   567  000F                     __initialization:
   568                           
   569                           ; Clear objects allocated to BANK1
   570  000F  1683               	bsf	3,5	;RP0=1, select bank1
   571  0010  1303               	bcf	3,6	;RP1=0, select bank1
   572  0011  01EB               	clrf	__pbssBANK1& (0+127)
   573  0012                     end_of_initialization:	
   574                           ;End of C runtime variable initialization code
   575                           
   576  0012                     __end_of__initialization:
   577  0012  0183               	clrf	3
   578  0013  160A  158A  2ED9   	ljmp	_main	;jump to C main() function
   579                           
   580                           	psect	bssBANK1
   581  00EB                     __pbssBANK1:
   582  00EB                     _Fincompt1:
   583  00EB                     	ds	1
   584                           
   585                           	psect	cstackBANK1
   586  00A0                     __pcstackBANK1:
   587  00A0                     ?_sprintf:
   588  00A0                     ?___fldiv:	
   589                           ; 2 bytes @ 0x0
   590                           
   591  00A0                     sprintf@f:	
   592                           ; 4 bytes @ 0x0
   593                           
   594  00A0                     ___fldiv@a:	
   595                           ; 1 bytes @ 0x0
   596                           
   597                           
   598                           ; 4 bytes @ 0x0
   599  00A0                     	ds	4
   600  00A4                     ___fldiv@b:
   601                           
   602                           ; 4 bytes @ 0x4
   603  00A4                     	ds	1
   604  00A5                     ??_sprintf:
   605                           
   606                           ; 1 bytes @ 0x5
   607  00A5                     	ds	3
   608  00A8                     ??___fldiv:
   609                           
   610                           ; 1 bytes @ 0x8
   611  00A8                     	ds	2
   612  00AA                     _sprintf$831:
   613                           
   614                           ; 4 bytes @ 0xA
   615  00AA                     	ds	3
   616  00AD                     ___fldiv@rem:
   617                           
   618                           ; 4 bytes @ 0xD
   619  00AD                     	ds	1
   620  00AE                     sprintf@ap:
   621                           
   622                           ; 1 bytes @ 0xE
   623  00AE                     	ds	1
   624  00AF                     sprintf@val:
   625                           
   626                           ; 4 bytes @ 0xF
   627  00AF                     	ds	2
   628  00B1                     ___fldiv@sign:
   629                           
   630                           ; 1 bytes @ 0x11
   631  00B1                     	ds	1
   632  00B2                     ___fldiv@new_exp:
   633                           
   634                           ; 2 bytes @ 0x12
   635  00B2                     	ds	1
   636  00B3                     sprintf@flag:
   637                           
   638                           ; 2 bytes @ 0x13
   639  00B3                     	ds	1
   640  00B4                     ___fldiv@grs:
   641                           
   642                           ; 4 bytes @ 0x14
   643  00B4                     	ds	1
   644  00B5                     sprintf@width:
   645                           
   646                           ; 2 bytes @ 0x15
   647  00B5                     	ds	2
   648  00B7                     sprintf@tmpval:
   649                           
   650                           ; 4 bytes @ 0x17
   651  00B7                     	ds	1
   652  00B8                     ___fldiv@bexp:
   653                           
   654                           ; 1 bytes @ 0x18
   655  00B8                     	ds	1
   656  00B9                     ___fldiv@aexp:
   657                           
   658                           ; 1 bytes @ 0x19
   659  00B9                     	ds	1
   660  00BA                     ?_Voltage_Value:
   661  00BA                     ?_Resistance_Value:	
   662                           ; 4 bytes @ 0x1A
   663                           
   664  00BA                     Resistance_Value@Voltage:	
   665                           ; 4 bytes @ 0x1A
   666                           
   667                           
   668                           ; 4 bytes @ 0x1A
   669  00BA                     	ds	1
   670  00BB                     sprintf@eexp:
   671                           
   672                           ; 2 bytes @ 0x1B
   673  00BB                     	ds	2
   674  00BD                     sprintf@fval:
   675                           
   676                           ; 4 bytes @ 0x1D
   677  00BD                     	ds	1
   678  00BE                     ??_Voltage_Value:
   679                           
   680                           ; 1 bytes @ 0x1E
   681  00BE                     	ds	3
   682  00C1                     sprintf@sp:
   683                           
   684                           ; 1 bytes @ 0x21
   685  00C1                     	ds	1
   686  00C2                     sprintf@prec:
   687  00C2                     Voltage_Value@result:	
   688                           ; 2 bytes @ 0x22
   689                           
   690                           
   691                           ; 4 bytes @ 0x22
   692  00C2                     	ds	2
   693  00C4                     sprintf@c:
   694                           
   695                           ; 1 bytes @ 0x24
   696  00C4                     	ds	2
   697  00C6                     Voltage_Value@fSensor:
   698                           
   699                           ; 4 bytes @ 0x26
   700  00C6                     	ds	4
   701  00CA                     Voltage_Value@sensor:
   702                           
   703                           ; 1 bytes @ 0x2A
   704  00CA                     	ds	1
   705  00CB                     main@tab:
   706                           
   707                           ; 20 bytes @ 0x2B
   708  00CB                     	ds	23
   709  00E2                     main@Rc:
   710                           
   711                           ; 4 bytes @ 0x42
   712  00E2                     	ds	4
   713  00E6                     main@Vs:
   714                           
   715                           ; 4 bytes @ 0x46
   716  00E6                     	ds	4
   717  00EA                     main@sensor1:
   718                           
   719                           ; 1 bytes @ 0x4A
   720  00EA                     	ds	1
   721                           
   722                           	psect	cstackCOMMON
   723  0070                     __pcstackCOMMON:
   724  0070                     ?_isdigit:
   725  0070                     ?_PORT_Init:	
   726                           ; 1 bit 
   727                           
   728  0070                     ?_TIMER_init_timer1:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_PORT_Select_Mux0:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_PORT_Init_Gain:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_PORT_Blink_LED:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_ADC_GetValue:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_PORT_putString:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_PORT_putchar:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_PORT_Choose_Mux:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_PORT_Start_ADC:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_PORT_Get_Value_Adc:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_main:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_PORT_Init_Serial:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_isr:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ??_isr:	
   768                           ; 1 bytes @ 0x0
   769                           
   770                           
   771                           ; 1 bytes @ 0x0
   772  0070                     	ds	2
   773  0072                     ?___fleq:
   774  0072                     ?___flge:	
   775                           ; 1 bit 
   776                           
   777  0072                     ??_PORT_Init:	
   778                           ; 1 bit 
   779                           
   780  0072                     ??_TIMER_init_timer1:	
   781                           ; 1 bytes @ 0x2
   782                           
   783  0072                     ??_PORT_Select_Mux0:	
   784                           ; 1 bytes @ 0x2
   785                           
   786  0072                     ??_PORT_Init_Gain:	
   787                           ; 1 bytes @ 0x2
   788                           
   789  0072                     ??_PORT_Blink_LED:	
   790                           ; 1 bytes @ 0x2
   791                           
   792  0072                     ??_PORT_putchar:	
   793                           ; 1 bytes @ 0x2
   794                           
   795  0072                     ??_PORT_Choose_Mux:	
   796                           ; 1 bytes @ 0x2
   797                           
   798  0072                     ??_PORT_Start_ADC:	
   799                           ; 1 bytes @ 0x2
   800                           
   801  0072                     ??_PORT_Get_Value_Adc:	
   802                           ; 1 bytes @ 0x2
   803                           
   804  0072                     ??_isdigit:	
   805                           ; 1 bytes @ 0x2
   806                           
   807  0072                     ??_PORT_Init_Serial:	
   808                           ; 1 bytes @ 0x2
   809                           
   810  0072                     ?__Umul8_16:	
   811                           ; 1 bytes @ 0x2
   812                           
   813  0072                     ?___wmul:	
   814                           ; 2 bytes @ 0x2
   815                           
   816  0072                     ?___awmod:	
   817                           ; 2 bytes @ 0x2
   818                           
   819  0072                     ?___lwmod:	
   820                           ; 2 bytes @ 0x2
   821                           
   822  0072                     ?__tdiv_to_l_:	
   823                           ; 2 bytes @ 0x2
   824                           
   825  0072                     ?__div_to_l_:	
   826                           ; 4 bytes @ 0x2
   827                           
   828  0072                     ?___lldiv:	
   829                           ; 4 bytes @ 0x2
   830                           
   831  0072                     ?___flneg:	
   832                           ; 4 bytes @ 0x2
   833                           
   834  0072                     ?___llmod:	
   835                           ; 4 bytes @ 0x2
   836                           
   837  0072                     ?___xxtofl:	
   838                           ; 4 bytes @ 0x2
   839                           
   840  0072                     PORT_Choose_Mux@_value:	
   841                           ; 4 bytes @ 0x2
   842                           
   843  0072                     PORT_putchar@c:	
   844                           ; 1 bytes @ 0x2
   845                           
   846  0072                     __Umul8_16@multiplicand:	
   847                           ; 1 bytes @ 0x2
   848                           
   849  0072                     _isdigit$697:	
   850                           ; 1 bytes @ 0x2
   851                           
   852  0072                     ___wmul@multiplier:	
   853                           ; 1 bytes @ 0x2
   854                           
   855  0072                     ___awmod@divisor:	
   856                           ; 2 bytes @ 0x2
   857                           
   858  0072                     ___lwmod@divisor:	
   859                           ; 2 bytes @ 0x2
   860                           
   861  0072                     ___lldiv@divisor:	
   862                           ; 2 bytes @ 0x2
   863                           
   864  0072                     __div_to_l_@f1:	
   865                           ; 4 bytes @ 0x2
   866                           
   867  0072                     ___fleq@ff1:	
   868                           ; 4 bytes @ 0x2
   869                           
   870  0072                     ___flge@ff1:	
   871                           ; 4 bytes @ 0x2
   872                           
   873  0072                     ___flneg@f1:	
   874                           ; 4 bytes @ 0x2
   875                           
   876  0072                     __tdiv_to_l_@f1:	
   877                           ; 4 bytes @ 0x2
   878                           
   879  0072                     ___llmod@divisor:	
   880                           ; 4 bytes @ 0x2
   881                           
   882  0072                     ___xxtofl@val:	
   883                           ; 4 bytes @ 0x2
   884                           
   885                           
   886                           ; 4 bytes @ 0x2
   887  0072                     	ds	1
   888  0073                     ??_ADC_GetValue:
   889  0073                     ??_PORT_putString:	
   890                           ; 1 bytes @ 0x3
   891                           
   892  0073                     ADC_GetValue@channel:	
   893                           ; 1 bytes @ 0x3
   894                           
   895  0073                     isdigit@c:	
   896                           ; 1 bytes @ 0x3
   897                           
   898                           
   899                           ; 1 bytes @ 0x3
   900  0073                     	ds	1
   901  0074                     ??__Umul8_16:
   902  0074                     PORT_putString@i:	
   903                           ; 1 bytes @ 0x4
   904                           
   905  0074                     ___wmul@multiplicand:	
   906                           ; 2 bytes @ 0x4
   907                           
   908  0074                     ___awmod@dividend:	
   909                           ; 2 bytes @ 0x4
   910                           
   911  0074                     ___lwmod@dividend:	
   912                           ; 2 bytes @ 0x4
   913                           
   914                           
   915                           ; 2 bytes @ 0x4
   916  0074                     	ds	2
   917  0076                     ??___wmul:
   918  0076                     ??___awmod:	
   919                           ; 1 bytes @ 0x6
   920                           
   921  0076                     ??___flneg:	
   922                           ; 1 bytes @ 0x6
   923                           
   924  0076                     ??___lwmod:	
   925                           ; 1 bytes @ 0x6
   926                           
   927  0076                     ??___xxtofl:	
   928                           ; 1 bytes @ 0x6
   929                           
   930  0076                     PORT_putString@chaine:	
   931                           ; 1 bytes @ 0x6
   932                           
   933  0076                     ___awmod@counter:	
   934                           ; 1 bytes @ 0x6
   935                           
   936  0076                     ___lwmod@counter:	
   937                           ; 1 bytes @ 0x6
   938                           
   939  0076                     ___wmul@product:	
   940                           ; 1 bytes @ 0x6
   941                           
   942  0076                     __Umul8_16@product:	
   943                           ; 2 bytes @ 0x6
   944                           
   945  0076                     ___lldiv@dividend:	
   946                           ; 2 bytes @ 0x6
   947                           
   948  0076                     __div_to_l_@f2:	
   949                           ; 4 bytes @ 0x6
   950                           
   951  0076                     ___fleq@ff2:	
   952                           ; 4 bytes @ 0x6
   953                           
   954  0076                     ___flge@ff2:	
   955                           ; 4 bytes @ 0x6
   956                           
   957  0076                     __tdiv_to_l_@f2:	
   958                           ; 4 bytes @ 0x6
   959                           
   960  0076                     ___llmod@dividend:	
   961                           ; 4 bytes @ 0x6
   962                           
   963                           
   964                           ; 4 bytes @ 0x6
   965  0076                     	ds	1
   966  0077                     ?___lwdiv:
   967  0077                     ___awmod@sign:	
   968                           ; 2 bytes @ 0x7
   969                           
   970  0077                     ___lwdiv@divisor:	
   971                           ; 1 bytes @ 0x7
   972                           
   973                           
   974                           ; 2 bytes @ 0x7
   975  0077                     	ds	1
   976  0078                     ?___awdiv:
   977  0078                     ___awdiv@divisor:	
   978                           ; 2 bytes @ 0x8
   979                           
   980  0078                     __Umul8_16@word_mpld:	
   981                           ; 2 bytes @ 0x8
   982                           
   983                           
   984                           ; 2 bytes @ 0x8
   985  0078                     	ds	1
   986  0079                     ___lwdiv@dividend:
   987                           
   988                           ; 2 bytes @ 0x9
   989  0079                     	ds	1
   990  007A                     ??__div_to_l_:
   991  007A                     ??___lldiv:	
   992                           ; 1 bytes @ 0xA
   993                           
   994  007A                     ??___llmod:	
   995                           ; 1 bytes @ 0xA
   996                           
   997  007A                     __Umul8_16@multiplier:	
   998                           ; 1 bytes @ 0xA
   999                           
  1000  007A                     ___awdiv@dividend:	
  1001                           ; 1 bytes @ 0xA
  1002                           
  1003                           
  1004                           ; 2 bytes @ 0xA
  1005  007A                     	ds	1
  1006  007B                     ??___lwdiv:
  1007  007B                     ___llmod@counter:	
  1008                           ; 1 bytes @ 0xB
  1009                           
  1010                           
  1011                           ; 1 bytes @ 0xB
  1012  007B                     	ds	1
  1013  007C                     ??_Resistance_Value:
  1014  007C                     ??_main:	
  1015                           ; 1 bytes @ 0xC
  1016                           
  1017  007C                     ??___awdiv:	
  1018                           ; 1 bytes @ 0xC
  1019                           
  1020  007C                     ??___flsub:	
  1021                           ; 1 bytes @ 0xC
  1022                           
  1023                           
  1024                           	psect	cstackBANK0
  1025  0020                     __pcstackBANK0:	
  1026                           ; 1 bytes @ 0xC
  1027                           
  1028  0020                     ??__tdiv_to_l_:
  1029  0020                     ??___fleq:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0020                     ??___flge:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0020                     ___awdiv@counter:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0020                     ___xxtofl@sign:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0020                     ___lwdiv@quotient:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0020                     ___lldiv@quotient:	
  1045                           ; 2 bytes @ 0x0
  1046                           
  1047  0020                     __div_to_l_@quot:	
  1048                           ; 4 bytes @ 0x0
  1049                           
  1050                           
  1051                           ; 4 bytes @ 0x0
  1052  0020                     	ds	1
  1053  0021                     ___awdiv@sign:
  1054  0021                     ___xxtofl@exp:	
  1055                           ; 1 bytes @ 0x1
  1056                           
  1057                           
  1058                           ; 1 bytes @ 0x1
  1059  0021                     	ds	1
  1060  0022                     ___lwdiv@counter:
  1061  0022                     ___awdiv@quotient:	
  1062                           ; 1 bytes @ 0x2
  1063                           
  1064  0022                     ___xxtofl@arg:	
  1065                           ; 2 bytes @ 0x2
  1066                           
  1067                           
  1068                           ; 4 bytes @ 0x2
  1069  0022                     	ds	1
  1070  0023                     __tdiv_to_l_@quot:
  1071                           
  1072                           ; 4 bytes @ 0x3
  1073  0023                     	ds	1
  1074  0024                     ?___flmul:
  1075  0024                     ___lldiv@counter:	
  1076                           ; 4 bytes @ 0x4
  1077                           
  1078  0024                     __div_to_l_@cntr:	
  1079                           ; 1 bytes @ 0x4
  1080                           
  1081  0024                     ___flmul@b:	
  1082                           ; 1 bytes @ 0x4
  1083                           
  1084                           
  1085                           ; 4 bytes @ 0x4
  1086  0024                     	ds	1
  1087  0025                     __div_to_l_@exp1:
  1088                           
  1089                           ; 1 bytes @ 0x5
  1090  0025                     	ds	2
  1091  0027                     __tdiv_to_l_@cntr:
  1092                           
  1093                           ; 1 bytes @ 0x7
  1094  0027                     	ds	1
  1095  0028                     __tdiv_to_l_@exp1:
  1096  0028                     ___flmul@a:	
  1097                           ; 1 bytes @ 0x8
  1098                           
  1099                           
  1100                           ; 4 bytes @ 0x8
  1101  0028                     	ds	4
  1102  002C                     ??___flmul:
  1103                           
  1104                           ; 1 bytes @ 0xC
  1105  002C                     	ds	5
  1106  0031                     ___flmul@sign:
  1107                           
  1108                           ; 1 bytes @ 0x11
  1109  0031                     	ds	1
  1110  0032                     ___flmul@grs:
  1111                           
  1112                           ; 4 bytes @ 0x12
  1113  0032                     	ds	4
  1114  0036                     ___flmul@aexp:
  1115                           
  1116                           ; 1 bytes @ 0x16
  1117  0036                     	ds	1
  1118  0037                     ___flmul@bexp:
  1119                           
  1120                           ; 1 bytes @ 0x17
  1121  0037                     	ds	1
  1122  0038                     ___flmul@prod:
  1123                           
  1124                           ; 4 bytes @ 0x18
  1125  0038                     	ds	4
  1126  003C                     ___flmul@temp:
  1127                           
  1128                           ; 2 bytes @ 0x1C
  1129  003C                     	ds	2
  1130  003E                     ?_fround:
  1131  003E                     ?_scale:	
  1132                           ; 4 bytes @ 0x1E
  1133                           
  1134                           
  1135                           ; 4 bytes @ 0x1E
  1136  003E                     	ds	4
  1137  0042                     ??_fround:
  1138  0042                     ??_scale:	
  1139                           ; 1 bytes @ 0x22
  1140                           
  1141                           
  1142                           ; 1 bytes @ 0x22
  1143  0042                     	ds	7
  1144  0049                     _fround$829:
  1145                           
  1146                           ; 4 bytes @ 0x29
  1147  0049                     	ds	3
  1148  004C                     _scale$830:
  1149                           
  1150                           ; 4 bytes @ 0x2C
  1151  004C                     	ds	1
  1152  004D                     _fround$828:
  1153                           
  1154                           ; 4 bytes @ 0x2D
  1155  004D                     	ds	3
  1156  0050                     scale@scl:
  1157                           
  1158                           ; 1 bytes @ 0x30
  1159  0050                     	ds	1
  1160  0051                     ?___fltol:
  1161  0051                     fround@prec:	
  1162                           ; 4 bytes @ 0x31
  1163                           
  1164  0051                     ___fltol@f1:	
  1165                           ; 1 bytes @ 0x31
  1166                           
  1167                           
  1168                           ; 4 bytes @ 0x31
  1169  0051                     	ds	1
  1170  0052                     ?___fladd:
  1171  0052                     ___fladd@b:	
  1172                           ; 4 bytes @ 0x32
  1173                           
  1174                           
  1175                           ; 4 bytes @ 0x32
  1176  0052                     	ds	3
  1177  0055                     ??___fltol:
  1178                           
  1179                           ; 1 bytes @ 0x35
  1180  0055                     	ds	1
  1181  0056                     ___fladd@a:
  1182                           
  1183                           ; 4 bytes @ 0x36
  1184  0056                     	ds	3
  1185  0059                     ___fltol@sign1:
  1186                           
  1187                           ; 1 bytes @ 0x39
  1188  0059                     	ds	1
  1189  005A                     ??___fladd:
  1190  005A                     ___fltol@exp1:	
  1191                           ; 1 bytes @ 0x3A
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0x3A
  1195  005A                     	ds	8
  1196  0062                     ___fladd@signs:
  1197                           
  1198                           ; 1 bytes @ 0x42
  1199  0062                     	ds	1
  1200  0063                     ___fladd@aexp:
  1201                           
  1202                           ; 1 bytes @ 0x43
  1203  0063                     	ds	1
  1204  0064                     ___fladd@bexp:
  1205                           
  1206                           ; 1 bytes @ 0x44
  1207  0064                     	ds	1
  1208  0065                     ___fladd@grs:
  1209                           
  1210                           ; 1 bytes @ 0x45
  1211  0065                     	ds	1
  1212  0066                     ?___flsub:
  1213  0066                     ___flsub@a:	
  1214                           ; 4 bytes @ 0x46
  1215                           
  1216                           
  1217                           ; 4 bytes @ 0x46
  1218  0066                     	ds	4
  1219  006A                     ___flsub@b:
  1220                           
  1221                           ; 4 bytes @ 0x4A
  1222  006A                     	ds	4
  1223                           
  1224                           	psect	maintext
  1225  1ED9                     __pmaintext:	
  1226 ;;
  1227 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1228 ;;
  1229 ;; *************** function _main *****************
  1230 ;; Defined at:
  1231 ;;		line 22 in file "main.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  tab            20   43[BANK1 ] unsigned char [20]
  1236 ;;  Vs              4   70[BANK1 ] float 
  1237 ;;  Rc              4   66[BANK1 ] float 
  1238 ;;  F               4    0        float 
  1239 ;;  sensor1         1   74[BANK1 ] unsigned char 
  1240 ;;  sensor4         1    0        unsigned char 
  1241 ;;  sensor3         1    0        unsigned char 
  1242 ;;  sensor2         1    0        unsigned char 
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : B00/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1252 ;;      Params:         0       0       0       0       0
  1253 ;;      Locals:         0       0      32       0       0
  1254 ;;      Temps:          0       0       0       0       0
  1255 ;;      Totals:         0       0      32       0       0
  1256 ;;Total ram usage:       32 bytes
  1257 ;; Hardware stack levels required when called:    5
  1258 ;; This function calls:
  1259 ;;		_ADC_GetValue
  1260 ;;		_PORT_Blink_LED
  1261 ;;		_PORT_Init
  1262 ;;		_PORT_Init_Gain
  1263 ;;		_PORT_Select_Mux0
  1264 ;;		_PORT_putString
  1265 ;;		_Resistance_Value
  1266 ;;		_TIMER_init_timer1
  1267 ;;		_Voltage_Value
  1268 ;;		_sprintf
  1269 ;; This function is called by:
  1270 ;;		Startup code after reset
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           
  1275                           ;psect for function _main
  1276  1ED9                     _main:
  1277  1ED9                     l3760:	
  1278                           ;incstack = 0
  1279                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1280                           
  1281                           
  1282                           ;main.c: 24:     unsigned char sensor1, sensor2, sensor3, sensor4;;main.c: 26:     char 
      +                          tab[20];;main.c: 28:     float Rc,Vs,F;;main.c: 30:     PORT_Init();
  1283  1ED9  160A  158A  23D6  160A  158A  	fcall	_PORT_Init
  1284                           
  1285                           ;main.c: 31:     TIMER_init_timer1();
  1286  1EDE  160A  158A  22EF  160A  158A  	fcall	_TIMER_init_timer1
  1287  1EE3                     l3762:
  1288                           
  1289                           ;main.c: 33:     PORT_Select_Mux0();
  1290  1EE3  160A  158A  229C  160A  158A  	fcall	_PORT_Select_Mux0
  1291  1EE8                     l3764:
  1292                           
  1293                           ;main.c: 34:     PORT_Init_Gain();
  1294  1EE8  160A  118A  2000  160A  158A  	fcall	_PORT_Init_Gain
  1295  1EED                     l3766:
  1296  1EED  1683               	bsf	3,5	;RP0=1, select bank1
  1297  1EEE  1303               	bcf	3,6	;RP1=0, select bank1
  1298  1EEF  086B               	movf	_Fincompt1^(0+128),w
  1299  1EF0  1D03               	btfss	3,2
  1300  1EF1  2EF3               	goto	u6161
  1301  1EF2  2EF4               	goto	u6160
  1302  1EF3                     u6161:
  1303  1EF3  2EED               	goto	l3766
  1304  1EF4                     u6160:
  1305  1EF4                     l3768:
  1306                           
  1307                           ;main.c: 39:         Fincompt1 = 0;
  1308  1EF4  01EB               	clrf	_Fincompt1^(0+128)
  1309  1EF5                     l3770:
  1310                           
  1311                           ;main.c: 40:         PORT_Blink_LED();
  1312  1EF5  160A  158A  22BB  160A  158A  	fcall	_PORT_Blink_LED
  1313  1EFA                     l3772:
  1314                           
  1315                           ;main.c: 42:         sensor1 = ADC_GetValue(0);
  1316  1EFA  3000               	movlw	0
  1317  1EFB  160A  158A  22DD  160A  158A  	fcall	_ADC_GetValue
  1318  1F00  00FF               	movwf	btemp+1
  1319  1F01  087F               	movf	btemp+1,w
  1320  1F02  1683               	bsf	3,5	;RP0=1, select bank1
  1321  1F03  1303               	bcf	3,6	;RP1=0, select bank1
  1322  1F04  00EA               	movwf	main@sensor1^(0+128)
  1323  1F05                     l3774:
  1324  1F05  3001               	movlw	1
  1325  1F06  160A  158A  22DD  160A  158A  	fcall	_ADC_GetValue
  1326  1F0B                     l3776:
  1327  1F0B  3002               	movlw	2
  1328  1F0C  160A  158A  22DD  160A  158A  	fcall	_ADC_GetValue
  1329  1F11                     l3778:
  1330  1F11  3003               	movlw	3
  1331  1F12  160A  158A  22DD  160A  158A  	fcall	_ADC_GetValue
  1332  1F17                     l3780:
  1333                           
  1334                           ;main.c: 55:         Vs = Voltage_Value(sensor1);
  1335  1F17  1683               	bsf	3,5	;RP0=1, select bank1
  1336  1F18  1303               	bcf	3,6	;RP1=0, select bank1
  1337  1F19  086A               	movf	main@sensor1^(0+128),w
  1338  1F1A  120A  158A  2003  160A  158A  	fcall	_Voltage_Value
  1339  1F1F  1683               	bsf	3,5	;RP0=1, select bank1
  1340  1F20  1303               	bcf	3,6	;RP1=0, select bank1
  1341  1F21  083D               	movf	(?_Voltage_Value+3)^(0+128),w
  1342  1F22  00E9               	movwf	(main@Vs+3)^(0+128)
  1343  1F23  083C               	movf	(?_Voltage_Value+2)^(0+128),w
  1344  1F24  00E8               	movwf	(main@Vs+2)^(0+128)
  1345  1F25  083B               	movf	(?_Voltage_Value+1)^(0+128),w
  1346  1F26  00E7               	movwf	(main@Vs+1)^(0+128)
  1347  1F27  083A               	movf	?_Voltage_Value^(0+128),w
  1348  1F28  00E6               	movwf	main@Vs^(0+128)
  1349  1F29                     l3782:
  1350                           
  1351                           ;main.c: 60:         Rc = Resistance_Value(Vs);
  1352  1F29  0869               	movf	(main@Vs+3)^(0+128),w
  1353  1F2A  00BD               	movwf	(Resistance_Value@Voltage+3)^(0+128)
  1354  1F2B  0868               	movf	(main@Vs+2)^(0+128),w
  1355  1F2C  00BC               	movwf	(Resistance_Value@Voltage+2)^(0+128)
  1356  1F2D  0867               	movf	(main@Vs+1)^(0+128),w
  1357  1F2E  00BB               	movwf	(Resistance_Value@Voltage+1)^(0+128)
  1358  1F2F  0866               	movf	main@Vs^(0+128),w
  1359  1F30  00BA               	movwf	Resistance_Value@Voltage^(0+128)
  1360  1F31  120A  118A  2791  160A  158A  	fcall	_Resistance_Value
  1361  1F36  1683               	bsf	3,5	;RP0=1, select bank1
  1362  1F37  1303               	bcf	3,6	;RP1=0, select bank1
  1363  1F38  083D               	movf	(?_Resistance_Value+3)^(0+128),w
  1364  1F39  00E5               	movwf	(main@Rc+3)^(0+128)
  1365  1F3A  083C               	movf	(?_Resistance_Value+2)^(0+128),w
  1366  1F3B  00E4               	movwf	(main@Rc+2)^(0+128)
  1367  1F3C  083B               	movf	(?_Resistance_Value+1)^(0+128),w
  1368  1F3D  00E3               	movwf	(main@Rc+1)^(0+128)
  1369  1F3E  083A               	movf	?_Resistance_Value^(0+128),w
  1370  1F3F  00E2               	movwf	main@Rc^(0+128)
  1371  1F40                     l3784:
  1372                           
  1373                           ;main.c: 62:         sprintf(tab,"Resistance %2.2f Ohm \n", Rc);
  1374  1F40  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1375  1F41  00FF               	movwf	btemp+1
  1376  1F42  087F               	movf	btemp+1,w
  1377  1F43  00A0               	movwf	sprintf@f^(0+128)
  1378  1F44  0865               	movf	(main@Rc+3)^(0+128),w
  1379  1F45  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1380  1F46  0864               	movf	(main@Rc+2)^(0+128),w
  1381  1F47  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1382  1F48  0863               	movf	(main@Rc+1)^(0+128),w
  1383  1F49  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1384  1F4A  0862               	movf	main@Rc^(0+128),w
  1385  1F4B  00A1               	movwf	(?_sprintf^(0+128)+1)
  1386  1F4C  30CB               	movlw	(low (main@tab| 0))& (0+255)
  1387  1F4D  120A  118A  2016  160A  158A  	fcall	_sprintf
  1388  1F52                     l3786:
  1389                           
  1390                           ;main.c: 63:         PORT_putString(tab);
  1391  1F52  30CB               	movlw	(low (main@tab| 0))& (0+255)
  1392  1F53  160A  158A  231A  160A  158A  	fcall	_PORT_putString
  1393  1F58  2EED               	goto	l3766
  1394  1F59  120A  118A  280C   	ljmp	start
  1395  1F5C                     __end_of_main:
  1396                           
  1397                           	psect	text1
  1398  0016                     __ptext1:	
  1399 ;; *************** function _sprintf *****************
  1400 ;; Defined at:
  1401 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  sp              1    wreg     PTR unsigned char 
  1404 ;;		 -> main@tab(20), 
  1405 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1406 ;;		 -> STR_1(23), 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  1409 ;;		 -> main@tab(20), 
  1410 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  1411 ;;  tmpval          4   23[BANK1 ] struct .
  1412 ;;  val             4   15[BANK1 ] unsigned long 
  1413 ;;  prec            2   34[BANK1 ] int 
  1414 ;;  eexp            2   27[BANK1 ] int 
  1415 ;;  width           2   21[BANK1 ] int 
  1416 ;;  flag            2   19[BANK1 ] unsigned short 
  1417 ;;  cp              2    0        PTR const unsigned char 
  1418 ;;  len             2    0        unsigned int 
  1419 ;;  c               1   36[BANK1 ] unsigned char 
  1420 ;;  ap              1   14[BANK1 ] PTR void [1]
  1421 ;;		 -> ?_sprintf(2), 
  1422 ;;  d               1    0        unsigned char 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  2    0[BANK1 ] int 
  1425 ;; Registers used:
  1426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1432 ;;      Params:         0       0       5       0       0
  1433 ;;      Locals:         0       0      27       0       0
  1434 ;;      Temps:          0       0       5       0       0
  1435 ;;      Totals:         0       0      37       0       0
  1436 ;;Total ram usage:       37 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    4
  1439 ;; This function calls:
  1440 ;;		___awdiv
  1441 ;;		___fladd
  1442 ;;		___fleq
  1443 ;;		___flge
  1444 ;;		___flmul
  1445 ;;		___flneg
  1446 ;;		___flsub
  1447 ;;		___fltol
  1448 ;;		___lldiv
  1449 ;;		___llmod
  1450 ;;		___wmul
  1451 ;;		___xxtofl
  1452 ;;		__div_to_l_
  1453 ;;		__tdiv_to_l_
  1454 ;;		_fround
  1455 ;;		_isdigit
  1456 ;;		_scale
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function _sprintf
  1464  0016                     _sprintf:
  1465                           
  1466                           ;incstack = 0
  1467                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1468                           ;sprintf@sp stored from wreg
  1469  0016  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0017  1303               	bcf	3,6	;RP1=0, select bank1
  1471  0018  00C1               	movwf	sprintf@sp^(0+128)
  1472  0019                     l3486:
  1473                           
  1474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1475  0019  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1476  001A  00FF               	movwf	btemp+1
  1477  001B  087F               	movf	btemp+1,w
  1478  001C  00AE               	movwf	sprintf@ap^(0+128)
  1479                           
  1480                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1481  001D  2F7A               	goto	l3740
  1482  001E                     l3488:
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1485  001E  3025               	movlw	37
  1486  001F  0644               	xorwf	sprintf@c^(0+128),w
  1487  0020  1903               	btfsc	3,2
  1488  0021  2823               	goto	u5681
  1489  0022  2824               	goto	u5680
  1490  0023                     u5681:
  1491  0023  2830               	goto	l3494
  1492  0024                     u5680:
  1493  0024                     l3490:
  1494                           
  1495                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1496  0024  0844               	movf	sprintf@c^(0+128),w
  1497  0025  00FF               	movwf	btemp+1
  1498  0026  0841               	movf	sprintf@sp^(0+128),w
  1499  0027  0084               	movwf	4
  1500  0028  087F               	movf	btemp+1,w
  1501  0029  1383               	bcf	3,7	;select IRP bank0
  1502  002A  0080               	movwf	0
  1503  002B                     l3492:
  1504  002B  3001               	movlw	1
  1505  002C  00FF               	movwf	btemp+1
  1506  002D  087F               	movf	btemp+1,w
  1507  002E  07C1               	addwf	sprintf@sp^(0+128),f
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 559:    continue;
  1510  002F  2F7A               	goto	l3740
  1511  0030                     l3494:
  1512                           
  1513                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1514  0030  01B5               	clrf	sprintf@width^(0+128)
  1515  0031  01B6               	clrf	(sprintf@width+1)^(0+128)
  1516                           
  1517                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1518  0032  01B3               	clrf	sprintf@flag^(0+128)
  1519  0033  01B4               	clrf	(sprintf@flag+1)^(0+128)
  1520  0034                     l3496:
  1521                           
  1522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1523  0034  0820               	movf	sprintf@f^(0+128),w
  1524  0035  0084               	movwf	4
  1525  0036  160A  158A  2000  120A  118A  	fcall	stringdir
  1526  003B  160A  118A  2005  120A  118A  	fcall	_isdigit
  1527  0040  1C03               	btfss	3,0
  1528  0041  2843               	goto	u5691
  1529  0042  2844               	goto	u5690
  1530  0043                     u5691:
  1531  0043  2884               	goto	l3508
  1532  0044                     u5690:
  1533  0044                     l3498:
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1536  0044  1683               	bsf	3,5	;RP0=1, select bank1
  1537  0045  1303               	bcf	3,6	;RP1=0, select bank1
  1538  0046  01B5               	clrf	sprintf@width^(0+128)
  1539  0047  01B6               	clrf	(sprintf@width+1)^(0+128)
  1540  0048                     l3500:
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1543  0048  300A               	movlw	10
  1544  0049  00F2               	movwf	___wmul@multiplier
  1545  004A  3000               	movlw	0
  1546  004B  00F3               	movwf	___wmul@multiplier+1
  1547  004C  1683               	bsf	3,5	;RP0=1, select bank1
  1548  004D  1303               	bcf	3,6	;RP1=0, select bank1
  1549  004E  0836               	movf	(sprintf@width+1)^(0+128),w
  1550  004F  00F5               	movwf	___wmul@multiplicand+1
  1551  0050  0835               	movf	sprintf@width^(0+128),w
  1552  0051  00F4               	movwf	___wmul@multiplicand
  1553  0052  160A  158A  235F  120A  118A  	fcall	___wmul
  1554  0057  0873               	movf	?___wmul+1,w
  1555  0058  1683               	bsf	3,5	;RP0=1, select bank1
  1556  0059  1303               	bcf	3,6	;RP1=0, select bank1
  1557  005A  00B6               	movwf	(sprintf@width+1)^(0+128)
  1558  005B  0872               	movf	?___wmul,w
  1559  005C  00B5               	movwf	sprintf@width^(0+128)
  1560  005D                     l3502:
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1563  005D  0820               	movf	sprintf@f^(0+128),w
  1564  005E  0084               	movwf	4
  1565  005F  160A  158A  2000  120A  118A  	fcall	stringdir
  1566  0064  3ED0               	addlw	208
  1567  0065  00A5               	movwf	??_sprintf^(0+128)
  1568  0066  30FF               	movlw	255
  1569  0067  1803               	skipnc
  1570  0068  3000               	movlw	0
  1571  0069  00A6               	movwf	(??_sprintf^(0+128)+1)
  1572  006A  0825               	movf	??_sprintf^(0+128),w
  1573  006B  07B5               	addwf	sprintf@width^(0+128),f
  1574  006C  1803               	skipnc
  1575  006D  0AB6               	incf	(sprintf@width+1)^(0+128),f
  1576  006E  0826               	movf	(??_sprintf+1)^(0+128),w
  1577  006F  07B6               	addwf	(sprintf@width+1)^(0+128),f
  1578  0070                     l3504:
  1579  0070  3001               	movlw	1
  1580  0071  00FF               	movwf	btemp+1
  1581  0072  087F               	movf	btemp+1,w
  1582  0073  07A0               	addwf	sprintf@f^(0+128),f
  1583  0074                     l3506:
  1584                           
  1585                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1586  0074  0820               	movf	sprintf@f^(0+128),w
  1587  0075  0084               	movwf	4
  1588  0076  160A  158A  2000  120A  118A  	fcall	stringdir
  1589  007B  160A  118A  2005  120A  118A  	fcall	_isdigit
  1590  0080  1803               	btfsc	3,0
  1591  0081  2883               	goto	u5701
  1592  0082  2884               	goto	u5700
  1593  0083                     u5701:
  1594  0083  2848               	goto	l3500
  1595  0084                     u5700:
  1596  0084                     l3508:
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1599  0084  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0085  1303               	bcf	3,6	;RP1=0, select bank1
  1601  0086  0820               	movf	sprintf@f^(0+128),w
  1602  0087  0084               	movwf	4
  1603  0088  160A  158A  2000  120A  118A  	fcall	stringdir
  1604  008D  3A2E               	xorlw	46
  1605  008E  1D03               	skipz
  1606  008F  2891               	goto	u5711
  1607  0090  2892               	goto	u5710
  1608  0091                     u5711:
  1609  0091  28D7               	goto	l3524
  1610  0092                     u5710:
  1611  0092                     l3510:
  1612                           
  1613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1614  0092  1734               	bsf	(sprintf@flag^(0+128)+1),6
  1615  0093                     l3512:
  1616                           
  1617                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 630:    f++;
  1618  0093  3001               	movlw	1
  1619  0094  00FF               	movwf	btemp+1
  1620  0095  087F               	movf	btemp+1,w
  1621  0096  07A0               	addwf	sprintf@f^(0+128),f
  1622  0097                     l3514:
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1625  0097  01C2               	clrf	sprintf@prec^(0+128)
  1626  0098  01C3               	clrf	(sprintf@prec+1)^(0+128)
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1629  0099  28C6               	goto	l3522
  1630  009A                     l3516:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1633  009A  300A               	movlw	10
  1634  009B  00F2               	movwf	___wmul@multiplier
  1635  009C  3000               	movlw	0
  1636  009D  00F3               	movwf	___wmul@multiplier+1
  1637  009E  1683               	bsf	3,5	;RP0=1, select bank1
  1638  009F  1303               	bcf	3,6	;RP1=0, select bank1
  1639  00A0  0843               	movf	(sprintf@prec+1)^(0+128),w
  1640  00A1  00F5               	movwf	___wmul@multiplicand+1
  1641  00A2  0842               	movf	sprintf@prec^(0+128),w
  1642  00A3  00F4               	movwf	___wmul@multiplicand
  1643  00A4  160A  158A  235F  120A  118A  	fcall	___wmul
  1644  00A9  0873               	movf	?___wmul+1,w
  1645  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  1646  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  1647  00AC  00C3               	movwf	(sprintf@prec+1)^(0+128)
  1648  00AD  0872               	movf	?___wmul,w
  1649  00AE  00C2               	movwf	sprintf@prec^(0+128)
  1650  00AF                     l3518:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1653  00AF  0820               	movf	sprintf@f^(0+128),w
  1654  00B0  0084               	movwf	4
  1655  00B1  160A  158A  2000  120A  118A  	fcall	stringdir
  1656  00B6  3ED0               	addlw	208
  1657  00B7  00A5               	movwf	??_sprintf^(0+128)
  1658  00B8  30FF               	movlw	255
  1659  00B9  1803               	skipnc
  1660  00BA  3000               	movlw	0
  1661  00BB  00A6               	movwf	(??_sprintf^(0+128)+1)
  1662  00BC  0825               	movf	??_sprintf^(0+128),w
  1663  00BD  07C2               	addwf	sprintf@prec^(0+128),f
  1664  00BE  1803               	skipnc
  1665  00BF  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  1666  00C0  0826               	movf	(??_sprintf+1)^(0+128),w
  1667  00C1  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  1668  00C2                     l3520:
  1669  00C2  3001               	movlw	1
  1670  00C3  00FF               	movwf	btemp+1
  1671  00C4  087F               	movf	btemp+1,w
  1672  00C5  07A0               	addwf	sprintf@f^(0+128),f
  1673  00C6                     l3522:
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1676  00C6  0820               	movf	sprintf@f^(0+128),w
  1677  00C7  0084               	movwf	4
  1678  00C8  160A  158A  2000  120A  118A  	fcall	stringdir
  1679  00CD  160A  118A  2005  120A  118A  	fcall	_isdigit
  1680  00D2  1803               	btfsc	3,0
  1681  00D3  28D5               	goto	u5721
  1682  00D4  28D6               	goto	u5720
  1683  00D5                     u5721:
  1684  00D5  289A               	goto	l3516
  1685  00D6                     u5720:
  1686  00D6  28DD               	goto	l3530
  1687  00D7                     l3524:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1690  00D7  01C2               	clrf	sprintf@prec^(0+128)
  1691  00D8  01C3               	clrf	(sprintf@prec+1)^(0+128)
  1692  00D9                     l3526:
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1695  00D9  1634               	bsf	(sprintf@flag^(0+128)+1),4
  1696  00DA  28DD               	goto	l3530
  1697  00DB                     l232:	
  1698                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1699                           
  1700                           
  1701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1702  00DB  1534               	bsf	(sprintf@flag^(0+128)+1),2
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 690:    break;
  1705  00DC  28F9               	goto	l3532
  1706  00DD                     l3530:
  1707  00DD  3001               	movlw	1
  1708  00DE  1683               	bsf	3,5	;RP0=1, select bank1
  1709  00DF  1303               	bcf	3,6	;RP1=0, select bank1
  1710  00E0  07A0               	addwf	sprintf@f^(0+128),f
  1711  00E1  30FF               	movlw	-1
  1712  00E2  0720               	addwf	sprintf@f^(0+128),w
  1713  00E3  0084               	movwf	4
  1714  00E4  160A  158A  2000  120A  118A  	fcall	stringdir
  1715  00E9  00C4               	movwf	sprintf@c^(0+128)
  1716  00EA  00A5               	movwf	??_sprintf^(0+128)
  1717  00EB  01A6               	clrf	(??_sprintf^(0+128)+1)
  1718                           
  1719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1720                           ; Switch size 1, requested type "simple"
  1721                           ; Number of cases is 1, Range of values is 0 to 0
  1722                           ; switch strategies available:
  1723                           ; Name         Instructions Cycles
  1724                           ; simple_byte            4     3 (average)
  1725                           ; direct_byte           11     8 (fixed)
  1726                           ; jumptable            260     6 (fixed)
  1727                           ;	Chosen strategy is simple_byte
  1728  00EC  0826               	movf	(??_sprintf+1)^(0+128),w
  1729  00ED  3A00               	xorlw	0	; case 0
  1730  00EE  1903               	skipnz
  1731  00EF  28F1               	goto	l3846
  1732  00F0  2F7A               	goto	l3740
  1733  00F1                     l3846:
  1734                           
  1735                           ; Switch size 1, requested type "simple"
  1736                           ; Number of cases is 2, Range of values is 0 to 102
  1737                           ; switch strategies available:
  1738                           ; Name         Instructions Cycles
  1739                           ; simple_byte            7     4 (average)
  1740                           ; jumptable            260     6 (fixed)
  1741                           ;	Chosen strategy is simple_byte
  1742  00F1  0825               	movf	??_sprintf^(0+128),w
  1743  00F2  3A00               	xorlw	0	; case 0
  1744  00F3  1903               	skipnz
  1745  00F4  2F8C               	goto	l3742
  1746  00F5  3A66               	xorlw	102	; case 102
  1747  00F6  1903               	skipnz
  1748  00F7  28DB               	goto	l232
  1749  00F8  2F7A               	goto	l3740
  1750  00F9                     l3532:
  1751                           
  1752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1753  00F9  3000               	movlw	0
  1754  00FA  0533               	andwf	sprintf@flag^(0+128),w
  1755  00FB  00A5               	movwf	??_sprintf^(0+128)
  1756  00FC  3007               	movlw	7
  1757  00FD  0534               	andwf	(sprintf@flag+1)^(0+128),w
  1758  00FE  00A6               	movwf	(??_sprintf+1)^(0+128)
  1759  00FF  0825               	movf	??_sprintf^(0+128),w
  1760  0100  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1761  0101  1903               	btfsc	3,2
  1762  0102  2904               	goto	u5731
  1763  0103  2905               	goto	u5730
  1764  0104                     u5731:
  1765  0104  2EB7               	goto	l3694
  1766  0105                     u5730:
  1767  0105                     l3534:
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1770  0105  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  1771  0106  2908               	goto	u5741
  1772  0107  2909               	goto	u5740
  1773  0108                     u5741:
  1774  0108  290D               	goto	l3538
  1775  0109                     u5740:
  1776  0109                     l3536:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1779  0109  3006               	movlw	6
  1780  010A  00C2               	movwf	sprintf@prec^(0+128)
  1781  010B  3000               	movlw	0
  1782  010C  00C3               	movwf	(sprintf@prec^(0+128)+1)
  1783  010D                     l3538:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1786  010D  082E               	movf	sprintf@ap^(0+128),w
  1787  010E  0084               	movwf	4
  1788  010F  1383               	bcf	3,7	;select IRP bank0
  1789  0110  0800               	movf	0,w
  1790  0111  00BD               	movwf	sprintf@fval^(0+128)
  1791  0112  0A84               	incf	4,f
  1792  0113  0800               	movf	0,w
  1793  0114  00BE               	movwf	(sprintf@fval+1)^(0+128)
  1794  0115  0A84               	incf	4,f
  1795  0116  0800               	movf	0,w
  1796  0117  00BF               	movwf	(sprintf@fval+2)^(0+128)
  1797  0118  0A84               	incf	4,f
  1798  0119  0800               	movf	0,w
  1799  011A  00C0               	movwf	(sprintf@fval+3)^(0+128)
  1800  011B                     l3540:
  1801  011B  3004               	movlw	4
  1802  011C  00FF               	movwf	btemp+1
  1803  011D  087F               	movf	btemp+1,w
  1804  011E  07AE               	addwf	sprintf@ap^(0+128),f
  1805  011F                     l3542:
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1808  011F  0840               	movf	(sprintf@fval+3)^(0+128),w
  1809  0120  00F5               	movwf	___flge@ff1+3
  1810  0121  083F               	movf	(sprintf@fval+2)^(0+128),w
  1811  0122  00F4               	movwf	___flge@ff1+2
  1812  0123  083E               	movf	(sprintf@fval+1)^(0+128),w
  1813  0124  00F3               	movwf	___flge@ff1+1
  1814  0125  083D               	movf	sprintf@fval^(0+128),w
  1815  0126  00F2               	movwf	___flge@ff1
  1816  0127  3000               	movlw	0
  1817  0128  00F9               	movwf	___flge@ff2+3
  1818  0129  3000               	movlw	0
  1819  012A  00F8               	movwf	___flge@ff2+2
  1820  012B  3000               	movlw	0
  1821  012C  00F7               	movwf	___flge@ff2+1
  1822  012D  3000               	movlw	0
  1823  012E  00F6               	movwf	___flge@ff2
  1824  012F  160A  158A  275C  120A  118A  	fcall	___flge
  1825  0134  1803               	btfsc	3,0
  1826  0135  2937               	goto	u5751
  1827  0136  2938               	goto	u5750
  1828  0137                     u5751:
  1829  0137  2955               	goto	l3548
  1830  0138                     u5750:
  1831  0138                     l3544:
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1834  0138  1683               	bsf	3,5	;RP0=1, select bank1
  1835  0139  1303               	bcf	3,6	;RP1=0, select bank1
  1836  013A  0840               	movf	(sprintf@fval+3)^(0+128),w
  1837  013B  00F5               	movwf	___flneg@f1+3
  1838  013C  083F               	movf	(sprintf@fval+2)^(0+128),w
  1839  013D  00F4               	movwf	___flneg@f1+2
  1840  013E  083E               	movf	(sprintf@fval+1)^(0+128),w
  1841  013F  00F3               	movwf	___flneg@f1+1
  1842  0140  083D               	movf	sprintf@fval^(0+128),w
  1843  0141  00F2               	movwf	___flneg@f1
  1844  0142  160A  158A  22A4  120A  118A  	fcall	___flneg
  1845  0147  0875               	movf	?___flneg+3,w
  1846  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1847  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1848  014A  00C0               	movwf	(sprintf@fval+3)^(0+128)
  1849  014B  0874               	movf	?___flneg+2,w
  1850  014C  00BF               	movwf	(sprintf@fval+2)^(0+128)
  1851  014D  0873               	movf	?___flneg+1,w
  1852  014E  00BE               	movwf	(sprintf@fval+1)^(0+128)
  1853  014F  0872               	movf	?___flneg,w
  1854  0150  00BD               	movwf	sprintf@fval^(0+128)
  1855  0151                     l3546:
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1858  0151  3003               	movlw	3
  1859  0152  04B3               	iorwf	sprintf@flag^(0+128),f
  1860  0153  3000               	movlw	0
  1861  0154  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  1862  0155                     l3548:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1865  0155  1683               	bsf	3,5	;RP0=1, select bank1
  1866  0156  1303               	bcf	3,6	;RP1=0, select bank1
  1867  0157  01BB               	clrf	sprintf@eexp^(0+128)
  1868  0158  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  1869  0159                     l3550:
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1872  0159  0840               	movf	(sprintf@fval+3)^(0+128),w
  1873  015A  00F5               	movwf	___fleq@ff1+3
  1874  015B  083F               	movf	(sprintf@fval+2)^(0+128),w
  1875  015C  00F4               	movwf	___fleq@ff1+2
  1876  015D  083E               	movf	(sprintf@fval+1)^(0+128),w
  1877  015E  00F3               	movwf	___fleq@ff1+1
  1878  015F  083D               	movf	sprintf@fval^(0+128),w
  1879  0160  00F2               	movwf	___fleq@ff1
  1880  0161  3000               	movlw	0
  1881  0162  00F9               	movwf	___fleq@ff2+3
  1882  0163  3000               	movlw	0
  1883  0164  00F8               	movwf	___fleq@ff2+2
  1884  0165  3000               	movlw	0
  1885  0166  00F7               	movwf	___fleq@ff2+1
  1886  0167  3000               	movlw	0
  1887  0168  00F6               	movwf	___fleq@ff2
  1888  0169  160A  158A  248F  120A  118A  	fcall	___fleq
  1889  016E  1803               	btfsc	3,0
  1890  016F  2971               	goto	u5761
  1891  0170  2972               	goto	u5760
  1892  0171                     u5761:
  1893  0171  2A62               	goto	l3576
  1894  0172                     u5760:
  1895  0172                     l3552:
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1898  0172  1003               	clrc
  1899  0173  1683               	bsf	3,5	;RP0=1, select bank1
  1900  0174  1303               	bcf	3,6	;RP1=0, select bank1
  1901  0175  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  1902  0176  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  1903  0177  3E82               	addlw	130
  1904  0178  00BB               	movwf	sprintf@eexp^(0+128)
  1905  0179  30FF               	movlw	255
  1906  017A  1803               	skipnc
  1907  017B  3000               	movlw	0
  1908  017C  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  1909  017D                     l3554:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1912  017D  30FF               	movlw	255
  1913  017E  07BB               	addwf	sprintf@eexp^(0+128),f
  1914  017F  1803               	skipnc
  1915  0180  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  1916  0181  30FF               	movlw	255
  1917  0182  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  1918  0183                     l3556:
  1919                           
  1920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1921  0183  3003               	movlw	3
  1922  0184  00F2               	movwf	___wmul@multiplier
  1923  0185  3000               	movlw	0
  1924  0186  00F3               	movwf	___wmul@multiplier+1
  1925  0187  083C               	movf	(sprintf@eexp+1)^(0+128),w
  1926  0188  00F5               	movwf	___wmul@multiplicand+1
  1927  0189  083B               	movf	sprintf@eexp^(0+128),w
  1928  018A  00F4               	movwf	___wmul@multiplicand
  1929  018B  160A  158A  235F  120A  118A  	fcall	___wmul
  1930  0190  0873               	movf	?___wmul+1,w
  1931  0191  1683               	bsf	3,5	;RP0=1, select bank1
  1932  0192  1303               	bcf	3,6	;RP1=0, select bank1
  1933  0193  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  1934  0194  0872               	movf	?___wmul,w
  1935  0195  00BB               	movwf	sprintf@eexp^(0+128)
  1936  0196                     l3558:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1939  0196  300A               	movlw	10
  1940  0197  00F8               	movwf	___awdiv@divisor
  1941  0198  3000               	movlw	0
  1942  0199  00F9               	movwf	___awdiv@divisor+1
  1943  019A  083C               	movf	(sprintf@eexp+1)^(0+128),w
  1944  019B  00FB               	movwf	___awdiv@dividend+1
  1945  019C  083B               	movf	sprintf@eexp^(0+128),w
  1946  019D  00FA               	movwf	___awdiv@dividend
  1947  019E  160A  158A  25F4  120A  118A  	fcall	___awdiv
  1948  01A3  0879               	movf	?___awdiv+1,w
  1949  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1950  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  1951  01A6  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  1952  01A7  0878               	movf	?___awdiv,w
  1953  01A8  00BB               	movwf	sprintf@eexp^(0+128)
  1954  01A9                     l3560:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1957  01A9  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  1958  01AA  29AC               	goto	u5771
  1959  01AB  29AD               	goto	u5770
  1960  01AC                     u5771:
  1961  01AC  29B3               	goto	l3564
  1962  01AD                     u5770:
  1963  01AD                     l3562:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1966  01AD  30FF               	movlw	255
  1967  01AE  07BB               	addwf	sprintf@eexp^(0+128),f
  1968  01AF  1803               	skipnc
  1969  01B0  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  1970  01B1  30FF               	movlw	255
  1971  01B2  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  1972  01B3                     l3564:
  1973                           
  1974                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1975  01B3  033B               	decf	sprintf@eexp^(0+128),w
  1976  01B4  3AFF               	xorlw	255
  1977  01B5  120A  158A  2140  120A  118A  	fcall	_scale
  1978  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1979  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1980  01BC  0841               	movf	?_scale+3,w
  1981  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  1982  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  1983  01BF  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1984  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1985  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1986  01C2  0840               	movf	?_scale+2,w
  1987  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  1988  01C4  1303               	bcf	3,6	;RP1=0, select bank1
  1989  01C5  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1990  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1991  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1992  01C8  083F               	movf	?_scale+1,w
  1993  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  1994  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  1995  01CB  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1996  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1997  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1998  01CE  083E               	movf	?_scale,w
  1999  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  2000  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  2001  01D1  00B7               	movwf	sprintf@tmpval^(0+128)
  2002  01D2                     l3566:
  2003                           
  2004                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2005  01D2  0840               	movf	(sprintf@fval+3)^(0+128),w
  2006  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2007  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2008  01D5  00A7               	movwf	___flmul@b+3
  2009  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2010  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  2011  01D8  083F               	movf	(sprintf@fval+2)^(0+128),w
  2012  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2013  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2014  01DB  00A6               	movwf	___flmul@b+2
  2015  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  2016  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  2017  01DE  083E               	movf	(sprintf@fval+1)^(0+128),w
  2018  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2019  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2020  01E1  00A5               	movwf	___flmul@b+1
  2021  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  2022  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  2023  01E4  083D               	movf	sprintf@fval^(0+128),w
  2024  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  2025  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  2026  01E7  00A4               	movwf	___flmul@b
  2027  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  2028  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  2029  01EA  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2030  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2031  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2032  01ED  00AB               	movwf	___flmul@a+3
  2033  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  2034  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  2035  01F0  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2036  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  2037  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  2038  01F3  00AA               	movwf	___flmul@a+2
  2039  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  2040  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  2041  01F6  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2042  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  2043  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  2044  01F9  00A9               	movwf	___flmul@a+1
  2045  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  2046  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  2047  01FC  0837               	movf	sprintf@tmpval^(0+128),w
  2048  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2049  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  2050  01FF  00A8               	movwf	___flmul@a
  2051  0200  120A  158A  249F  120A  118A  	fcall	___flmul
  2052  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0207  0827               	movf	?___flmul+3,w
  2055  0208  1683               	bsf	3,5	;RP0=1, select bank1
  2056  0209  1303               	bcf	3,6	;RP1=0, select bank1
  2057  020A  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2058  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2059  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2060  020D  0826               	movf	?___flmul+2,w
  2061  020E  1683               	bsf	3,5	;RP0=1, select bank1
  2062  020F  1303               	bcf	3,6	;RP1=0, select bank1
  2063  0210  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2064  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2065  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2066  0213  0825               	movf	?___flmul+1,w
  2067  0214  1683               	bsf	3,5	;RP0=1, select bank1
  2068  0215  1303               	bcf	3,6	;RP1=0, select bank1
  2069  0216  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2070  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2071  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2072  0219  0824               	movf	?___flmul,w
  2073  021A  1683               	bsf	3,5	;RP0=1, select bank1
  2074  021B  1303               	bcf	3,6	;RP1=0, select bank1
  2075  021C  00B7               	movwf	sprintf@tmpval^(0+128)
  2076  021D                     l3568:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2079  021D  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2080  021E  00F5               	movwf	___flge@ff1+3
  2081  021F  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2082  0220  00F4               	movwf	___flge@ff1+2
  2083  0221  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2084  0222  00F3               	movwf	___flge@ff1+1
  2085  0223  0837               	movf	sprintf@tmpval^(0+128),w
  2086  0224  00F2               	movwf	___flge@ff1
  2087  0225  303F               	movlw	63
  2088  0226  00F9               	movwf	___flge@ff2+3
  2089  0227  3080               	movlw	128
  2090  0228  00F8               	movwf	___flge@ff2+2
  2091  0229  3000               	movlw	0
  2092  022A  00F7               	movwf	___flge@ff2+1
  2093  022B  3000               	movlw	0
  2094  022C  00F6               	movwf	___flge@ff2
  2095  022D  160A  158A  275C  120A  118A  	fcall	___flge
  2096  0232  1803               	btfsc	3,0
  2097  0233  2A35               	goto	u5781
  2098  0234  2A36               	goto	u5780
  2099  0235                     u5781:
  2100  0235  2A3F               	goto	l3572
  2101  0236                     u5780:
  2102  0236                     l3570:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2105  0236  30FF               	movlw	255
  2106  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2107  0238  1303               	bcf	3,6	;RP1=0, select bank1
  2108  0239  07BB               	addwf	sprintf@eexp^(0+128),f
  2109  023A  1803               	skipnc
  2110  023B  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2111  023C  30FF               	movlw	255
  2112  023D  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2113  023E  2A62               	goto	l3576
  2114  023F                     l3572:
  2115  023F  1683               	bsf	3,5	;RP0=1, select bank1
  2116  0240  1303               	bcf	3,6	;RP1=0, select bank1
  2117  0241  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2118  0242  00F5               	movwf	___flge@ff1+3
  2119  0243  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2120  0244  00F4               	movwf	___flge@ff1+2
  2121  0245  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2122  0246  00F3               	movwf	___flge@ff1+1
  2123  0247  0837               	movf	sprintf@tmpval^(0+128),w
  2124  0248  00F2               	movwf	___flge@ff1
  2125  0249  3041               	movlw	65
  2126  024A  00F9               	movwf	___flge@ff2+3
  2127  024B  3020               	movlw	32
  2128  024C  00F8               	movwf	___flge@ff2+2
  2129  024D  3000               	movlw	0
  2130  024E  00F7               	movwf	___flge@ff2+1
  2131  024F  3000               	movlw	0
  2132  0250  00F6               	movwf	___flge@ff2
  2133  0251  160A  158A  275C  120A  118A  	fcall	___flge
  2134  0256  1C03               	btfss	3,0
  2135  0257  2A59               	goto	u5791
  2136  0258  2A5A               	goto	u5790
  2137  0259                     u5791:
  2138  0259  2A62               	goto	l3576
  2139  025A                     u5790:
  2140  025A                     l3574:
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2143  025A  3001               	movlw	1
  2144  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2145  025C  1303               	bcf	3,6	;RP1=0, select bank1
  2146  025D  07BB               	addwf	sprintf@eexp^(0+128),f
  2147  025E  1803               	skipnc
  2148  025F  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2149  0260  3000               	movlw	0
  2150  0261  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2151  0262                     l3576:
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2154  0262  1683               	bsf	3,5	;RP0=1, select bank1
  2155  0263  1303               	bcf	3,6	;RP1=0, select bank1
  2156  0264  0843               	movf	(sprintf@prec+1)^(0+128),w
  2157  0265  3A80               	xorlw	128
  2158  0266  00FF               	movwf	btemp+1
  2159  0267  3080               	movlw	128
  2160  0268  027F               	subwf	btemp+1,w
  2161  0269  1D03               	skipz
  2162  026A  2A6D               	goto	u5805
  2163  026B  300D               	movlw	13
  2164  026C  0242               	subwf	sprintf@prec^(0+128),w
  2165  026D                     u5805:
  2166  026D  1803               	skipnc
  2167  026E  2A70               	goto	u5801
  2168  026F  2A71               	goto	u5800
  2169  0270                     u5801:
  2170  0270  2AB8               	goto	l3580
  2171  0271                     u5800:
  2172  0271                     l3578:
  2173                           
  2174                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2175  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2176  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2177  0273  0842               	movf	sprintf@prec^(0+128),w
  2178  0274  160A  118A  236D  120A  118A  	fcall	_fround
  2179  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2180  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2181  027B  0841               	movf	?_fround+3,w
  2182  027C  00D5               	movwf	___fladd@b+3
  2183  027D  0840               	movf	?_fround+2,w
  2184  027E  00D4               	movwf	___fladd@b+2
  2185  027F  083F               	movf	?_fround+1,w
  2186  0280  00D3               	movwf	___fladd@b+1
  2187  0281  083E               	movf	?_fround,w
  2188  0282  00D2               	movwf	___fladd@b
  2189  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2190  0284  1303               	bcf	3,6	;RP1=0, select bank1
  2191  0285  0840               	movf	(sprintf@fval+3)^(0+128),w
  2192  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2194  0288  00D9               	movwf	___fladd@a+3
  2195  0289  1683               	bsf	3,5	;RP0=1, select bank1
  2196  028A  1303               	bcf	3,6	;RP1=0, select bank1
  2197  028B  083F               	movf	(sprintf@fval+2)^(0+128),w
  2198  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2199  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2200  028E  00D8               	movwf	___fladd@a+2
  2201  028F  1683               	bsf	3,5	;RP0=1, select bank1
  2202  0290  1303               	bcf	3,6	;RP1=0, select bank1
  2203  0291  083E               	movf	(sprintf@fval+1)^(0+128),w
  2204  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2206  0294  00D7               	movwf	___fladd@a+1
  2207  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2208  0296  1303               	bcf	3,6	;RP1=0, select bank1
  2209  0297  083D               	movf	sprintf@fval^(0+128),w
  2210  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2212  029A  00D6               	movwf	___fladd@a
  2213  029B  160A  118A  2578  120A  118A  	fcall	___fladd
  2214  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2215  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2216  02A2  0855               	movf	?___fladd+3,w
  2217  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2218  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2219  02A5  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2220  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2221  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2222  02A8  0854               	movf	?___fladd+2,w
  2223  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2224  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2225  02AB  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2226  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2227  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2228  02AE  0853               	movf	?___fladd+1,w
  2229  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2230  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  2231  02B1  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2232  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2233  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2234  02B4  0852               	movf	?___fladd,w
  2235  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2236  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  2237  02B7  00BD               	movwf	sprintf@fval^(0+128)
  2238  02B8                     l3580:
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2241  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2242  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2243  02BA  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2244  02BB  3A80               	xorlw	128
  2245  02BC  00FF               	movwf	btemp+1
  2246  02BD  3080               	movlw	128
  2247  02BE  027F               	subwf	btemp+1,w
  2248  02BF  1D03               	skipz
  2249  02C0  2AC3               	goto	u5815
  2250  02C1  300A               	movlw	10
  2251  02C2  023B               	subwf	sprintf@eexp^(0+128),w
  2252  02C3                     u5815:
  2253  02C3  1803               	skipnc
  2254  02C4  2AC6               	goto	u5811
  2255  02C5  2AC7               	goto	u5810
  2256  02C6                     u5811:
  2257  02C6  2B18               	goto	l3588
  2258  02C7                     u5810:
  2259  02C7                     l3582:
  2260  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2261  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2262  02C9  0840               	movf	(sprintf@fval+3)^(0+128),w
  2263  02CA  00F5               	movwf	___fleq@ff1+3
  2264  02CB  083F               	movf	(sprintf@fval+2)^(0+128),w
  2265  02CC  00F4               	movwf	___fleq@ff1+2
  2266  02CD  083E               	movf	(sprintf@fval+1)^(0+128),w
  2267  02CE  00F3               	movwf	___fleq@ff1+1
  2268  02CF  083D               	movf	sprintf@fval^(0+128),w
  2269  02D0  00F2               	movwf	___fleq@ff1
  2270  02D1  3000               	movlw	0
  2271  02D2  00F9               	movwf	___fleq@ff2+3
  2272  02D3  3000               	movlw	0
  2273  02D4  00F8               	movwf	___fleq@ff2+2
  2274  02D5  3000               	movlw	0
  2275  02D6  00F7               	movwf	___fleq@ff2+1
  2276  02D7  3000               	movlw	0
  2277  02D8  00F6               	movwf	___fleq@ff2
  2278  02D9  160A  158A  248F  120A  118A  	fcall	___fleq
  2279  02DE  1803               	btfsc	3,0
  2280  02DF  2AE1               	goto	u5821
  2281  02E0  2AE2               	goto	u5820
  2282  02E1                     u5821:
  2283  02E1  2B8A               	goto	l3602
  2284  02E2                     u5820:
  2285  02E2                     l3584:
  2286  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2287  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2288  02E4  0840               	movf	(sprintf@fval+3)^(0+128),w
  2289  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2290  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2291  02E7  00D4               	movwf	___fltol@f1+3
  2292  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  2293  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  2294  02EA  083F               	movf	(sprintf@fval+2)^(0+128),w
  2295  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  2296  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  2297  02ED  00D3               	movwf	___fltol@f1+2
  2298  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2299  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  2300  02F0  083E               	movf	(sprintf@fval+1)^(0+128),w
  2301  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2302  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2303  02F3  00D2               	movwf	___fltol@f1+1
  2304  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  2305  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  2306  02F6  083D               	movf	sprintf@fval^(0+128),w
  2307  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2308  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2309  02F9  00D1               	movwf	___fltol@f1
  2310  02FA  160A  158A  265D  120A  118A  	fcall	___fltol
  2311  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0301  0854               	movf	?___fltol+3,w
  2314  0302  0453               	iorwf	?___fltol+2,w
  2315  0303  0452               	iorwf	?___fltol+1,w
  2316  0304  0451               	iorwf	?___fltol,w
  2317  0305  1D03               	skipz
  2318  0306  2B08               	goto	u5831
  2319  0307  2B09               	goto	u5830
  2320  0308                     u5831:
  2321  0308  2B8A               	goto	l3602
  2322  0309                     u5830:
  2323  0309                     l3586:
  2324  0309  1683               	bsf	3,5	;RP0=1, select bank1
  2325  030A  1303               	bcf	3,6	;RP1=0, select bank1
  2326  030B  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2327  030C  3A80               	xorlw	128
  2328  030D  00FF               	movwf	btemp+1
  2329  030E  3080               	movlw	128
  2330  030F  027F               	subwf	btemp+1,w
  2331  0310  1D03               	skipz
  2332  0311  2B14               	goto	u5845
  2333  0312  3002               	movlw	2
  2334  0313  023B               	subwf	sprintf@eexp^(0+128),w
  2335  0314                     u5845:
  2336  0314  1C03               	skipc
  2337  0315  2B17               	goto	u5841
  2338  0316  2B18               	goto	u5840
  2339  0317                     u5841:
  2340  0317  2B8A               	goto	l3602
  2341  0318                     u5840:
  2342  0318                     l3588:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2345  0318  1683               	bsf	3,5	;RP0=1, select bank1
  2346  0319  1303               	bcf	3,6	;RP1=0, select bank1
  2347  031A  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2348  031B  00F5               	movwf	___flge@ff1+3
  2349  031C  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2350  031D  00F4               	movwf	___flge@ff1+2
  2351  031E  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2352  031F  00F3               	movwf	___flge@ff1+1
  2353  0320  0837               	movf	sprintf@tmpval^(0+128),w
  2354  0321  00F2               	movwf	___flge@ff1
  2355  0322  3040               	movlw	64
  2356  0323  00F9               	movwf	___flge@ff2+3
  2357  0324  3089               	movlw	137
  2358  0325  00F8               	movwf	___flge@ff2+2
  2359  0326  3070               	movlw	112
  2360  0327  00F7               	movwf	___flge@ff2+1
  2361  0328  305F               	movlw	95
  2362  0329  00F6               	movwf	___flge@ff2
  2363  032A  160A  158A  275C  120A  118A  	fcall	___flge
  2364  032F  1803               	btfsc	3,0
  2365  0330  2B32               	goto	u5851
  2366  0331  2B33               	goto	u5850
  2367  0332                     u5851:
  2368  0332  2B3C               	goto	l3592
  2369  0333                     u5850:
  2370  0333                     l3590:
  2371                           
  2372                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2373  0333  30F7               	movlw	247
  2374  0334  1683               	bsf	3,5	;RP0=1, select bank1
  2375  0335  1303               	bcf	3,6	;RP1=0, select bank1
  2376  0336  07BB               	addwf	sprintf@eexp^(0+128),f
  2377  0337  1803               	skipnc
  2378  0338  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2379  0339  30FF               	movlw	255
  2380  033A  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2383  033B  2B44               	goto	l3594
  2384  033C                     l3592:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2387  033C  30F8               	movlw	248
  2388  033D  1683               	bsf	3,5	;RP0=1, select bank1
  2389  033E  1303               	bcf	3,6	;RP1=0, select bank1
  2390  033F  07BB               	addwf	sprintf@eexp^(0+128),f
  2391  0340  1803               	skipnc
  2392  0341  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2393  0342  30FF               	movlw	255
  2394  0343  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2395  0344                     l3594:
  2396                           
  2397                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2398  0344  083B               	movf	sprintf@eexp^(0+128),w
  2399  0345  120A  158A  2140  120A  118A  	fcall	_scale
  2400  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2401  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2402  034C  0841               	movf	?_scale+3,w
  2403  034D  1683               	bsf	3,5	;RP0=1, select bank1
  2404  034E  1303               	bcf	3,6	;RP1=0, select bank1
  2405  034F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2406  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0351  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0352  0840               	movf	?_scale+2,w
  2409  0353  1683               	bsf	3,5	;RP0=1, select bank1
  2410  0354  1303               	bcf	3,6	;RP1=0, select bank1
  2411  0355  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2412  0356  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0357  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0358  083F               	movf	?_scale+1,w
  2415  0359  1683               	bsf	3,5	;RP0=1, select bank1
  2416  035A  1303               	bcf	3,6	;RP1=0, select bank1
  2417  035B  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2418  035C  1283               	bcf	3,5	;RP0=0, select bank0
  2419  035D  1303               	bcf	3,6	;RP1=0, select bank0
  2420  035E  083E               	movf	?_scale,w
  2421  035F  1683               	bsf	3,5	;RP0=1, select bank1
  2422  0360  1303               	bcf	3,6	;RP1=0, select bank1
  2423  0361  00B7               	movwf	sprintf@tmpval^(0+128)
  2424  0362                     l3596:
  2425  0362  0840               	movf	(sprintf@fval+3)^(0+128),w
  2426  0363  00F5               	movwf	__div_to_l_@f1+3
  2427  0364  083F               	movf	(sprintf@fval+2)^(0+128),w
  2428  0365  00F4               	movwf	__div_to_l_@f1+2
  2429  0366  083E               	movf	(sprintf@fval+1)^(0+128),w
  2430  0367  00F3               	movwf	__div_to_l_@f1+1
  2431  0368  083D               	movf	sprintf@fval^(0+128),w
  2432  0369  00F2               	movwf	__div_to_l_@f1
  2433  036A  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2434  036B  00F9               	movwf	__div_to_l_@f2+3
  2435  036C  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2436  036D  00F8               	movwf	__div_to_l_@f2+2
  2437  036E  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2438  036F  00F7               	movwf	__div_to_l_@f2+1
  2439  0370  0837               	movf	sprintf@tmpval^(0+128),w
  2440  0371  00F6               	movwf	__div_to_l_@f2
  2441  0372  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  2442  0377  0875               	movf	?__div_to_l_+3,w
  2443  0378  1683               	bsf	3,5	;RP0=1, select bank1
  2444  0379  1303               	bcf	3,6	;RP1=0, select bank1
  2445  037A  00B2               	movwf	(sprintf@val+3)^(0+128)
  2446  037B  0874               	movf	?__div_to_l_+2,w
  2447  037C  00B1               	movwf	(sprintf@val+2)^(0+128)
  2448  037D  0873               	movf	?__div_to_l_+1,w
  2449  037E  00B0               	movwf	(sprintf@val+1)^(0+128)
  2450  037F  0872               	movf	?__div_to_l_,w
  2451  0380  00AF               	movwf	sprintf@val^(0+128)
  2452  0381                     l3600:
  2453                           
  2454                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2455  0381  3000               	movlw	0
  2456  0382  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2457  0383  3000               	movlw	0
  2458  0384  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2459  0385  3000               	movlw	0
  2460  0386  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2461  0387  3000               	movlw	0
  2462  0388  00BD               	movwf	sprintf@fval^(0+128)
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2465  0389  2C0E               	goto	l3606
  2466  038A                     l3602:
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2469  038A  1683               	bsf	3,5	;RP0=1, select bank1
  2470  038B  1303               	bcf	3,6	;RP1=0, select bank1
  2471  038C  0840               	movf	(sprintf@fval+3)^(0+128),w
  2472  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2473  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2474  038F  00D4               	movwf	___fltol@f1+3
  2475  0390  1683               	bsf	3,5	;RP0=1, select bank1
  2476  0391  1303               	bcf	3,6	;RP1=0, select bank1
  2477  0392  083F               	movf	(sprintf@fval+2)^(0+128),w
  2478  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2480  0395  00D3               	movwf	___fltol@f1+2
  2481  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2482  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2483  0398  083E               	movf	(sprintf@fval+1)^(0+128),w
  2484  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2485  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2486  039B  00D2               	movwf	___fltol@f1+1
  2487  039C  1683               	bsf	3,5	;RP0=1, select bank1
  2488  039D  1303               	bcf	3,6	;RP1=0, select bank1
  2489  039E  083D               	movf	sprintf@fval^(0+128),w
  2490  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2491  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2492  03A1  00D1               	movwf	___fltol@f1
  2493  03A2  160A  158A  265D  120A  118A  	fcall	___fltol
  2494  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2495  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2496  03A9  0854               	movf	?___fltol+3,w
  2497  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  2498  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  2499  03AC  00B2               	movwf	(sprintf@val+3)^(0+128)
  2500  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2501  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2502  03AF  0853               	movf	?___fltol+2,w
  2503  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  2504  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  2505  03B2  00B1               	movwf	(sprintf@val+2)^(0+128)
  2506  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2507  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2508  03B5  0852               	movf	?___fltol+1,w
  2509  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  2510  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  2511  03B8  00B0               	movwf	(sprintf@val+1)^(0+128)
  2512  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2513  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2514  03BB  0851               	movf	?___fltol,w
  2515  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  2516  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  2517  03BE  00AF               	movwf	sprintf@val^(0+128)
  2518                           
  2519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2520  03BF  0832               	movf	(sprintf@val+3)^(0+128),w
  2521  03C0  00F5               	movwf	___xxtofl@val+3
  2522  03C1  0831               	movf	(sprintf@val+2)^(0+128),w
  2523  03C2  00F4               	movwf	___xxtofl@val+2
  2524  03C3  0830               	movf	(sprintf@val+1)^(0+128),w
  2525  03C4  00F3               	movwf	___xxtofl@val+1
  2526  03C5  082F               	movf	sprintf@val^(0+128),w
  2527  03C6  00F2               	movwf	___xxtofl@val
  2528  03C7  3000               	movlw	0
  2529  03C8  160A  118A  2017  120A  118A  	fcall	___xxtofl
  2530  03CD  0875               	movf	?___xxtofl+3,w
  2531  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  2532  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  2533  03D0  00E9               	movwf	___flsub@a+3
  2534  03D1  0874               	movf	?___xxtofl+2,w
  2535  03D2  00E8               	movwf	___flsub@a+2
  2536  03D3  0873               	movf	?___xxtofl+1,w
  2537  03D4  00E7               	movwf	___flsub@a+1
  2538  03D5  0872               	movf	?___xxtofl,w
  2539  03D6  00E6               	movwf	___flsub@a
  2540  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  2541  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  2542  03D9  0840               	movf	(sprintf@fval+3)^(0+128),w
  2543  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2544  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2545  03DC  00ED               	movwf	___flsub@b+3
  2546  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  2547  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  2548  03DF  083F               	movf	(sprintf@fval+2)^(0+128),w
  2549  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2550  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2551  03E2  00EC               	movwf	___flsub@b+2
  2552  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  2553  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  2554  03E5  083E               	movf	(sprintf@fval+1)^(0+128),w
  2555  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2556  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2557  03E8  00EB               	movwf	___flsub@b+1
  2558  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2559  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  2560  03EB  083D               	movf	sprintf@fval^(0+128),w
  2561  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2562  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2563  03EE  00EA               	movwf	___flsub@b
  2564  03EF  160A  158A  233B  120A  118A  	fcall	___flsub
  2565  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2566  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2567  03F6  0869               	movf	?___flsub+3,w
  2568  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  2569  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  2570  03F9  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2571  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2572  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2573  03FC  0868               	movf	?___flsub+2,w
  2574  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2575  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  2576  03FF  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2577  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2578  0401  1303               	bcf	3,6	;RP1=0, select bank0
  2579  0402  0867               	movf	?___flsub+1,w
  2580  0403  1683               	bsf	3,5	;RP0=1, select bank1
  2581  0404  1303               	bcf	3,6	;RP1=0, select bank1
  2582  0405  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2583  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2584  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2585  0408  0866               	movf	?___flsub,w
  2586  0409  1683               	bsf	3,5	;RP0=1, select bank1
  2587  040A  1303               	bcf	3,6	;RP1=0, select bank1
  2588  040B  00BD               	movwf	sprintf@fval^(0+128)
  2589  040C                     l3604:
  2590                           
  2591                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2592  040C  01BB               	clrf	sprintf@eexp^(0+128)
  2593  040D  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2594  040E                     l3606:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2597  040E  01C4               	clrf	sprintf@c^(0+128)
  2598  040F  0AC4               	incf	sprintf@c^(0+128),f
  2599  0410                     l3612:
  2600                           
  2601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2602  0410  0844               	movf	sprintf@c^(0+128),w
  2603  0411  00A5               	movwf	??_sprintf^(0+128)
  2604  0412  3001               	movlw	1
  2605  0413                     u5865:
  2606  0413  1003               	clrc
  2607  0414  0DA5               	rlf	??_sprintf^(0+128),f
  2608  0415  3EFF               	addlw	-1
  2609  0416  1D03               	skipz
  2610  0417  2C13               	goto	u5865
  2611  0418  1003               	clrc
  2612  0419  0D25               	rlf	??_sprintf^(0+128),w
  2613  041A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2614  041B  0084               	movwf	4
  2615  041C  160A  158A  2000  120A  118A  	fcall	stringdir
  2616  0421  00A6               	movwf	(??_sprintf+1)^(0+128)
  2617  0422  160A  158A  2000  120A  118A  	fcall	stringdir
  2618  0427  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2619  0428  160A  158A  2000  120A  118A  	fcall	stringdir
  2620  042D  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2621  042E  160A  158A  2000  120A  118A  	fcall	stringdir
  2622  0433  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2623  0434  0829               	movf	(??_sprintf+4)^(0+128),w
  2624  0435  0232               	subwf	(sprintf@val+3)^(0+128),w
  2625  0436  1D03               	skipz
  2626  0437  2C42               	goto	u5875
  2627  0438  0828               	movf	(??_sprintf+3)^(0+128),w
  2628  0439  0231               	subwf	(sprintf@val+2)^(0+128),w
  2629  043A  1D03               	skipz
  2630  043B  2C42               	goto	u5875
  2631  043C  0827               	movf	(??_sprintf+2)^(0+128),w
  2632  043D  0230               	subwf	(sprintf@val+1)^(0+128),w
  2633  043E  1D03               	skipz
  2634  043F  2C42               	goto	u5875
  2635  0440  0826               	movf	(??_sprintf+1)^(0+128),w
  2636  0441  022F               	subwf	sprintf@val^(0+128),w
  2637  0442                     u5875:
  2638  0442  1803               	skipnc
  2639  0443  2C45               	goto	u5871
  2640  0444  2C46               	goto	u5870
  2641  0445                     u5871:
  2642  0445  2C47               	goto	l3616
  2643  0446                     u5870:
  2644  0446  2C51               	goto	l3620
  2645  0447                     l3616:
  2646  0447  3001               	movlw	1
  2647  0448  00FF               	movwf	btemp+1
  2648  0449  087F               	movf	btemp+1,w
  2649  044A  07C4               	addwf	sprintf@c^(0+128),f
  2650  044B                     l3618:
  2651  044B  300A               	movlw	10
  2652  044C  0644               	xorwf	sprintf@c^(0+128),w
  2653  044D  1D03               	btfss	3,2
  2654  044E  2C50               	goto	u5881
  2655  044F  2C51               	goto	u5880
  2656  0450                     u5881:
  2657  0450  2C10               	goto	l3612
  2658  0451                     u5880:
  2659  0451                     l3620:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  2662  0451  0844               	movf	sprintf@c^(0+128),w
  2663  0452  0742               	addwf	sprintf@prec^(0+128),w
  2664  0453  00A5               	movwf	??_sprintf^(0+128)
  2665  0454  0843               	movf	(sprintf@prec+1)^(0+128),w
  2666  0455  1803               	skipnc
  2667  0456  0A43               	incf	(sprintf@prec+1)^(0+128),w
  2668  0457  00A6               	movwf	(??_sprintf^(0+128)+1)
  2669  0458  083B               	movf	sprintf@eexp^(0+128),w
  2670  0459  0725               	addwf	??_sprintf^(0+128),w
  2671  045A  00A7               	movwf	(??_sprintf+2)^(0+128)
  2672  045B  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2673  045C  1803               	skipnc
  2674  045D  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
  2675  045E  0726               	addwf	(??_sprintf+1)^(0+128),w
  2676  045F  00A8               	movwf	(??_sprintf+3)^(0+128)
  2677  0460  0827               	movf	(??_sprintf+2)^(0+128),w
  2678  0461  02B5               	subwf	sprintf@width^(0+128),f
  2679  0462  0828               	movf	(??_sprintf+3)^(0+128),w
  2680  0463  1C03               	skipc
  2681  0464  03B6               	decf	(sprintf@width+1)^(0+128),f
  2682  0465  02B6               	subwf	(sprintf@width+1)^(0+128),f
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1169:     if(
  2685  0466  0842               	movf	sprintf@prec^(0+128),w
  2686  0467  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  2687  0468  1903               	btfsc	3,2
  2688  0469  2C6B               	goto	u5891
  2689  046A  2C6C               	goto	u5890
  2690  046B                     u5891:
  2691  046B  2C72               	goto	l3624
  2692  046C                     u5890:
  2693  046C                     l3622:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  2696  046C  30FF               	movlw	255
  2697  046D  07B5               	addwf	sprintf@width^(0+128),f
  2698  046E  1803               	skipnc
  2699  046F  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2700  0470  30FF               	movlw	255
  2701  0471  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2702  0472                     l3624:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  2705  0472  3003               	movlw	3
  2706  0473  0533               	andwf	sprintf@flag^(0+128),w
  2707  0474  00A5               	movwf	??_sprintf^(0+128)
  2708  0475  3000               	movlw	0
  2709  0476  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2710  0477  00A6               	movwf	(??_sprintf+1)^(0+128)
  2711  0478  0825               	movf	??_sprintf^(0+128),w
  2712  0479  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2713  047A  1903               	btfsc	3,2
  2714  047B  2C7D               	goto	u5901
  2715  047C  2C7E               	goto	u5900
  2716  047D                     u5901:
  2717  047D  2C93               	goto	l3634
  2718  047E                     u5900:
  2719  047E                     l3626:
  2720                           
  2721                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  2722  047E  30FF               	movlw	255
  2723  047F  07B5               	addwf	sprintf@width^(0+128),f
  2724  0480  1803               	skipnc
  2725  0481  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2726  0482  30FF               	movlw	255
  2727  0483  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2728  0484  2C93               	goto	l3634
  2729  0485                     l3628:
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  2732  0485  3020               	movlw	32
  2733  0486  00FF               	movwf	btemp+1
  2734  0487  1683               	bsf	3,5	;RP0=1, select bank1
  2735  0488  1303               	bcf	3,6	;RP1=0, select bank1
  2736  0489  0841               	movf	sprintf@sp^(0+128),w
  2737  048A  0084               	movwf	4
  2738  048B  087F               	movf	btemp+1,w
  2739  048C  1383               	bcf	3,7	;select IRP bank0
  2740  048D  0080               	movwf	0
  2741  048E                     l3630:
  2742  048E  3001               	movlw	1
  2743  048F  00FF               	movwf	btemp+1
  2744  0490  087F               	movf	btemp+1,w
  2745  0491  07C1               	addwf	sprintf@sp^(0+128),f
  2746  0492  2C7E               	goto	l3626
  2747  0493                     l3634:
  2748                           
  2749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  2750  0493  0836               	movf	(sprintf@width+1)^(0+128),w
  2751  0494  3A80               	xorlw	128
  2752  0495  00FF               	movwf	btemp+1
  2753  0496  3080               	movlw	128
  2754  0497  027F               	subwf	btemp+1,w
  2755  0498  1D03               	skipz
  2756  0499  2C9C               	goto	u5915
  2757  049A  3001               	movlw	1
  2758  049B  0235               	subwf	sprintf@width^(0+128),w
  2759  049C                     u5915:
  2760  049C  1803               	skipnc
  2761  049D  2C9F               	goto	u5911
  2762  049E  2CA0               	goto	u5910
  2763  049F                     u5911:
  2764  049F  2C85               	goto	l3628
  2765  04A0                     u5910:
  2766  04A0                     l3636:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  2769  04A0  3003               	movlw	3
  2770  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  2771  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  2772  04A3  0533               	andwf	sprintf@flag^(0+128),w
  2773  04A4  00A5               	movwf	??_sprintf^(0+128)
  2774  04A5  3000               	movlw	0
  2775  04A6  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2776  04A7  00A6               	movwf	(??_sprintf+1)^(0+128)
  2777  04A8  0825               	movf	??_sprintf^(0+128),w
  2778  04A9  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2779  04AA  1903               	btfsc	3,2
  2780  04AB  2CAD               	goto	u5921
  2781  04AC  2CAE               	goto	u5920
  2782  04AD                     u5921:
  2783  04AD  2D20               	goto	l3648
  2784  04AE                     u5920:
  2785  04AE                     l3638:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2788  04AE  302D               	movlw	45
  2789  04AF  00FF               	movwf	btemp+1
  2790  04B0  0841               	movf	sprintf@sp^(0+128),w
  2791  04B1  0084               	movwf	4
  2792  04B2  087F               	movf	btemp+1,w
  2793  04B3  1383               	bcf	3,7	;select IRP bank0
  2794  04B4  0080               	movwf	0
  2795  04B5                     l3640:
  2796  04B5  3001               	movlw	1
  2797  04B6  00FF               	movwf	btemp+1
  2798  04B7  087F               	movf	btemp+1,w
  2799  04B8  07C1               	addwf	sprintf@sp^(0+128),f
  2800  04B9  2D20               	goto	l3648
  2801  04BA                     l3642:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2804  04BA  0844               	movf	sprintf@c^(0+128),w
  2805  04BB  00A5               	movwf	??_sprintf^(0+128)
  2806  04BC  3001               	movlw	1
  2807  04BD                     u5935:
  2808  04BD  1003               	clrc
  2809  04BE  0DA5               	rlf	??_sprintf^(0+128),f
  2810  04BF  3EFF               	addlw	-1
  2811  04C0  1D03               	skipz
  2812  04C1  2CBD               	goto	u5935
  2813  04C2  1003               	clrc
  2814  04C3  0D25               	rlf	??_sprintf^(0+128),w
  2815  04C4  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2816  04C5  0084               	movwf	4
  2817  04C6  160A  158A  2000  120A  118A  	fcall	stringdir
  2818  04CB  00F2               	movwf	___lldiv@divisor
  2819  04CC  160A  158A  2000  120A  118A  	fcall	stringdir
  2820  04D1  00F3               	movwf	___lldiv@divisor+1
  2821  04D2  160A  158A  2000  120A  118A  	fcall	stringdir
  2822  04D7  00F4               	movwf	___lldiv@divisor+2
  2823  04D8  160A  158A  2000  120A  118A  	fcall	stringdir
  2824  04DD  00F5               	movwf	___lldiv@divisor+3
  2825  04DE  0832               	movf	(sprintf@val+3)^(0+128),w
  2826  04DF  00F9               	movwf	___lldiv@dividend+3
  2827  04E0  0831               	movf	(sprintf@val+2)^(0+128),w
  2828  04E1  00F8               	movwf	___lldiv@dividend+2
  2829  04E2  0830               	movf	(sprintf@val+1)^(0+128),w
  2830  04E3  00F7               	movwf	___lldiv@dividend+1
  2831  04E4  082F               	movf	sprintf@val^(0+128),w
  2832  04E5  00F6               	movwf	___lldiv@dividend
  2833  04E6  160A  158A  258C  120A  118A  	fcall	___lldiv
  2834  04EB  0875               	movf	?___lldiv+3,w
  2835  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  2836  04ED  1303               	bcf	3,6	;RP1=0, select bank1
  2837  04EE  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2838  04EF  0874               	movf	?___lldiv+2,w
  2839  04F0  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2840  04F1  0873               	movf	?___lldiv+1,w
  2841  04F2  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2842  04F3  0872               	movf	?___lldiv,w
  2843  04F4  00B7               	movwf	sprintf@tmpval^(0+128)
  2844  04F5                     l3644:
  2845                           
  2846                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2847  04F5  3000               	movlw	0
  2848  04F6  00F5               	movwf	___llmod@divisor+3
  2849  04F7  3000               	movlw	0
  2850  04F8  00F4               	movwf	___llmod@divisor+2
  2851  04F9  3000               	movlw	0
  2852  04FA  00F3               	movwf	___llmod@divisor+1
  2853  04FB  300A               	movlw	10
  2854  04FC  00F2               	movwf	___llmod@divisor
  2855  04FD  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2856  04FE  00F9               	movwf	___llmod@dividend+3
  2857  04FF  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2858  0500  00F8               	movwf	___llmod@dividend+2
  2859  0501  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2860  0502  00F7               	movwf	___llmod@dividend+1
  2861  0503  0837               	movf	sprintf@tmpval^(0+128),w
  2862  0504  00F6               	movwf	___llmod@dividend
  2863  0505  160A  158A  24DF  120A  118A  	fcall	___llmod
  2864  050A  0875               	movf	?___llmod+3,w
  2865  050B  1683               	bsf	3,5	;RP0=1, select bank1
  2866  050C  1303               	bcf	3,6	;RP1=0, select bank1
  2867  050D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2868  050E  0874               	movf	?___llmod+2,w
  2869  050F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2870  0510  0873               	movf	?___llmod+1,w
  2871  0511  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2872  0512  0872               	movf	?___llmod,w
  2873  0513  00B7               	movwf	sprintf@tmpval^(0+128)
  2874  0514                     l3646:
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2877  0514  0837               	movf	sprintf@tmpval^(0+128),w
  2878  0515  3E30               	addlw	48
  2879  0516  00FF               	movwf	btemp+1
  2880  0517  0841               	movf	sprintf@sp^(0+128),w
  2881  0518  0084               	movwf	4
  2882  0519  087F               	movf	btemp+1,w
  2883  051A  1383               	bcf	3,7	;select IRP bank0
  2884  051B  0080               	movwf	0
  2885  051C  3001               	movlw	1
  2886  051D  00FF               	movwf	btemp+1
  2887  051E  087F               	movf	btemp+1,w
  2888  051F  07C1               	addwf	sprintf@sp^(0+128),f
  2889  0520                     l3648:
  2890                           
  2891                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2892  0520  3001               	movlw	1
  2893  0521  02C4               	subwf	sprintf@c^(0+128),f
  2894  0522  0A44               	incf	sprintf@c^(0+128),w
  2895  0523  1D03               	btfss	3,2
  2896  0524  2D26               	goto	u5941
  2897  0525  2D27               	goto	u5940
  2898  0526                     u5941:
  2899  0526  2CBA               	goto	l3642
  2900  0527                     u5940:
  2901  0527  2D3B               	goto	l3656
  2902  0528                     l3650:
  2903                           
  2904                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2905  0528  3030               	movlw	48
  2906  0529  00FF               	movwf	btemp+1
  2907  052A  1683               	bsf	3,5	;RP0=1, select bank1
  2908  052B  1303               	bcf	3,6	;RP1=0, select bank1
  2909  052C  0841               	movf	sprintf@sp^(0+128),w
  2910  052D  0084               	movwf	4
  2911  052E  087F               	movf	btemp+1,w
  2912  052F  1383               	bcf	3,7	;select IRP bank0
  2913  0530  0080               	movwf	0
  2914  0531                     l3652:
  2915  0531  3001               	movlw	1
  2916  0532  00FF               	movwf	btemp+1
  2917  0533  087F               	movf	btemp+1,w
  2918  0534  07C1               	addwf	sprintf@sp^(0+128),f
  2919  0535                     l3654:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2922  0535  30FF               	movlw	255
  2923  0536  07BB               	addwf	sprintf@eexp^(0+128),f
  2924  0537  1803               	skipnc
  2925  0538  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2926  0539  30FF               	movlw	255
  2927  053A  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2928  053B                     l3656:
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2931  053B  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2932  053C  3A80               	xorlw	128
  2933  053D  00FF               	movwf	btemp+1
  2934  053E  3080               	movlw	128
  2935  053F  027F               	subwf	btemp+1,w
  2936  0540  1D03               	skipz
  2937  0541  2D44               	goto	u5955
  2938  0542  3001               	movlw	1
  2939  0543  023B               	subwf	sprintf@eexp^(0+128),w
  2940  0544                     u5955:
  2941  0544  1803               	skipnc
  2942  0545  2D47               	goto	u5951
  2943  0546  2D48               	goto	u5950
  2944  0547                     u5951:
  2945  0547  2D28               	goto	l3650
  2946  0548                     u5950:
  2947  0548                     l3658:
  2948                           
  2949                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2950  0548  1683               	bsf	3,5	;RP0=1, select bank1
  2951  0549  1303               	bcf	3,6	;RP1=0, select bank1
  2952  054A  0843               	movf	(sprintf@prec+1)^(0+128),w
  2953  054B  3A80               	xorlw	128
  2954  054C  00FF               	movwf	btemp+1
  2955  054D  3080               	movlw	128
  2956  054E  027F               	subwf	btemp+1,w
  2957  054F  1D03               	skipz
  2958  0550  2D53               	goto	u5965
  2959  0551  3009               	movlw	9
  2960  0552  0242               	subwf	sprintf@prec^(0+128),w
  2961  0553                     u5965:
  2962  0553  1C03               	skipc
  2963  0554  2D56               	goto	u5961
  2964  0555  2D57               	goto	u5960
  2965  0556                     u5961:
  2966  0556  2D5E               	goto	l3662
  2967  0557                     u5960:
  2968  0557                     l3660:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  2971  0557  3008               	movlw	8
  2972  0558  00FF               	movwf	btemp+1
  2973  0559  087F               	movf	btemp+1,w
  2974  055A  1683               	bsf	3,5	;RP0=1, select bank1
  2975  055B  1303               	bcf	3,6	;RP1=0, select bank1
  2976  055C  00C4               	movwf	sprintf@c^(0+128)
  2977  055D  2D64               	goto	l3664
  2978  055E                     l3662:
  2979                           
  2980                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  2981  055E  1683               	bsf	3,5	;RP0=1, select bank1
  2982  055F  1303               	bcf	3,6	;RP1=0, select bank1
  2983  0560  0842               	movf	sprintf@prec^(0+128),w
  2984  0561  00FF               	movwf	btemp+1
  2985  0562  087F               	movf	btemp+1,w
  2986  0563  00C4               	movwf	sprintf@c^(0+128)
  2987  0564                     l3664:
  2988                           
  2989                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  2990  0564  0844               	movf	sprintf@c^(0+128),w
  2991  0565  00A5               	movwf	??_sprintf^(0+128)
  2992  0566  01A6               	clrf	(??_sprintf^(0+128)+1)
  2993  0567  0825               	movf	??_sprintf^(0+128),w
  2994  0568  02C2               	subwf	sprintf@prec^(0+128),f
  2995  0569  0826               	movf	(??_sprintf+1)^(0+128),w
  2996  056A  1C03               	skipc
  2997  056B  03C3               	decf	(sprintf@prec+1)^(0+128),f
  2998  056C  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  2999  056D                     l3666:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3002  056D  0844               	movf	sprintf@c^(0+128),w
  3003  056E  1903               	btfsc	3,2
  3004  056F  2D71               	goto	u5971
  3005  0570  2D72               	goto	u5970
  3006  0571                     u5971:
  3007  0571  2D7D               	goto	l3672
  3008  0572                     u5970:
  3009  0572                     l3668:
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3012  0572  302E               	movlw	46
  3013  0573  00FF               	movwf	btemp+1
  3014  0574  0841               	movf	sprintf@sp^(0+128),w
  3015  0575  0084               	movwf	4
  3016  0576  087F               	movf	btemp+1,w
  3017  0577  1383               	bcf	3,7	;select IRP bank0
  3018  0578  0080               	movwf	0
  3019  0579                     l3670:
  3020  0579  3001               	movlw	1
  3021  057A  00FF               	movwf	btemp+1
  3022  057B  087F               	movf	btemp+1,w
  3023  057C  07C1               	addwf	sprintf@sp^(0+128),f
  3024  057D                     l3672:
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3027  057D  0844               	movf	sprintf@c^(0+128),w
  3028  057E  120A  158A  2140  120A  118A  	fcall	_scale
  3029  0583  1283               	bcf	3,5	;RP0=0, select bank0
  3030  0584  1303               	bcf	3,6	;RP1=0, select bank0
  3031  0585  0841               	movf	?_scale+3,w
  3032  0586  1683               	bsf	3,5	;RP0=1, select bank1
  3033  0587  1303               	bcf	3,6	;RP1=0, select bank1
  3034  0588  00AD               	movwf	(_sprintf$831+3)^(0+128)
  3035  0589  1283               	bcf	3,5	;RP0=0, select bank0
  3036  058A  1303               	bcf	3,6	;RP1=0, select bank0
  3037  058B  0840               	movf	?_scale+2,w
  3038  058C  1683               	bsf	3,5	;RP0=1, select bank1
  3039  058D  1303               	bcf	3,6	;RP1=0, select bank1
  3040  058E  00AC               	movwf	(_sprintf$831+2)^(0+128)
  3041  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3042  0590  1303               	bcf	3,6	;RP1=0, select bank0
  3043  0591  083F               	movf	?_scale+1,w
  3044  0592  1683               	bsf	3,5	;RP0=1, select bank1
  3045  0593  1303               	bcf	3,6	;RP1=0, select bank1
  3046  0594  00AB               	movwf	(_sprintf$831+1)^(0+128)
  3047  0595  1283               	bcf	3,5	;RP0=0, select bank0
  3048  0596  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0597  083E               	movf	?_scale,w
  3050  0598  1683               	bsf	3,5	;RP0=1, select bank1
  3051  0599  1303               	bcf	3,6	;RP1=0, select bank1
  3052  059A  00AA               	movwf	_sprintf$831^(0+128)
  3053  059B                     l3674:
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3056  059B  082D               	movf	(_sprintf$831+3)^(0+128),w
  3057  059C  1283               	bcf	3,5	;RP0=0, select bank0
  3058  059D  1303               	bcf	3,6	;RP1=0, select bank0
  3059  059E  00AB               	movwf	___flmul@a+3
  3060  059F  1683               	bsf	3,5	;RP0=1, select bank1
  3061  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  3062  05A1  082C               	movf	(_sprintf$831+2)^(0+128),w
  3063  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3064  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  3065  05A4  00AA               	movwf	___flmul@a+2
  3066  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  3067  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  3068  05A7  082B               	movf	(_sprintf$831+1)^(0+128),w
  3069  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  3070  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  3071  05AA  00A9               	movwf	___flmul@a+1
  3072  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  3073  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  3074  05AD  082A               	movf	_sprintf$831^(0+128),w
  3075  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  3076  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  3077  05B0  00A8               	movwf	___flmul@a
  3078  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  3079  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  3080  05B3  0840               	movf	(sprintf@fval+3)^(0+128),w
  3081  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  3082  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  3083  05B6  00A7               	movwf	___flmul@b+3
  3084  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  3085  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  3086  05B9  083F               	movf	(sprintf@fval+2)^(0+128),w
  3087  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  3088  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  3089  05BC  00A6               	movwf	___flmul@b+2
  3090  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  3091  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  3092  05BF  083E               	movf	(sprintf@fval+1)^(0+128),w
  3093  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  3094  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  3095  05C2  00A5               	movwf	___flmul@b+1
  3096  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  3097  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  3098  05C5  083D               	movf	sprintf@fval^(0+128),w
  3099  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  3100  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  3101  05C8  00A4               	movwf	___flmul@b
  3102  05C9  120A  158A  249F  120A  118A  	fcall	___flmul
  3103  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3104  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3105  05D0  0827               	movf	?___flmul+3,w
  3106  05D1  00D4               	movwf	___fltol@f1+3
  3107  05D2  0826               	movf	?___flmul+2,w
  3108  05D3  00D3               	movwf	___fltol@f1+2
  3109  05D4  0825               	movf	?___flmul+1,w
  3110  05D5  00D2               	movwf	___fltol@f1+1
  3111  05D6  0824               	movf	?___flmul,w
  3112  05D7  00D1               	movwf	___fltol@f1
  3113  05D8  160A  158A  265D  120A  118A  	fcall	___fltol
  3114  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3115  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3116  05DF  0854               	movf	?___fltol+3,w
  3117  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  3118  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  3119  05E2  00B2               	movwf	(sprintf@val+3)^(0+128)
  3120  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3121  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3122  05E5  0853               	movf	?___fltol+2,w
  3123  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  3124  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  3125  05E8  00B1               	movwf	(sprintf@val+2)^(0+128)
  3126  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  3127  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  3128  05EB  0852               	movf	?___fltol+1,w
  3129  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  3130  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  3131  05EE  00B0               	movwf	(sprintf@val+1)^(0+128)
  3132  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3133  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3134  05F1  0851               	movf	?___fltol,w
  3135  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  3136  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  3137  05F4  00AF               	movwf	sprintf@val^(0+128)
  3138                           
  3139                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3140  05F5  2E97               	goto	l3684
  3141  05F6                     l3676:
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3144  05F6  0844               	movf	sprintf@c^(0+128),w
  3145  05F7  00A5               	movwf	??_sprintf^(0+128)
  3146  05F8  3001               	movlw	1
  3147  05F9                     u5985:
  3148  05F9  1003               	clrc
  3149  05FA  0DA5               	rlf	??_sprintf^(0+128),f
  3150  05FB  3EFF               	addlw	-1
  3151  05FC  1D03               	skipz
  3152  05FD  2DF9               	goto	u5985
  3153  05FE  1003               	clrc
  3154  05FF  0D25               	rlf	??_sprintf^(0+128),w
  3155  0600  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3156  0601  0084               	movwf	4
  3157  0602  160A  158A  2000  120A  118A  	fcall	stringdir
  3158  0607  00F2               	movwf	___lldiv@divisor
  3159  0608  160A  158A  2000  120A  118A  	fcall	stringdir
  3160  060D  00F3               	movwf	___lldiv@divisor+1
  3161  060E  160A  158A  2000  120A  118A  	fcall	stringdir
  3162  0613  00F4               	movwf	___lldiv@divisor+2
  3163  0614  160A  158A  2000  120A  118A  	fcall	stringdir
  3164  0619  00F5               	movwf	___lldiv@divisor+3
  3165  061A  0832               	movf	(sprintf@val+3)^(0+128),w
  3166  061B  00F9               	movwf	___lldiv@dividend+3
  3167  061C  0831               	movf	(sprintf@val+2)^(0+128),w
  3168  061D  00F8               	movwf	___lldiv@dividend+2
  3169  061E  0830               	movf	(sprintf@val+1)^(0+128),w
  3170  061F  00F7               	movwf	___lldiv@dividend+1
  3171  0620  082F               	movf	sprintf@val^(0+128),w
  3172  0621  00F6               	movwf	___lldiv@dividend
  3173  0622  160A  158A  258C  120A  118A  	fcall	___lldiv
  3174  0627  0875               	movf	?___lldiv+3,w
  3175  0628  1683               	bsf	3,5	;RP0=1, select bank1
  3176  0629  1303               	bcf	3,6	;RP1=0, select bank1
  3177  062A  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3178  062B  0874               	movf	?___lldiv+2,w
  3179  062C  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3180  062D  0873               	movf	?___lldiv+1,w
  3181  062E  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3182  062F  0872               	movf	?___lldiv,w
  3183  0630  00B7               	movwf	sprintf@tmpval^(0+128)
  3184  0631                     l3678:
  3185                           
  3186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3187  0631  3000               	movlw	0
  3188  0632  00F5               	movwf	___llmod@divisor+3
  3189  0633  3000               	movlw	0
  3190  0634  00F4               	movwf	___llmod@divisor+2
  3191  0635  3000               	movlw	0
  3192  0636  00F3               	movwf	___llmod@divisor+1
  3193  0637  300A               	movlw	10
  3194  0638  00F2               	movwf	___llmod@divisor
  3195  0639  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3196  063A  00F9               	movwf	___llmod@dividend+3
  3197  063B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3198  063C  00F8               	movwf	___llmod@dividend+2
  3199  063D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3200  063E  00F7               	movwf	___llmod@dividend+1
  3201  063F  0837               	movf	sprintf@tmpval^(0+128),w
  3202  0640  00F6               	movwf	___llmod@dividend
  3203  0641  160A  158A  24DF  120A  118A  	fcall	___llmod
  3204  0646  0875               	movf	?___llmod+3,w
  3205  0647  1683               	bsf	3,5	;RP0=1, select bank1
  3206  0648  1303               	bcf	3,6	;RP1=0, select bank1
  3207  0649  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3208  064A  0874               	movf	?___llmod+2,w
  3209  064B  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3210  064C  0873               	movf	?___llmod+1,w
  3211  064D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3212  064E  0872               	movf	?___llmod,w
  3213  064F  00B7               	movwf	sprintf@tmpval^(0+128)
  3214  0650                     l3680:
  3215                           
  3216                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3217  0650  0837               	movf	sprintf@tmpval^(0+128),w
  3218  0651  3E30               	addlw	48
  3219  0652  00FF               	movwf	btemp+1
  3220  0653  0841               	movf	sprintf@sp^(0+128),w
  3221  0654  0084               	movwf	4
  3222  0655  087F               	movf	btemp+1,w
  3223  0656  1383               	bcf	3,7	;select IRP bank0
  3224  0657  0080               	movwf	0
  3225  0658  3001               	movlw	1
  3226  0659  00FF               	movwf	btemp+1
  3227  065A  087F               	movf	btemp+1,w
  3228  065B  07C1               	addwf	sprintf@sp^(0+128),f
  3229  065C                     l3682:
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3232  065C  0844               	movf	sprintf@c^(0+128),w
  3233  065D  00A5               	movwf	??_sprintf^(0+128)
  3234  065E  3001               	movlw	1
  3235  065F                     u5995:
  3236  065F  1003               	clrc
  3237  0660  0DA5               	rlf	??_sprintf^(0+128),f
  3238  0661  3EFF               	addlw	-1
  3239  0662  1D03               	skipz
  3240  0663  2E5F               	goto	u5995
  3241  0664  1003               	clrc
  3242  0665  0D25               	rlf	??_sprintf^(0+128),w
  3243  0666  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3244  0667  0084               	movwf	4
  3245  0668  160A  158A  2000  120A  118A  	fcall	stringdir
  3246  066D  00F2               	movwf	___llmod@divisor
  3247  066E  160A  158A  2000  120A  118A  	fcall	stringdir
  3248  0673  00F3               	movwf	___llmod@divisor+1
  3249  0674  160A  158A  2000  120A  118A  	fcall	stringdir
  3250  0679  00F4               	movwf	___llmod@divisor+2
  3251  067A  160A  158A  2000  120A  118A  	fcall	stringdir
  3252  067F  00F5               	movwf	___llmod@divisor+3
  3253  0680  0832               	movf	(sprintf@val+3)^(0+128),w
  3254  0681  00F9               	movwf	___llmod@dividend+3
  3255  0682  0831               	movf	(sprintf@val+2)^(0+128),w
  3256  0683  00F8               	movwf	___llmod@dividend+2
  3257  0684  0830               	movf	(sprintf@val+1)^(0+128),w
  3258  0685  00F7               	movwf	___llmod@dividend+1
  3259  0686  082F               	movf	sprintf@val^(0+128),w
  3260  0687  00F6               	movwf	___llmod@dividend
  3261  0688  160A  158A  24DF  120A  118A  	fcall	___llmod
  3262  068D  0875               	movf	?___llmod+3,w
  3263  068E  1683               	bsf	3,5	;RP0=1, select bank1
  3264  068F  1303               	bcf	3,6	;RP1=0, select bank1
  3265  0690  00B2               	movwf	(sprintf@val+3)^(0+128)
  3266  0691  0874               	movf	?___llmod+2,w
  3267  0692  00B1               	movwf	(sprintf@val+2)^(0+128)
  3268  0693  0873               	movf	?___llmod+1,w
  3269  0694  00B0               	movwf	(sprintf@val+1)^(0+128)
  3270  0695  0872               	movf	?___llmod,w
  3271  0696  00AF               	movwf	sprintf@val^(0+128)
  3272  0697                     l3684:
  3273                           
  3274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3275  0697  3001               	movlw	1
  3276  0698  02C4               	subwf	sprintf@c^(0+128),f
  3277  0699  0A44               	incf	sprintf@c^(0+128),w
  3278  069A  1D03               	btfss	3,2
  3279  069B  2E9D               	goto	u6001
  3280  069C  2E9E               	goto	u6000
  3281  069D                     u6001:
  3282  069D  2DF6               	goto	l3676
  3283  069E                     u6000:
  3284  069E  2EB0               	goto	l3692
  3285  069F                     l3686:
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3288  069F  3030               	movlw	48
  3289  06A0  00FF               	movwf	btemp+1
  3290  06A1  0841               	movf	sprintf@sp^(0+128),w
  3291  06A2  0084               	movwf	4
  3292  06A3  087F               	movf	btemp+1,w
  3293  06A4  1383               	bcf	3,7	;select IRP bank0
  3294  06A5  0080               	movwf	0
  3295  06A6                     l3688:
  3296  06A6  3001               	movlw	1
  3297  06A7  00FF               	movwf	btemp+1
  3298  06A8  087F               	movf	btemp+1,w
  3299  06A9  07C1               	addwf	sprintf@sp^(0+128),f
  3300  06AA                     l3690:
  3301                           
  3302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3303  06AA  30FF               	movlw	255
  3304  06AB  07C2               	addwf	sprintf@prec^(0+128),f
  3305  06AC  1803               	skipnc
  3306  06AD  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3307  06AE  30FF               	movlw	255
  3308  06AF  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3309  06B0                     l3692:
  3310                           
  3311                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3312  06B0  0842               	movf	sprintf@prec^(0+128),w
  3313  06B1  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3314  06B2  1D03               	btfss	3,2
  3315  06B3  2EB5               	goto	u6011
  3316  06B4  2EB6               	goto	u6010
  3317  06B5                     u6011:
  3318  06B5  2E9F               	goto	l3686
  3319  06B6                     u6010:
  3320  06B6  2F7A               	goto	l3740
  3321  06B7                     l3694:
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3324  06B7  0842               	movf	sprintf@prec^(0+128),w
  3325  06B8  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3326  06B9  1D03               	btfss	3,2
  3327  06BA  2EBC               	goto	u6021
  3328  06BB  2EBD               	goto	u6020
  3329  06BC                     u6021:
  3330  06BC  2ECB               	goto	l278
  3331  06BD                     u6020:
  3332  06BD                     l3696:
  3333  06BD  0832               	movf	(sprintf@val+3)^(0+128),w
  3334  06BE  0431               	iorwf	(sprintf@val+2)^(0+128),w
  3335  06BF  0430               	iorwf	(sprintf@val+1)^(0+128),w
  3336  06C0  042F               	iorwf	sprintf@val^(0+128),w
  3337  06C1  1D03               	skipz
  3338  06C2  2EC4               	goto	u6031
  3339  06C3  2EC5               	goto	u6030
  3340  06C4                     u6031:
  3341  06C4  2ECB               	goto	l278
  3342  06C5                     u6030:
  3343  06C5                     l3698:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3346  06C5  3001               	movlw	1
  3347  06C6  07C2               	addwf	sprintf@prec^(0+128),f
  3348  06C7  1803               	skipnc
  3349  06C8  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3350  06C9  3000               	movlw	0
  3351  06CA  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3352  06CB                     l278:
  3353                           
  3354                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3355  06CB  0843               	movf	(sprintf@prec+1)^(0+128),w
  3356  06CC  3A80               	xorlw	128
  3357  06CD  3C80               	sublw	128
  3358  06CE  1D03               	skipz
  3359  06CF  2ED2               	goto	u6045
  3360  06D0  0842               	movf	sprintf@prec^(0+128),w
  3361  06D1  0244               	subwf	sprintf@c^(0+128),w
  3362  06D2                     u6045:
  3363  06D2  1803               	skipnc
  3364  06D3  2ED5               	goto	u6041
  3365  06D4  2ED6               	goto	u6040
  3366  06D5                     u6041:
  3367  06D5  2EDD               	goto	l3702
  3368  06D6                     u6040:
  3369  06D6                     l3700:
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3372  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  3373  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  3374  06D8  0842               	movf	sprintf@prec^(0+128),w
  3375  06D9  00FF               	movwf	btemp+1
  3376  06DA  087F               	movf	btemp+1,w
  3377  06DB  00C4               	movwf	sprintf@c^(0+128)
  3378  06DC  2EF5               	goto	l3706
  3379  06DD                     l3702:
  3380  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  3381  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  3382  06DF  0843               	movf	(sprintf@prec+1)^(0+128),w
  3383  06E0  3A80               	xorlw	128
  3384  06E1  00A5               	movwf	??_sprintf^(0+128)
  3385  06E2  3080               	movlw	128
  3386  06E3  0225               	subwf	??_sprintf^(0+128),w
  3387  06E4  1D03               	skipz
  3388  06E5  2EE8               	goto	u6055
  3389  06E6  0844               	movf	sprintf@c^(0+128),w
  3390  06E7  0242               	subwf	sprintf@prec^(0+128),w
  3391  06E8                     u6055:
  3392  06E8  1803               	skipnc
  3393  06E9  2EEB               	goto	u6051
  3394  06EA  2EEC               	goto	u6050
  3395  06EB                     u6051:
  3396  06EB  2EF5               	goto	l3706
  3397  06EC                     u6050:
  3398  06EC                     l3704:
  3399                           
  3400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3401  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  3402  06ED  1303               	bcf	3,6	;RP1=0, select bank1
  3403  06EE  0844               	movf	sprintf@c^(0+128),w
  3404  06EF  00A5               	movwf	??_sprintf^(0+128)
  3405  06F0  01A6               	clrf	(??_sprintf^(0+128)+1)
  3406  06F1  0825               	movf	??_sprintf^(0+128),w
  3407  06F2  00C2               	movwf	sprintf@prec^(0+128)
  3408  06F3  0826               	movf	(??_sprintf+1)^(0+128),w
  3409  06F4  00C3               	movwf	(sprintf@prec+1)^(0+128)
  3410  06F5                     l3706:
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3413  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3414  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  3415  06F7  0835               	movf	sprintf@width^(0+128),w
  3416  06F8  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3417  06F9  1903               	btfsc	3,2
  3418  06FA  2EFC               	goto	u6061
  3419  06FB  2EFD               	goto	u6060
  3420  06FC                     u6061:
  3421  06FC  2F0F               	goto	l3712
  3422  06FD                     u6060:
  3423  06FD                     l3708:
  3424  06FD  3003               	movlw	3
  3425  06FE  0533               	andwf	sprintf@flag^(0+128),w
  3426  06FF  00A5               	movwf	??_sprintf^(0+128)
  3427  0700  3000               	movlw	0
  3428  0701  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3429  0702  00A6               	movwf	(??_sprintf+1)^(0+128)
  3430  0703  0825               	movf	??_sprintf^(0+128),w
  3431  0704  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3432  0705  1903               	btfsc	3,2
  3433  0706  2F08               	goto	u6071
  3434  0707  2F09               	goto	u6070
  3435  0708                     u6071:
  3436  0708  2F0F               	goto	l3712
  3437  0709                     u6070:
  3438  0709                     l3710:
  3439                           
  3440                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3441  0709  30FF               	movlw	255
  3442  070A  07B5               	addwf	sprintf@width^(0+128),f
  3443  070B  1803               	skipnc
  3444  070C  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3445  070D  30FF               	movlw	255
  3446  070E  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3447  070F                     l3712:
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  3450  070F  1F34               	btfss	(sprintf@flag+1)^(0+128),6
  3451  0710  2F12               	goto	u6081
  3452  0711  2F13               	goto	u6080
  3453  0712                     u6081:
  3454  0712  2F2E               	goto	l3720
  3455  0713                     u6080:
  3456  0713                     l3714:
  3457                           
  3458                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  3459  0713  0843               	movf	(sprintf@prec+1)^(0+128),w
  3460  0714  3A80               	xorlw	128
  3461  0715  00A5               	movwf	??_sprintf^(0+128)
  3462  0716  0836               	movf	(sprintf@width+1)^(0+128),w
  3463  0717  3A80               	xorlw	128
  3464  0718  0225               	subwf	??_sprintf^(0+128),w
  3465  0719  1D03               	skipz
  3466  071A  2F1D               	goto	u6095
  3467  071B  0835               	movf	sprintf@width^(0+128),w
  3468  071C  0242               	subwf	sprintf@prec^(0+128),w
  3469  071D                     u6095:
  3470  071D  1803               	skipnc
  3471  071E  2F20               	goto	u6091
  3472  071F  2F21               	goto	u6090
  3473  0720                     u6091:
  3474  0720  2F2A               	goto	l3718
  3475  0721                     u6090:
  3476  0721                     l3716:
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  3479  0721  1683               	bsf	3,5	;RP0=1, select bank1
  3480  0722  1303               	bcf	3,6	;RP1=0, select bank1
  3481  0723  0842               	movf	sprintf@prec^(0+128),w
  3482  0724  02B5               	subwf	sprintf@width^(0+128),f
  3483  0725  0843               	movf	(sprintf@prec+1)^(0+128),w
  3484  0726  1C03               	skipc
  3485  0727  03B6               	decf	(sprintf@width+1)^(0+128),f
  3486  0728  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3487  0729  2F2E               	goto	l3720
  3488  072A                     l3718:
  3489                           
  3490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  3491  072A  1683               	bsf	3,5	;RP0=1, select bank1
  3492  072B  1303               	bcf	3,6	;RP1=0, select bank1
  3493  072C  01B5               	clrf	sprintf@width^(0+128)
  3494  072D  01B6               	clrf	(sprintf@width+1)^(0+128)
  3495  072E                     l3720:
  3496                           
  3497                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3498  072E  0836               	movf	(sprintf@width+1)^(0+128),w
  3499  072F  3A80               	xorlw	128
  3500  0730  3C80               	sublw	128
  3501  0731  1D03               	skipz
  3502  0732  2F35               	goto	u6105
  3503  0733  0835               	movf	sprintf@width^(0+128),w
  3504  0734  0244               	subwf	sprintf@c^(0+128),w
  3505  0735                     u6105:
  3506  0735  1803               	skipnc
  3507  0736  2F38               	goto	u6101
  3508  0737  2F39               	goto	u6100
  3509  0738                     u6101:
  3510  0738  2F45               	goto	l3724
  3511  0739                     u6100:
  3512  0739                     l3722:
  3513                           
  3514                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3515  0739  1683               	bsf	3,5	;RP0=1, select bank1
  3516  073A  1303               	bcf	3,6	;RP1=0, select bank1
  3517  073B  0844               	movf	sprintf@c^(0+128),w
  3518  073C  00A5               	movwf	??_sprintf^(0+128)
  3519  073D  01A6               	clrf	(??_sprintf^(0+128)+1)
  3520  073E  0825               	movf	??_sprintf^(0+128),w
  3521  073F  02B5               	subwf	sprintf@width^(0+128),f
  3522  0740  0826               	movf	(??_sprintf+1)^(0+128),w
  3523  0741  1C03               	skipc
  3524  0742  03B6               	decf	(sprintf@width+1)^(0+128),f
  3525  0743  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3526  0744  2F49               	goto	l3726
  3527  0745                     l3724:
  3528                           
  3529                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3530  0745  1683               	bsf	3,5	;RP0=1, select bank1
  3531  0746  1303               	bcf	3,6	;RP1=0, select bank1
  3532  0747  01B5               	clrf	sprintf@width^(0+128)
  3533  0748  01B6               	clrf	(sprintf@width+1)^(0+128)
  3534  0749                     l3726:
  3535                           
  3536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3537  0749  0835               	movf	sprintf@width^(0+128),w
  3538  074A  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3539  074B  1903               	btfsc	3,2
  3540  074C  2F4E               	goto	u6111
  3541  074D  2F4F               	goto	u6110
  3542  074E                     u6111:
  3543  074E  2F66               	goto	l3734
  3544  074F                     u6110:
  3545  074F                     l3728:
  3546                           
  3547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3548  074F  3020               	movlw	32
  3549  0750  00FF               	movwf	btemp+1
  3550  0751  0841               	movf	sprintf@sp^(0+128),w
  3551  0752  0084               	movwf	4
  3552  0753  087F               	movf	btemp+1,w
  3553  0754  1383               	bcf	3,7	;select IRP bank0
  3554  0755  0080               	movwf	0
  3555  0756                     l3730:
  3556  0756  3001               	movlw	1
  3557  0757  00FF               	movwf	btemp+1
  3558  0758  087F               	movf	btemp+1,w
  3559  0759  07C1               	addwf	sprintf@sp^(0+128),f
  3560  075A                     l3732:
  3561  075A  30FF               	movlw	255
  3562  075B  07B5               	addwf	sprintf@width^(0+128),f
  3563  075C  1803               	skipnc
  3564  075D  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3565  075E  30FF               	movlw	255
  3566  075F  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3567  0760  0835               	movf	sprintf@width^(0+128),w
  3568  0761  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3569  0762  1D03               	btfss	3,2
  3570  0763  2F65               	goto	u6121
  3571  0764  2F66               	goto	u6120
  3572  0765                     u6121:
  3573  0765  2F4F               	goto	l3728
  3574  0766                     u6120:
  3575  0766                     l3734:
  3576                           
  3577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3578  0766  3003               	movlw	3
  3579  0767  0533               	andwf	sprintf@flag^(0+128),w
  3580  0768  00A5               	movwf	??_sprintf^(0+128)
  3581  0769  3000               	movlw	0
  3582  076A  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3583  076B  00A6               	movwf	(??_sprintf+1)^(0+128)
  3584  076C  0825               	movf	??_sprintf^(0+128),w
  3585  076D  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3586  076E  1903               	btfsc	3,2
  3587  076F  2F71               	goto	u6131
  3588  0770  2F72               	goto	u6130
  3589  0771                     u6131:
  3590  0771  2F7A               	goto	l3740
  3591  0772                     u6130:
  3592  0772                     l3736:
  3593                           
  3594                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3595  0772  302D               	movlw	45
  3596  0773  00FF               	movwf	btemp+1
  3597  0774  0841               	movf	sprintf@sp^(0+128),w
  3598  0775  0084               	movwf	4
  3599  0776  087F               	movf	btemp+1,w
  3600  0777  1383               	bcf	3,7	;select IRP bank0
  3601  0778  0080               	movwf	0
  3602  0779  282B               	goto	l3492
  3603  077A                     l3740:
  3604                           
  3605                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3606  077A  3001               	movlw	1
  3607  077B  07A0               	addwf	sprintf@f^(0+128),f
  3608  077C  30FF               	movlw	-1
  3609  077D  0720               	addwf	sprintf@f^(0+128),w
  3610  077E  0084               	movwf	4
  3611  077F  160A  158A  2000  120A  118A  	fcall	stringdir
  3612  0784  00FF               	movwf	btemp+1
  3613  0785  087F               	movf	btemp+1,w
  3614  0786  00C4               	movwf	sprintf@c^(0+128)
  3615  0787  0844               	movf	sprintf@c^(0+128),w
  3616  0788  1D03               	btfss	3,2
  3617  0789  2F8B               	goto	u6141
  3618  078A  2F8C               	goto	u6140
  3619  078B                     u6141:
  3620  078B  281E               	goto	l3488
  3621  078C                     u6140:
  3622  078C                     l3742:
  3623                           
  3624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3625  078C  0841               	movf	sprintf@sp^(0+128),w
  3626  078D  0084               	movwf	4
  3627  078E  1383               	bcf	3,7	;select IRP bank0
  3628  078F  0180               	clrf	0
  3629  0790                     l293:
  3630  0790  0008               	return
  3631  0791                     __end_of_sprintf:
  3632                           
  3633                           	psect	text2
  3634  0940                     __ptext2:	
  3635 ;; *************** function _scale *****************
  3636 ;; Defined at:
  3637 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  scl             1    wreg     char 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  scl             1   48[BANK0 ] char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  4   30[BANK0 ] char 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3651 ;;      Params:         0       4       0       0       0
  3652 ;;      Locals:         0       5       0       0       0
  3653 ;;      Temps:          0      10       0       0       0
  3654 ;;      Totals:         0      19       0       0       0
  3655 ;;Total ram usage:       19 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    3
  3658 ;; This function calls:
  3659 ;;		___awdiv
  3660 ;;		___awmod
  3661 ;;		___flmul
  3662 ;; This function is called by:
  3663 ;;		_sprintf
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           
  3668                           ;psect for function _scale
  3669  0940                     _scale:
  3670                           
  3671                           ;incstack = 0
  3672                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3673                           ;scale@scl stored from wreg
  3674  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3675  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3676  0942  00D0               	movwf	scale@scl
  3677  0943                     l2906:
  3678                           
  3679                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3680  0943  1FD0               	btfss	scale@scl,7
  3681  0944  2946               	goto	u4391
  3682  0945  2947               	goto	u4390
  3683  0946                     u4391:
  3684  0946  2AF4               	goto	l2928
  3685  0947                     u4390:
  3686  0947                     l2908:
  3687                           
  3688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3689  0947  09D0               	comf	scale@scl,f
  3690  0948  0AD0               	incf	scale@scl,f
  3691  0949                     l2910:
  3692                           
  3693                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3694  0949  0850               	movf	scale@scl,w
  3695  094A  3A80               	xorlw	128
  3696  094B  3E12               	addlw	-238
  3697  094C  1C03               	skipc
  3698  094D  294F               	goto	u4401
  3699  094E  2950               	goto	u4400
  3700  094F                     u4401:
  3701  094F  2A38               	goto	l2918
  3702  0950                     u4400:
  3703  0950                     l2912:
  3704                           
  3705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3706  0950  300A               	movlw	10
  3707  0951  00F8               	movwf	___awdiv@divisor
  3708  0952  3000               	movlw	0
  3709  0953  00F9               	movwf	___awdiv@divisor+1
  3710  0954  0850               	movf	scale@scl,w
  3711  0955  00F4               	movwf	___awmod@dividend
  3712  0956  01F5               	clrf	___awmod@dividend+1
  3713  0957  1BF4               	btfsc	___awmod@dividend,7
  3714  0958  03F5               	decf	___awmod@dividend+1,f
  3715  0959  3064               	movlw	100
  3716  095A  00F2               	movwf	___awmod@divisor
  3717  095B  3000               	movlw	0
  3718  095C  00F3               	movwf	___awmod@divisor+1
  3719  095D  160A  158A  2533  120A  158A  	fcall	___awmod
  3720  0962  0873               	movf	?___awmod+1,w
  3721  0963  00FB               	movwf	___awdiv@dividend+1
  3722  0964  0872               	movf	?___awmod,w
  3723  0965  00FA               	movwf	___awdiv@dividend
  3724  0966  160A  158A  25F4  120A  158A  	fcall	___awdiv
  3725  096B  0878               	movf	?___awdiv,w
  3726  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3727  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3728  096E  00C2               	movwf	??_scale
  3729  096F  3001               	movlw	1
  3730  0970                     u4415:
  3731  0970  1003               	clrc
  3732  0971  0DC2               	rlf	??_scale,f
  3733  0972  3EFF               	addlw	-1
  3734  0973  1D03               	skipz
  3735  0974  2970               	goto	u4415
  3736  0975  1003               	clrc
  3737  0976  0D42               	rlf	??_scale,w
  3738  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3739  0978  0084               	movwf	4
  3740  0979  160A  158A  2000  120A  158A  	fcall	stringdir
  3741  097E  00C3               	movwf	??_scale+1
  3742  097F  160A  158A  2000  120A  158A  	fcall	stringdir
  3743  0984  00C4               	movwf	??_scale+2
  3744  0985  160A  158A  2000  120A  158A  	fcall	stringdir
  3745  098A  00C5               	movwf	??_scale+3
  3746  098B  160A  158A  2000  120A  158A  	fcall	stringdir
  3747  0990  00C6               	movwf	??_scale+4
  3748  0991  0846               	movf	??_scale+4,w
  3749  0992  00A7               	movwf	___flmul@b+3
  3750  0993  0845               	movf	??_scale+3,w
  3751  0994  00A6               	movwf	___flmul@b+2
  3752  0995  0844               	movf	??_scale+2,w
  3753  0996  00A5               	movwf	___flmul@b+1
  3754  0997  0843               	movf	??_scale+1,w
  3755  0998  00A4               	movwf	___flmul@b
  3756  0999  3064               	movlw	100
  3757  099A  00F8               	movwf	___awdiv@divisor
  3758  099B  3000               	movlw	0
  3759  099C  00F9               	movwf	___awdiv@divisor+1
  3760  099D  0850               	movf	scale@scl,w
  3761  099E  00FA               	movwf	___awdiv@dividend
  3762  099F  01FB               	clrf	___awdiv@dividend+1
  3763  09A0  1BFA               	btfsc	___awdiv@dividend,7
  3764  09A1  03FB               	decf	___awdiv@dividend+1,f
  3765  09A2  160A  158A  25F4  120A  158A  	fcall	___awdiv
  3766  09A7  0878               	movf	?___awdiv,w
  3767  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3768  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3769  09AA  00C7               	movwf	??_scale+5
  3770  09AB  3001               	movlw	1
  3771  09AC                     u4425:
  3772  09AC  1003               	clrc
  3773  09AD  0DC7               	rlf	??_scale+5,f
  3774  09AE  3EFF               	addlw	-1
  3775  09AF  1D03               	skipz
  3776  09B0  29AC               	goto	u4425
  3777  09B1  1003               	clrc
  3778  09B2  0D47               	rlf	??_scale+5,w
  3779  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3780  09B4  0084               	movwf	4
  3781  09B5  160A  158A  2000  120A  158A  	fcall	stringdir
  3782  09BA  00C8               	movwf	??_scale+6
  3783  09BB  160A  158A  2000  120A  158A  	fcall	stringdir
  3784  09C0  00C9               	movwf	??_scale+7
  3785  09C1  160A  158A  2000  120A  158A  	fcall	stringdir
  3786  09C6  00CA               	movwf	??_scale+8
  3787  09C7  160A  158A  2000  120A  158A  	fcall	stringdir
  3788  09CC  00CB               	movwf	??_scale+9
  3789  09CD  084B               	movf	??_scale+9,w
  3790  09CE  00AB               	movwf	___flmul@a+3
  3791  09CF  084A               	movf	??_scale+8,w
  3792  09D0  00AA               	movwf	___flmul@a+2
  3793  09D1  0849               	movf	??_scale+7,w
  3794  09D2  00A9               	movwf	___flmul@a+1
  3795  09D3  0848               	movf	??_scale+6,w
  3796  09D4  00A8               	movwf	___flmul@a
  3797  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3798  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3799  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3800  09DC  0827               	movf	?___flmul+3,w
  3801  09DD  00CF               	movwf	_scale$830+3
  3802  09DE  0826               	movf	?___flmul+2,w
  3803  09DF  00CE               	movwf	_scale$830+2
  3804  09E0  0825               	movf	?___flmul+1,w
  3805  09E1  00CD               	movwf	_scale$830+1
  3806  09E2  0824               	movf	?___flmul,w
  3807  09E3  00CC               	movwf	_scale$830
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3810  09E4  300A               	movlw	10
  3811  09E5  00F2               	movwf	___awmod@divisor
  3812  09E6  3000               	movlw	0
  3813  09E7  00F3               	movwf	___awmod@divisor+1
  3814  09E8  0850               	movf	scale@scl,w
  3815  09E9  00F4               	movwf	___awmod@dividend
  3816  09EA  01F5               	clrf	___awmod@dividend+1
  3817  09EB  1BF4               	btfsc	___awmod@dividend,7
  3818  09EC  03F5               	decf	___awmod@dividend+1,f
  3819  09ED  160A  158A  2533  120A  158A  	fcall	___awmod
  3820  09F2  0872               	movf	?___awmod,w
  3821  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3822  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3823  09F5  00C2               	movwf	??_scale
  3824  09F6  3001               	movlw	1
  3825  09F7                     u4435:
  3826  09F7  1003               	clrc
  3827  09F8  0DC2               	rlf	??_scale,f
  3828  09F9  3EFF               	addlw	-1
  3829  09FA  1D03               	skipz
  3830  09FB  29F7               	goto	u4435
  3831  09FC  1003               	clrc
  3832  09FD  0D42               	rlf	??_scale,w
  3833  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3834  09FF  0084               	movwf	4
  3835  0A00  160A  158A  2000  120A  158A  	fcall	stringdir
  3836  0A05  00C3               	movwf	??_scale+1
  3837  0A06  160A  158A  2000  120A  158A  	fcall	stringdir
  3838  0A0B  00C4               	movwf	??_scale+2
  3839  0A0C  160A  158A  2000  120A  158A  	fcall	stringdir
  3840  0A11  00C5               	movwf	??_scale+3
  3841  0A12  160A  158A  2000  120A  158A  	fcall	stringdir
  3842  0A17  00C6               	movwf	??_scale+4
  3843  0A18  0846               	movf	??_scale+4,w
  3844  0A19  00A7               	movwf	___flmul@b+3
  3845  0A1A  0845               	movf	??_scale+3,w
  3846  0A1B  00A6               	movwf	___flmul@b+2
  3847  0A1C  0844               	movf	??_scale+2,w
  3848  0A1D  00A5               	movwf	___flmul@b+1
  3849  0A1E  0843               	movf	??_scale+1,w
  3850  0A1F  00A4               	movwf	___flmul@b
  3851  0A20  084F               	movf	_scale$830+3,w
  3852  0A21  00AB               	movwf	___flmul@a+3
  3853  0A22  084E               	movf	_scale$830+2,w
  3854  0A23  00AA               	movwf	___flmul@a+2
  3855  0A24  084D               	movf	_scale$830+1,w
  3856  0A25  00A9               	movwf	___flmul@a+1
  3857  0A26  084C               	movf	_scale$830,w
  3858  0A27  00A8               	movwf	___flmul@a
  3859  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3860  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3861  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3862  0A2F  0827               	movf	?___flmul+3,w
  3863  0A30  00C1               	movwf	?_scale+3
  3864  0A31  0826               	movf	?___flmul+2,w
  3865  0A32  00C0               	movwf	?_scale+2
  3866  0A33  0825               	movf	?___flmul+1,w
  3867  0A34  00BF               	movwf	?_scale+1
  3868  0A35  0824               	movf	?___flmul,w
  3869  0A36  00BE               	movwf	?_scale
  3870  0A37  2C9E               	goto	l210
  3871  0A38                     l2918:
  3872  0A38  0850               	movf	scale@scl,w
  3873  0A39  3A80               	xorlw	128
  3874  0A3A  3E75               	addlw	-139
  3875  0A3B  1C03               	skipc
  3876  0A3C  2A3E               	goto	u4441
  3877  0A3D  2A3F               	goto	u4440
  3878  0A3E                     u4441:
  3879  0A3E  2AC7               	goto	l2924
  3880  0A3F                     u4440:
  3881  0A3F                     l2920:
  3882                           
  3883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3884  0A3F  300A               	movlw	10
  3885  0A40  00F2               	movwf	___awmod@divisor
  3886  0A41  3000               	movlw	0
  3887  0A42  00F3               	movwf	___awmod@divisor+1
  3888  0A43  0850               	movf	scale@scl,w
  3889  0A44  00F4               	movwf	___awmod@dividend
  3890  0A45  01F5               	clrf	___awmod@dividend+1
  3891  0A46  1BF4               	btfsc	___awmod@dividend,7
  3892  0A47  03F5               	decf	___awmod@dividend+1,f
  3893  0A48  160A  158A  2533  120A  158A  	fcall	___awmod
  3894  0A4D  0872               	movf	?___awmod,w
  3895  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3896  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3897  0A50  00C2               	movwf	??_scale
  3898  0A51  3001               	movlw	1
  3899  0A52                     u4455:
  3900  0A52  1003               	clrc
  3901  0A53  0DC2               	rlf	??_scale,f
  3902  0A54  3EFF               	addlw	-1
  3903  0A55  1D03               	skipz
  3904  0A56  2A52               	goto	u4455
  3905  0A57  1003               	clrc
  3906  0A58  0D42               	rlf	??_scale,w
  3907  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3908  0A5A  0084               	movwf	4
  3909  0A5B  160A  158A  2000  120A  158A  	fcall	stringdir
  3910  0A60  00C3               	movwf	??_scale+1
  3911  0A61  160A  158A  2000  120A  158A  	fcall	stringdir
  3912  0A66  00C4               	movwf	??_scale+2
  3913  0A67  160A  158A  2000  120A  158A  	fcall	stringdir
  3914  0A6C  00C5               	movwf	??_scale+3
  3915  0A6D  160A  158A  2000  120A  158A  	fcall	stringdir
  3916  0A72  00C6               	movwf	??_scale+4
  3917  0A73  0846               	movf	??_scale+4,w
  3918  0A74  00A7               	movwf	___flmul@b+3
  3919  0A75  0845               	movf	??_scale+3,w
  3920  0A76  00A6               	movwf	___flmul@b+2
  3921  0A77  0844               	movf	??_scale+2,w
  3922  0A78  00A5               	movwf	___flmul@b+1
  3923  0A79  0843               	movf	??_scale+1,w
  3924  0A7A  00A4               	movwf	___flmul@b
  3925  0A7B  300A               	movlw	10
  3926  0A7C  00F8               	movwf	___awdiv@divisor
  3927  0A7D  3000               	movlw	0
  3928  0A7E  00F9               	movwf	___awdiv@divisor+1
  3929  0A7F  0850               	movf	scale@scl,w
  3930  0A80  00FA               	movwf	___awdiv@dividend
  3931  0A81  01FB               	clrf	___awdiv@dividend+1
  3932  0A82  1BFA               	btfsc	___awdiv@dividend,7
  3933  0A83  03FB               	decf	___awdiv@dividend+1,f
  3934  0A84  160A  158A  25F4  120A  158A  	fcall	___awdiv
  3935  0A89  0878               	movf	?___awdiv,w
  3936  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3937  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3938  0A8C  00C7               	movwf	??_scale+5
  3939  0A8D  3001               	movlw	1
  3940  0A8E                     u4465:
  3941  0A8E  1003               	clrc
  3942  0A8F  0DC7               	rlf	??_scale+5,f
  3943  0A90  3EFF               	addlw	-1
  3944  0A91  1D03               	skipz
  3945  0A92  2A8E               	goto	u4465
  3946  0A93  1003               	clrc
  3947  0A94  0D47               	rlf	??_scale+5,w
  3948  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3949  0A96  0084               	movwf	4
  3950  0A97  160A  158A  2000  120A  158A  	fcall	stringdir
  3951  0A9C  00C8               	movwf	??_scale+6
  3952  0A9D  160A  158A  2000  120A  158A  	fcall	stringdir
  3953  0AA2  00C9               	movwf	??_scale+7
  3954  0AA3  160A  158A  2000  120A  158A  	fcall	stringdir
  3955  0AA8  00CA               	movwf	??_scale+8
  3956  0AA9  160A  158A  2000  120A  158A  	fcall	stringdir
  3957  0AAE  00CB               	movwf	??_scale+9
  3958  0AAF  084B               	movf	??_scale+9,w
  3959  0AB0  00AB               	movwf	___flmul@a+3
  3960  0AB1  084A               	movf	??_scale+8,w
  3961  0AB2  00AA               	movwf	___flmul@a+2
  3962  0AB3  0849               	movf	??_scale+7,w
  3963  0AB4  00A9               	movwf	___flmul@a+1
  3964  0AB5  0848               	movf	??_scale+6,w
  3965  0AB6  00A8               	movwf	___flmul@a
  3966  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3967  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3968  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3969  0ABE  0827               	movf	?___flmul+3,w
  3970  0ABF  00C1               	movwf	?_scale+3
  3971  0AC0  0826               	movf	?___flmul+2,w
  3972  0AC1  00C0               	movwf	?_scale+2
  3973  0AC2  0825               	movf	?___flmul+1,w
  3974  0AC3  00BF               	movwf	?_scale+1
  3975  0AC4  0824               	movf	?___flmul,w
  3976  0AC5  00BE               	movwf	?_scale
  3977  0AC6  2C9E               	goto	l210
  3978  0AC7                     l2924:
  3979                           
  3980                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3981  0AC7  0850               	movf	scale@scl,w
  3982  0AC8  00C2               	movwf	??_scale
  3983  0AC9  3001               	movlw	1
  3984  0ACA                     u4475:
  3985  0ACA  1003               	clrc
  3986  0ACB  0DC2               	rlf	??_scale,f
  3987  0ACC  3EFF               	addlw	-1
  3988  0ACD  1D03               	skipz
  3989  0ACE  2ACA               	goto	u4475
  3990  0ACF  1003               	clrc
  3991  0AD0  0D42               	rlf	??_scale,w
  3992  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3993  0AD2  0084               	movwf	4
  3994  0AD3  160A  158A  2000  120A  158A  	fcall	stringdir
  3995  0AD8  00C3               	movwf	??_scale+1
  3996  0AD9  160A  158A  2000  120A  158A  	fcall	stringdir
  3997  0ADE  00C4               	movwf	??_scale+2
  3998  0ADF  160A  158A  2000  120A  158A  	fcall	stringdir
  3999  0AE4  00C5               	movwf	??_scale+3
  4000  0AE5  160A  158A  2000  120A  158A  	fcall	stringdir
  4001  0AEA  00C6               	movwf	??_scale+4
  4002  0AEB  0846               	movf	??_scale+4,w
  4003  0AEC  00C1               	movwf	?_scale+3
  4004  0AED  0845               	movf	??_scale+3,w
  4005  0AEE  00C0               	movwf	?_scale+2
  4006  0AEF  0844               	movf	??_scale+2,w
  4007  0AF0  00BF               	movwf	?_scale+1
  4008  0AF1  0843               	movf	??_scale+1,w
  4009  0AF2  00BE               	movwf	?_scale
  4010  0AF3  2C9E               	goto	l210
  4011  0AF4                     l2928:
  4012                           
  4013                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4014  0AF4  0850               	movf	scale@scl,w
  4015  0AF5  3A80               	xorlw	128
  4016  0AF6  3E12               	addlw	-238
  4017  0AF7  1C03               	skipc
  4018  0AF8  2AFA               	goto	u4481
  4019  0AF9  2AFB               	goto	u4480
  4020  0AFA                     u4481:
  4021  0AFA  2BE3               	goto	l2936
  4022  0AFB                     u4480:
  4023  0AFB                     l2930:
  4024                           
  4025                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4026  0AFB  300A               	movlw	10
  4027  0AFC  00F8               	movwf	___awdiv@divisor
  4028  0AFD  3000               	movlw	0
  4029  0AFE  00F9               	movwf	___awdiv@divisor+1
  4030  0AFF  0850               	movf	scale@scl,w
  4031  0B00  00F4               	movwf	___awmod@dividend
  4032  0B01  01F5               	clrf	___awmod@dividend+1
  4033  0B02  1BF4               	btfsc	___awmod@dividend,7
  4034  0B03  03F5               	decf	___awmod@dividend+1,f
  4035  0B04  3064               	movlw	100
  4036  0B05  00F2               	movwf	___awmod@divisor
  4037  0B06  3000               	movlw	0
  4038  0B07  00F3               	movwf	___awmod@divisor+1
  4039  0B08  160A  158A  2533  120A  158A  	fcall	___awmod
  4040  0B0D  0873               	movf	?___awmod+1,w
  4041  0B0E  00FB               	movwf	___awdiv@dividend+1
  4042  0B0F  0872               	movf	?___awmod,w
  4043  0B10  00FA               	movwf	___awdiv@dividend
  4044  0B11  160A  158A  25F4  120A  158A  	fcall	___awdiv
  4045  0B16  0878               	movf	?___awdiv,w
  4046  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4047  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4048  0B19  00C2               	movwf	??_scale
  4049  0B1A  3001               	movlw	1
  4050  0B1B                     u4495:
  4051  0B1B  1003               	clrc
  4052  0B1C  0DC2               	rlf	??_scale,f
  4053  0B1D  3EFF               	addlw	-1
  4054  0B1E  1D03               	skipz
  4055  0B1F  2B1B               	goto	u4495
  4056  0B20  1003               	clrc
  4057  0B21  0D42               	rlf	??_scale,w
  4058  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4059  0B23  0084               	movwf	4
  4060  0B24  160A  158A  2000  120A  158A  	fcall	stringdir
  4061  0B29  00C3               	movwf	??_scale+1
  4062  0B2A  160A  158A  2000  120A  158A  	fcall	stringdir
  4063  0B2F  00C4               	movwf	??_scale+2
  4064  0B30  160A  158A  2000  120A  158A  	fcall	stringdir
  4065  0B35  00C5               	movwf	??_scale+3
  4066  0B36  160A  158A  2000  120A  158A  	fcall	stringdir
  4067  0B3B  00C6               	movwf	??_scale+4
  4068  0B3C  0846               	movf	??_scale+4,w
  4069  0B3D  00A7               	movwf	___flmul@b+3
  4070  0B3E  0845               	movf	??_scale+3,w
  4071  0B3F  00A6               	movwf	___flmul@b+2
  4072  0B40  0844               	movf	??_scale+2,w
  4073  0B41  00A5               	movwf	___flmul@b+1
  4074  0B42  0843               	movf	??_scale+1,w
  4075  0B43  00A4               	movwf	___flmul@b
  4076  0B44  3064               	movlw	100
  4077  0B45  00F8               	movwf	___awdiv@divisor
  4078  0B46  3000               	movlw	0
  4079  0B47  00F9               	movwf	___awdiv@divisor+1
  4080  0B48  0850               	movf	scale@scl,w
  4081  0B49  00FA               	movwf	___awdiv@dividend
  4082  0B4A  01FB               	clrf	___awdiv@dividend+1
  4083  0B4B  1BFA               	btfsc	___awdiv@dividend,7
  4084  0B4C  03FB               	decf	___awdiv@dividend+1,f
  4085  0B4D  160A  158A  25F4  120A  158A  	fcall	___awdiv
  4086  0B52  0878               	movf	?___awdiv,w
  4087  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4088  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4089  0B55  00C7               	movwf	??_scale+5
  4090  0B56  3001               	movlw	1
  4091  0B57                     u4505:
  4092  0B57  1003               	clrc
  4093  0B58  0DC7               	rlf	??_scale+5,f
  4094  0B59  3EFF               	addlw	-1
  4095  0B5A  1D03               	skipz
  4096  0B5B  2B57               	goto	u4505
  4097  0B5C  1003               	clrc
  4098  0B5D  0D47               	rlf	??_scale+5,w
  4099  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4100  0B5F  0084               	movwf	4
  4101  0B60  160A  158A  2000  120A  158A  	fcall	stringdir
  4102  0B65  00C8               	movwf	??_scale+6
  4103  0B66  160A  158A  2000  120A  158A  	fcall	stringdir
  4104  0B6B  00C9               	movwf	??_scale+7
  4105  0B6C  160A  158A  2000  120A  158A  	fcall	stringdir
  4106  0B71  00CA               	movwf	??_scale+8
  4107  0B72  160A  158A  2000  120A  158A  	fcall	stringdir
  4108  0B77  00CB               	movwf	??_scale+9
  4109  0B78  084B               	movf	??_scale+9,w
  4110  0B79  00AB               	movwf	___flmul@a+3
  4111  0B7A  084A               	movf	??_scale+8,w
  4112  0B7B  00AA               	movwf	___flmul@a+2
  4113  0B7C  0849               	movf	??_scale+7,w
  4114  0B7D  00A9               	movwf	___flmul@a+1
  4115  0B7E  0848               	movf	??_scale+6,w
  4116  0B7F  00A8               	movwf	___flmul@a
  4117  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4118  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4119  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4120  0B87  0827               	movf	?___flmul+3,w
  4121  0B88  00CF               	movwf	_scale$830+3
  4122  0B89  0826               	movf	?___flmul+2,w
  4123  0B8A  00CE               	movwf	_scale$830+2
  4124  0B8B  0825               	movf	?___flmul+1,w
  4125  0B8C  00CD               	movwf	_scale$830+1
  4126  0B8D  0824               	movf	?___flmul,w
  4127  0B8E  00CC               	movwf	_scale$830
  4128                           
  4129                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4130  0B8F  300A               	movlw	10
  4131  0B90  00F2               	movwf	___awmod@divisor
  4132  0B91  3000               	movlw	0
  4133  0B92  00F3               	movwf	___awmod@divisor+1
  4134  0B93  0850               	movf	scale@scl,w
  4135  0B94  00F4               	movwf	___awmod@dividend
  4136  0B95  01F5               	clrf	___awmod@dividend+1
  4137  0B96  1BF4               	btfsc	___awmod@dividend,7
  4138  0B97  03F5               	decf	___awmod@dividend+1,f
  4139  0B98  160A  158A  2533  120A  158A  	fcall	___awmod
  4140  0B9D  0872               	movf	?___awmod,w
  4141  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4142  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4143  0BA0  00C2               	movwf	??_scale
  4144  0BA1  3001               	movlw	1
  4145  0BA2                     u4515:
  4146  0BA2  1003               	clrc
  4147  0BA3  0DC2               	rlf	??_scale,f
  4148  0BA4  3EFF               	addlw	-1
  4149  0BA5  1D03               	skipz
  4150  0BA6  2BA2               	goto	u4515
  4151  0BA7  1003               	clrc
  4152  0BA8  0D42               	rlf	??_scale,w
  4153  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4154  0BAA  0084               	movwf	4
  4155  0BAB  160A  158A  2000  120A  158A  	fcall	stringdir
  4156  0BB0  00C3               	movwf	??_scale+1
  4157  0BB1  160A  158A  2000  120A  158A  	fcall	stringdir
  4158  0BB6  00C4               	movwf	??_scale+2
  4159  0BB7  160A  158A  2000  120A  158A  	fcall	stringdir
  4160  0BBC  00C5               	movwf	??_scale+3
  4161  0BBD  160A  158A  2000  120A  158A  	fcall	stringdir
  4162  0BC2  00C6               	movwf	??_scale+4
  4163  0BC3  0846               	movf	??_scale+4,w
  4164  0BC4  00A7               	movwf	___flmul@b+3
  4165  0BC5  0845               	movf	??_scale+3,w
  4166  0BC6  00A6               	movwf	___flmul@b+2
  4167  0BC7  0844               	movf	??_scale+2,w
  4168  0BC8  00A5               	movwf	___flmul@b+1
  4169  0BC9  0843               	movf	??_scale+1,w
  4170  0BCA  00A4               	movwf	___flmul@b
  4171  0BCB  084F               	movf	_scale$830+3,w
  4172  0BCC  00AB               	movwf	___flmul@a+3
  4173  0BCD  084E               	movf	_scale$830+2,w
  4174  0BCE  00AA               	movwf	___flmul@a+2
  4175  0BCF  084D               	movf	_scale$830+1,w
  4176  0BD0  00A9               	movwf	___flmul@a+1
  4177  0BD1  084C               	movf	_scale$830,w
  4178  0BD2  00A8               	movwf	___flmul@a
  4179  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4180  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4181  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4182  0BDA  0827               	movf	?___flmul+3,w
  4183  0BDB  00C1               	movwf	?_scale+3
  4184  0BDC  0826               	movf	?___flmul+2,w
  4185  0BDD  00C0               	movwf	?_scale+2
  4186  0BDE  0825               	movf	?___flmul+1,w
  4187  0BDF  00BF               	movwf	?_scale+1
  4188  0BE0  0824               	movf	?___flmul,w
  4189  0BE1  00BE               	movwf	?_scale
  4190  0BE2  2C9E               	goto	l210
  4191  0BE3                     l2936:
  4192  0BE3  0850               	movf	scale@scl,w
  4193  0BE4  3A80               	xorlw	128
  4194  0BE5  3E75               	addlw	-139
  4195  0BE6  1C03               	skipc
  4196  0BE7  2BE9               	goto	u4521
  4197  0BE8  2BEA               	goto	u4520
  4198  0BE9                     u4521:
  4199  0BE9  2C72               	goto	l2942
  4200  0BEA                     u4520:
  4201  0BEA                     l2938:
  4202                           
  4203                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4204  0BEA  300A               	movlw	10
  4205  0BEB  00F2               	movwf	___awmod@divisor
  4206  0BEC  3000               	movlw	0
  4207  0BED  00F3               	movwf	___awmod@divisor+1
  4208  0BEE  0850               	movf	scale@scl,w
  4209  0BEF  00F4               	movwf	___awmod@dividend
  4210  0BF0  01F5               	clrf	___awmod@dividend+1
  4211  0BF1  1BF4               	btfsc	___awmod@dividend,7
  4212  0BF2  03F5               	decf	___awmod@dividend+1,f
  4213  0BF3  160A  158A  2533  120A  158A  	fcall	___awmod
  4214  0BF8  0872               	movf	?___awmod,w
  4215  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4216  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4217  0BFB  00C2               	movwf	??_scale
  4218  0BFC  3001               	movlw	1
  4219  0BFD                     u4535:
  4220  0BFD  1003               	clrc
  4221  0BFE  0DC2               	rlf	??_scale,f
  4222  0BFF  3EFF               	addlw	-1
  4223  0C00  1D03               	skipz
  4224  0C01  2BFD               	goto	u4535
  4225  0C02  1003               	clrc
  4226  0C03  0D42               	rlf	??_scale,w
  4227  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4228  0C05  0084               	movwf	4
  4229  0C06  160A  158A  2000  120A  158A  	fcall	stringdir
  4230  0C0B  00C3               	movwf	??_scale+1
  4231  0C0C  160A  158A  2000  120A  158A  	fcall	stringdir
  4232  0C11  00C4               	movwf	??_scale+2
  4233  0C12  160A  158A  2000  120A  158A  	fcall	stringdir
  4234  0C17  00C5               	movwf	??_scale+3
  4235  0C18  160A  158A  2000  120A  158A  	fcall	stringdir
  4236  0C1D  00C6               	movwf	??_scale+4
  4237  0C1E  0846               	movf	??_scale+4,w
  4238  0C1F  00A7               	movwf	___flmul@b+3
  4239  0C20  0845               	movf	??_scale+3,w
  4240  0C21  00A6               	movwf	___flmul@b+2
  4241  0C22  0844               	movf	??_scale+2,w
  4242  0C23  00A5               	movwf	___flmul@b+1
  4243  0C24  0843               	movf	??_scale+1,w
  4244  0C25  00A4               	movwf	___flmul@b
  4245  0C26  300A               	movlw	10
  4246  0C27  00F8               	movwf	___awdiv@divisor
  4247  0C28  3000               	movlw	0
  4248  0C29  00F9               	movwf	___awdiv@divisor+1
  4249  0C2A  0850               	movf	scale@scl,w
  4250  0C2B  00FA               	movwf	___awdiv@dividend
  4251  0C2C  01FB               	clrf	___awdiv@dividend+1
  4252  0C2D  1BFA               	btfsc	___awdiv@dividend,7
  4253  0C2E  03FB               	decf	___awdiv@dividend+1,f
  4254  0C2F  160A  158A  25F4  120A  158A  	fcall	___awdiv
  4255  0C34  0878               	movf	?___awdiv,w
  4256  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4257  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4258  0C37  00C7               	movwf	??_scale+5
  4259  0C38  3001               	movlw	1
  4260  0C39                     u4545:
  4261  0C39  1003               	clrc
  4262  0C3A  0DC7               	rlf	??_scale+5,f
  4263  0C3B  3EFF               	addlw	-1
  4264  0C3C  1D03               	skipz
  4265  0C3D  2C39               	goto	u4545
  4266  0C3E  1003               	clrc
  4267  0C3F  0D47               	rlf	??_scale+5,w
  4268  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4269  0C41  0084               	movwf	4
  4270  0C42  160A  158A  2000  120A  158A  	fcall	stringdir
  4271  0C47  00C8               	movwf	??_scale+6
  4272  0C48  160A  158A  2000  120A  158A  	fcall	stringdir
  4273  0C4D  00C9               	movwf	??_scale+7
  4274  0C4E  160A  158A  2000  120A  158A  	fcall	stringdir
  4275  0C53  00CA               	movwf	??_scale+8
  4276  0C54  160A  158A  2000  120A  158A  	fcall	stringdir
  4277  0C59  00CB               	movwf	??_scale+9
  4278  0C5A  084B               	movf	??_scale+9,w
  4279  0C5B  00AB               	movwf	___flmul@a+3
  4280  0C5C  084A               	movf	??_scale+8,w
  4281  0C5D  00AA               	movwf	___flmul@a+2
  4282  0C5E  0849               	movf	??_scale+7,w
  4283  0C5F  00A9               	movwf	___flmul@a+1
  4284  0C60  0848               	movf	??_scale+6,w
  4285  0C61  00A8               	movwf	___flmul@a
  4286  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4287  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4288  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4289  0C69  0827               	movf	?___flmul+3,w
  4290  0C6A  00C1               	movwf	?_scale+3
  4291  0C6B  0826               	movf	?___flmul+2,w
  4292  0C6C  00C0               	movwf	?_scale+2
  4293  0C6D  0825               	movf	?___flmul+1,w
  4294  0C6E  00BF               	movwf	?_scale+1
  4295  0C6F  0824               	movf	?___flmul,w
  4296  0C70  00BE               	movwf	?_scale
  4297  0C71  2C9E               	goto	l210
  4298  0C72                     l2942:
  4299                           
  4300                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4301  0C72  0850               	movf	scale@scl,w
  4302  0C73  00C2               	movwf	??_scale
  4303  0C74  3001               	movlw	1
  4304  0C75                     u4555:
  4305  0C75  1003               	clrc
  4306  0C76  0DC2               	rlf	??_scale,f
  4307  0C77  3EFF               	addlw	-1
  4308  0C78  1D03               	skipz
  4309  0C79  2C75               	goto	u4555
  4310  0C7A  1003               	clrc
  4311  0C7B  0D42               	rlf	??_scale,w
  4312  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4313  0C7D  0084               	movwf	4
  4314  0C7E  160A  158A  2000  120A  158A  	fcall	stringdir
  4315  0C83  00C3               	movwf	??_scale+1
  4316  0C84  160A  158A  2000  120A  158A  	fcall	stringdir
  4317  0C89  00C4               	movwf	??_scale+2
  4318  0C8A  160A  158A  2000  120A  158A  	fcall	stringdir
  4319  0C8F  00C5               	movwf	??_scale+3
  4320  0C90  160A  158A  2000  120A  158A  	fcall	stringdir
  4321  0C95  00C6               	movwf	??_scale+4
  4322  0C96  0846               	movf	??_scale+4,w
  4323  0C97  00C1               	movwf	?_scale+3
  4324  0C98  0845               	movf	??_scale+3,w
  4325  0C99  00C0               	movwf	?_scale+2
  4326  0C9A  0844               	movf	??_scale+2,w
  4327  0C9B  00BF               	movwf	?_scale+1
  4328  0C9C  0843               	movf	??_scale+1,w
  4329  0C9D  00BE               	movwf	?_scale
  4330  0C9E                     l210:
  4331  0C9E  0008               	return
  4332  0C9F                     __end_of_scale:
  4333                           
  4334                           	psect	text3
  4335  1D33                     __ptext3:	
  4336 ;; *************** function ___awmod *****************
  4337 ;; Defined at:
  4338 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  divisor         2    2[COMMON] int 
  4341 ;;  dividend        2    4[COMMON] int 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  sign            1    7[COMMON] unsigned char 
  4344 ;;  counter         1    6[COMMON] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  2    2[COMMON] int 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0, btemp+1
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4354 ;;      Params:         4       0       0       0       0
  4355 ;;      Locals:         2       0       0       0       0
  4356 ;;      Temps:          0       0       0       0       0
  4357 ;;      Totals:         6       0       0       0       0
  4358 ;;Total ram usage:        6 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    1
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_scale
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           
  4369                           ;psect for function ___awmod
  4370  1D33                     ___awmod:
  4371  1D33                     l2422:	
  4372                           ;incstack = 0
  4373                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  4374                           
  4375  1D33  01F7               	clrf	___awmod@sign
  4376  1D34                     l2424:
  4377  1D34  1FF5               	btfss	___awmod@dividend+1,7
  4378  1D35  2D37               	goto	u3231
  4379  1D36  2D38               	goto	u3230
  4380  1D37                     u3231:
  4381  1D37  2D3F               	goto	l2430
  4382  1D38                     u3230:
  4383  1D38                     l2426:
  4384  1D38  09F4               	comf	___awmod@dividend,f
  4385  1D39  09F5               	comf	___awmod@dividend+1,f
  4386  1D3A  0AF4               	incf	___awmod@dividend,f
  4387  1D3B  1903               	skipnz
  4388  1D3C  0AF5               	incf	___awmod@dividend+1,f
  4389  1D3D                     l2428:
  4390  1D3D  01F7               	clrf	___awmod@sign
  4391  1D3E  0AF7               	incf	___awmod@sign,f
  4392  1D3F                     l2430:
  4393  1D3F  1FF3               	btfss	___awmod@divisor+1,7
  4394  1D40  2D42               	goto	u3241
  4395  1D41  2D43               	goto	u3240
  4396  1D42                     u3241:
  4397  1D42  2D48               	goto	l2434
  4398  1D43                     u3240:
  4399  1D43                     l2432:
  4400  1D43  09F2               	comf	___awmod@divisor,f
  4401  1D44  09F3               	comf	___awmod@divisor+1,f
  4402  1D45  0AF2               	incf	___awmod@divisor,f
  4403  1D46  1903               	skipnz
  4404  1D47  0AF3               	incf	___awmod@divisor+1,f
  4405  1D48                     l2434:
  4406  1D48  0872               	movf	___awmod@divisor,w
  4407  1D49  0473               	iorwf	___awmod@divisor+1,w
  4408  1D4A  1903               	btfsc	3,2
  4409  1D4B  2D4D               	goto	u3251
  4410  1D4C  2D4E               	goto	u3250
  4411  1D4D                     u3251:
  4412  1D4D  2D7D               	goto	l2452
  4413  1D4E                     u3250:
  4414  1D4E                     l2436:
  4415  1D4E  01F6               	clrf	___awmod@counter
  4416  1D4F  0AF6               	incf	___awmod@counter,f
  4417  1D50  2D5C               	goto	l2442
  4418  1D51                     l2438:
  4419  1D51  3001               	movlw	1
  4420  1D52                     u3265:
  4421  1D52  1003               	clrc
  4422  1D53  0DF2               	rlf	___awmod@divisor,f
  4423  1D54  0DF3               	rlf	___awmod@divisor+1,f
  4424  1D55  3EFF               	addlw	-1
  4425  1D56  1D03               	skipz
  4426  1D57  2D52               	goto	u3265
  4427  1D58                     l2440:
  4428  1D58  3001               	movlw	1
  4429  1D59  00FF               	movwf	btemp+1
  4430  1D5A  087F               	movf	btemp+1,w
  4431  1D5B  07F6               	addwf	___awmod@counter,f
  4432  1D5C                     l2442:
  4433  1D5C  1FF3               	btfss	___awmod@divisor+1,7
  4434  1D5D  2D5F               	goto	u3271
  4435  1D5E  2D60               	goto	u3270
  4436  1D5F                     u3271:
  4437  1D5F  2D51               	goto	l2438
  4438  1D60                     u3270:
  4439  1D60                     l2444:
  4440  1D60  0873               	movf	___awmod@divisor+1,w
  4441  1D61  0275               	subwf	___awmod@dividend+1,w
  4442  1D62  1D03               	skipz
  4443  1D63  2D66               	goto	u3285
  4444  1D64  0872               	movf	___awmod@divisor,w
  4445  1D65  0274               	subwf	___awmod@dividend,w
  4446  1D66                     u3285:
  4447  1D66  1C03               	skipc
  4448  1D67  2D69               	goto	u3281
  4449  1D68  2D6A               	goto	u3280
  4450  1D69                     u3281:
  4451  1D69  2D70               	goto	l2448
  4452  1D6A                     u3280:
  4453  1D6A                     l2446:
  4454  1D6A  0872               	movf	___awmod@divisor,w
  4455  1D6B  02F4               	subwf	___awmod@dividend,f
  4456  1D6C  0873               	movf	___awmod@divisor+1,w
  4457  1D6D  1C03               	skipc
  4458  1D6E  03F5               	decf	___awmod@dividend+1,f
  4459  1D6F  02F5               	subwf	___awmod@dividend+1,f
  4460  1D70                     l2448:
  4461  1D70  3001               	movlw	1
  4462  1D71                     u3295:
  4463  1D71  1003               	clrc
  4464  1D72  0CF3               	rrf	___awmod@divisor+1,f
  4465  1D73  0CF2               	rrf	___awmod@divisor,f
  4466  1D74  3EFF               	addlw	-1
  4467  1D75  1D03               	skipz
  4468  1D76  2D71               	goto	u3295
  4469  1D77                     l2450:
  4470  1D77  3001               	movlw	1
  4471  1D78  02F6               	subwf	___awmod@counter,f
  4472  1D79  1D03               	btfss	3,2
  4473  1D7A  2D7C               	goto	u3301
  4474  1D7B  2D7D               	goto	u3300
  4475  1D7C                     u3301:
  4476  1D7C  2D60               	goto	l2444
  4477  1D7D                     u3300:
  4478  1D7D                     l2452:
  4479  1D7D  0877               	movf	___awmod@sign,w
  4480  1D7E  1903               	btfsc	3,2
  4481  1D7F  2D81               	goto	u3311
  4482  1D80  2D82               	goto	u3310
  4483  1D81                     u3311:
  4484  1D81  2D87               	goto	l2456
  4485  1D82                     u3310:
  4486  1D82                     l2454:
  4487  1D82  09F4               	comf	___awmod@dividend,f
  4488  1D83  09F5               	comf	___awmod@dividend+1,f
  4489  1D84  0AF4               	incf	___awmod@dividend,f
  4490  1D85  1903               	skipnz
  4491  1D86  0AF5               	incf	___awmod@dividend+1,f
  4492  1D87                     l2456:
  4493  1D87  0875               	movf	___awmod@dividend+1,w
  4494  1D88  00F3               	movwf	?___awmod+1
  4495  1D89  0874               	movf	___awmod@dividend,w
  4496  1D8A  00F2               	movwf	?___awmod
  4497  1D8B                     l463:
  4498  1D8B  0008               	return
  4499  1D8C                     __end_of___awmod:
  4500                           
  4501                           	psect	text4
  4502  1DF4                     __ptext4:	
  4503 ;; *************** function ___awdiv *****************
  4504 ;; Defined at:
  4505 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  divisor         2    8[COMMON] int 
  4508 ;;  dividend        2   10[COMMON] int 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  quotient        2    2[BANK0 ] int 
  4511 ;;  sign            1    1[BANK0 ] unsigned char 
  4512 ;;  counter         1    0[BANK0 ] unsigned char 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  2    8[COMMON] int 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0, btemp+1
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4522 ;;      Params:         4       0       0       0       0
  4523 ;;      Locals:         0       4       0       0       0
  4524 ;;      Temps:          0       0       0       0       0
  4525 ;;      Totals:         4       4       0       0       0
  4526 ;;Total ram usage:        8 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    1
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_scale
  4533 ;;		_sprintf
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           
  4538                           ;psect for function ___awdiv
  4539  1DF4                     ___awdiv:
  4540  1DF4                     l2378:	
  4541                           ;incstack = 0
  4542                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4543                           
  4544  1DF4  1283               	bcf	3,5	;RP0=0, select bank0
  4545  1DF5  1303               	bcf	3,6	;RP1=0, select bank0
  4546  1DF6  01A1               	clrf	___awdiv@sign
  4547  1DF7                     l2380:
  4548  1DF7  1FF9               	btfss	___awdiv@divisor+1,7
  4549  1DF8  2DFA               	goto	u3131
  4550  1DF9  2DFB               	goto	u3130
  4551  1DFA                     u3131:
  4552  1DFA  2E02               	goto	l2386
  4553  1DFB                     u3130:
  4554  1DFB                     l2382:
  4555  1DFB  09F8               	comf	___awdiv@divisor,f
  4556  1DFC  09F9               	comf	___awdiv@divisor+1,f
  4557  1DFD  0AF8               	incf	___awdiv@divisor,f
  4558  1DFE  1903               	skipnz
  4559  1DFF  0AF9               	incf	___awdiv@divisor+1,f
  4560  1E00                     l2384:
  4561  1E00  01A1               	clrf	___awdiv@sign
  4562  1E01  0AA1               	incf	___awdiv@sign,f
  4563  1E02                     l2386:
  4564  1E02  1FFB               	btfss	___awdiv@dividend+1,7
  4565  1E03  2E05               	goto	u3141
  4566  1E04  2E06               	goto	u3140
  4567  1E05                     u3141:
  4568  1E05  2E0F               	goto	l2392
  4569  1E06                     u3140:
  4570  1E06                     l2388:
  4571  1E06  09FA               	comf	___awdiv@dividend,f
  4572  1E07  09FB               	comf	___awdiv@dividend+1,f
  4573  1E08  0AFA               	incf	___awdiv@dividend,f
  4574  1E09  1903               	skipnz
  4575  1E0A  0AFB               	incf	___awdiv@dividend+1,f
  4576  1E0B                     l2390:
  4577  1E0B  3001               	movlw	1
  4578  1E0C  00FF               	movwf	btemp+1
  4579  1E0D  087F               	movf	btemp+1,w
  4580  1E0E  06A1               	xorwf	___awdiv@sign,f
  4581  1E0F                     l2392:
  4582  1E0F  01A2               	clrf	___awdiv@quotient
  4583  1E10  01A3               	clrf	___awdiv@quotient+1
  4584  1E11                     l2394:
  4585  1E11  0878               	movf	___awdiv@divisor,w
  4586  1E12  0479               	iorwf	___awdiv@divisor+1,w
  4587  1E13  1903               	btfsc	3,2
  4588  1E14  2E16               	goto	u3151
  4589  1E15  2E17               	goto	u3150
  4590  1E16                     u3151:
  4591  1E16  2E4E               	goto	l2414
  4592  1E17                     u3150:
  4593  1E17                     l2396:
  4594  1E17  01A0               	clrf	___awdiv@counter
  4595  1E18  0AA0               	incf	___awdiv@counter,f
  4596  1E19  2E25               	goto	l2402
  4597  1E1A                     l2398:
  4598  1E1A  3001               	movlw	1
  4599  1E1B                     u3165:
  4600  1E1B  1003               	clrc
  4601  1E1C  0DF8               	rlf	___awdiv@divisor,f
  4602  1E1D  0DF9               	rlf	___awdiv@divisor+1,f
  4603  1E1E  3EFF               	addlw	-1
  4604  1E1F  1D03               	skipz
  4605  1E20  2E1B               	goto	u3165
  4606  1E21                     l2400:
  4607  1E21  3001               	movlw	1
  4608  1E22  00FF               	movwf	btemp+1
  4609  1E23  087F               	movf	btemp+1,w
  4610  1E24  07A0               	addwf	___awdiv@counter,f
  4611  1E25                     l2402:
  4612  1E25  1FF9               	btfss	___awdiv@divisor+1,7
  4613  1E26  2E28               	goto	u3171
  4614  1E27  2E29               	goto	u3170
  4615  1E28                     u3171:
  4616  1E28  2E1A               	goto	l2398
  4617  1E29                     u3170:
  4618  1E29                     l2404:
  4619  1E29  3001               	movlw	1
  4620  1E2A                     u3185:
  4621  1E2A  1003               	clrc
  4622  1E2B  0DA2               	rlf	___awdiv@quotient,f
  4623  1E2C  0DA3               	rlf	___awdiv@quotient+1,f
  4624  1E2D  3EFF               	addlw	-1
  4625  1E2E  1D03               	skipz
  4626  1E2F  2E2A               	goto	u3185
  4627  1E30  0879               	movf	___awdiv@divisor+1,w
  4628  1E31  027B               	subwf	___awdiv@dividend+1,w
  4629  1E32  1D03               	skipz
  4630  1E33  2E36               	goto	u3195
  4631  1E34  0878               	movf	___awdiv@divisor,w
  4632  1E35  027A               	subwf	___awdiv@dividend,w
  4633  1E36                     u3195:
  4634  1E36  1C03               	skipc
  4635  1E37  2E39               	goto	u3191
  4636  1E38  2E3A               	goto	u3190
  4637  1E39                     u3191:
  4638  1E39  2E41               	goto	l2410
  4639  1E3A                     u3190:
  4640  1E3A                     l2406:
  4641  1E3A  0878               	movf	___awdiv@divisor,w
  4642  1E3B  02FA               	subwf	___awdiv@dividend,f
  4643  1E3C  0879               	movf	___awdiv@divisor+1,w
  4644  1E3D  1C03               	skipc
  4645  1E3E  03FB               	decf	___awdiv@dividend+1,f
  4646  1E3F  02FB               	subwf	___awdiv@dividend+1,f
  4647  1E40                     l2408:
  4648  1E40  1422               	bsf	___awdiv@quotient,0
  4649  1E41                     l2410:
  4650  1E41  3001               	movlw	1
  4651  1E42                     u3205:
  4652  1E42  1003               	clrc
  4653  1E43  0CF9               	rrf	___awdiv@divisor+1,f
  4654  1E44  0CF8               	rrf	___awdiv@divisor,f
  4655  1E45  3EFF               	addlw	-1
  4656  1E46  1D03               	skipz
  4657  1E47  2E42               	goto	u3205
  4658  1E48                     l2412:
  4659  1E48  3001               	movlw	1
  4660  1E49  02A0               	subwf	___awdiv@counter,f
  4661  1E4A  1D03               	btfss	3,2
  4662  1E4B  2E4D               	goto	u3211
  4663  1E4C  2E4E               	goto	u3210
  4664  1E4D                     u3211:
  4665  1E4D  2E29               	goto	l2404
  4666  1E4E                     u3210:
  4667  1E4E                     l2414:
  4668  1E4E  0821               	movf	___awdiv@sign,w
  4669  1E4F  1903               	btfsc	3,2
  4670  1E50  2E52               	goto	u3221
  4671  1E51  2E53               	goto	u3220
  4672  1E52                     u3221:
  4673  1E52  2E58               	goto	l2418
  4674  1E53                     u3220:
  4675  1E53                     l2416:
  4676  1E53  09A2               	comf	___awdiv@quotient,f
  4677  1E54  09A3               	comf	___awdiv@quotient+1,f
  4678  1E55  0AA2               	incf	___awdiv@quotient,f
  4679  1E56  1903               	skipnz
  4680  1E57  0AA3               	incf	___awdiv@quotient+1,f
  4681  1E58                     l2418:
  4682  1E58  0823               	movf	___awdiv@quotient+1,w
  4683  1E59  00F9               	movwf	?___awdiv+1
  4684  1E5A  0822               	movf	___awdiv@quotient,w
  4685  1E5B  00F8               	movwf	?___awdiv
  4686  1E5C                     l450:
  4687  1E5C  0008               	return
  4688  1E5D                     __end_of___awdiv:
  4689                           
  4690                           	psect	text5
  4691  1005                     __ptext5:	
  4692 ;; *************** function _isdigit *****************
  4693 ;; Defined at:
  4694 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\isdigit.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  c               1    wreg     unsigned char 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;  c               1    3[COMMON] unsigned char 
  4699 ;; Return value:  Size  Location     Type
  4700 ;;		None               void
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4708 ;;      Params:         0       0       0       0       0
  4709 ;;      Locals:         2       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0
  4711 ;;      Totals:         2       0       0       0       0
  4712 ;;Total ram usage:        2 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    1
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_sprintf
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           
  4723                           ;psect for function _isdigit
  4724  1005                     _isdigit:
  4725                           
  4726                           ;incstack = 0
  4727                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4728                           ;isdigit@c stored from wreg
  4729  1005  00F3               	movwf	isdigit@c
  4730  1006                     l2946:
  4731  1006  01F2               	clrf	_isdigit$697
  4732  1007                     l2948:
  4733  1007  303A               	movlw	58
  4734  1008  0273               	subwf	isdigit@c,w
  4735  1009  1803               	skipnc
  4736  100A  280C               	goto	u4561
  4737  100B  280D               	goto	u4560
  4738  100C                     u4561:
  4739  100C  2815               	goto	l2954
  4740  100D                     u4560:
  4741  100D                     l2950:
  4742  100D  3030               	movlw	48
  4743  100E  0273               	subwf	isdigit@c,w
  4744  100F  1C03               	skipc
  4745  1010  2812               	goto	u4571
  4746  1011  2813               	goto	u4570
  4747  1012                     u4571:
  4748  1012  2815               	goto	l2954
  4749  1013                     u4570:
  4750  1013                     l2952:
  4751  1013  01F2               	clrf	_isdigit$697
  4752  1014  0AF2               	incf	_isdigit$697,f
  4753  1015                     l2954:
  4754  1015  0C72               	rrf	_isdigit$697,w
  4755  1016                     l784:
  4756  1016  0008               	return
  4757  1017                     __end_of_isdigit:
  4758                           
  4759                           	psect	text6
  4760  136D                     __ptext6:	
  4761 ;; *************** function _fround *****************
  4762 ;; Defined at:
  4763 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  prec            1    wreg     unsigned char 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;  prec            1   49[BANK0 ] unsigned char 
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  4   30[BANK0 ] unsigned char 
  4770 ;; Registers used:
  4771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4777 ;;      Params:         0       4       0       0       0
  4778 ;;      Locals:         0       9       0       0       0
  4779 ;;      Temps:          0       7       0       0       0
  4780 ;;      Totals:         0      20       0       0       0
  4781 ;;Total ram usage:       20 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; Hardware stack levels required when called:    3
  4784 ;; This function calls:
  4785 ;;		___flmul
  4786 ;;		___lwdiv
  4787 ;;		___lwmod
  4788 ;; This function is called by:
  4789 ;;		_sprintf
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           
  4794                           ;psect for function _fround
  4795  136D                     _fround:
  4796                           
  4797                           ;incstack = 0
  4798                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4799                           ;fround@prec stored from wreg
  4800  136D  1283               	bcf	3,5	;RP0=0, select bank0
  4801  136E  1303               	bcf	3,6	;RP1=0, select bank0
  4802  136F  00D1               	movwf	fround@prec
  4803  1370                     l2888:
  4804                           
  4805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4806  1370  306E               	movlw	110
  4807  1371  0251               	subwf	fround@prec,w
  4808  1372  1C03               	skipc
  4809  1373  2B75               	goto	u4311
  4810  1374  2B76               	goto	u4310
  4811  1375                     u4311:
  4812  1375  2C83               	goto	l2896
  4813  1376                     u4310:
  4814  1376                     l2890:
  4815                           
  4816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4817  1376  303F               	movlw	63
  4818  1377  00A7               	movwf	___flmul@b+3
  4819  1378  3000               	movlw	0
  4820  1379  00A6               	movwf	___flmul@b+2
  4821  137A  3000               	movlw	0
  4822  137B  00A5               	movwf	___flmul@b+1
  4823  137C  3000               	movlw	0
  4824  137D  00A4               	movwf	___flmul@b
  4825  137E  3064               	movlw	100
  4826  137F  00F7               	movwf	___lwdiv@divisor
  4827  1380  3000               	movlw	0
  4828  1381  00F8               	movwf	___lwdiv@divisor+1
  4829  1382  0851               	movf	fround@prec,w
  4830  1383  00C2               	movwf	??_fround
  4831  1384  01C3               	clrf	??_fround+1
  4832  1385  0842               	movf	??_fround,w
  4833  1386  00F9               	movwf	___lwdiv@dividend
  4834  1387  0843               	movf	??_fround+1,w
  4835  1388  00FA               	movwf	___lwdiv@dividend+1
  4836  1389  160A  158A  2449  160A  118A  	fcall	___lwdiv
  4837  138E  0877               	movf	?___lwdiv,w
  4838  138F  1283               	bcf	3,5	;RP0=0, select bank0
  4839  1390  1303               	bcf	3,6	;RP1=0, select bank0
  4840  1391  00C4               	movwf	??_fround+2
  4841  1392  3001               	movlw	1
  4842  1393                     u4325:
  4843  1393  1003               	clrc
  4844  1394  0DC4               	rlf	??_fround+2,f
  4845  1395  3EFF               	addlw	-1
  4846  1396  1D03               	skipz
  4847  1397  2B93               	goto	u4325
  4848  1398  1003               	clrc
  4849  1399  0D44               	rlf	??_fround+2,w
  4850  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4851  139B  0084               	movwf	4
  4852  139C  160A  158A  2000  160A  118A  	fcall	stringdir
  4853  13A1  00C5               	movwf	??_fround+3
  4854  13A2  160A  158A  2000  160A  118A  	fcall	stringdir
  4855  13A7  00C6               	movwf	??_fround+4
  4856  13A8  160A  158A  2000  160A  118A  	fcall	stringdir
  4857  13AD  00C7               	movwf	??_fround+5
  4858  13AE  160A  158A  2000  160A  118A  	fcall	stringdir
  4859  13B3  00C8               	movwf	??_fround+6
  4860  13B4  0848               	movf	??_fround+6,w
  4861  13B5  00AB               	movwf	___flmul@a+3
  4862  13B6  0847               	movf	??_fround+5,w
  4863  13B7  00AA               	movwf	___flmul@a+2
  4864  13B8  0846               	movf	??_fround+4,w
  4865  13B9  00A9               	movwf	___flmul@a+1
  4866  13BA  0845               	movf	??_fround+3,w
  4867  13BB  00A8               	movwf	___flmul@a
  4868  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  4869  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4870  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  4871  13C3  0827               	movf	?___flmul+3,w
  4872  13C4  00D0               	movwf	_fround$828+3
  4873  13C5  0826               	movf	?___flmul+2,w
  4874  13C6  00CF               	movwf	_fround$828+2
  4875  13C7  0825               	movf	?___flmul+1,w
  4876  13C8  00CE               	movwf	_fround$828+1
  4877  13C9  0824               	movf	?___flmul,w
  4878  13CA  00CD               	movwf	_fround$828
  4879                           
  4880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4881  13CB  300A               	movlw	10
  4882  13CC  00F7               	movwf	___lwdiv@divisor
  4883  13CD  3000               	movlw	0
  4884  13CE  00F8               	movwf	___lwdiv@divisor+1
  4885  13CF  0851               	movf	fround@prec,w
  4886  13D0  00C2               	movwf	??_fround
  4887  13D1  01C3               	clrf	??_fround+1
  4888  13D2  0842               	movf	??_fround,w
  4889  13D3  00F4               	movwf	___lwmod@dividend
  4890  13D4  0843               	movf	??_fround+1,w
  4891  13D5  00F5               	movwf	___lwmod@dividend+1
  4892  13D6  3064               	movlw	100
  4893  13D7  00F2               	movwf	___lwmod@divisor
  4894  13D8  3000               	movlw	0
  4895  13D9  00F3               	movwf	___lwmod@divisor+1
  4896  13DA  160A  158A  240F  160A  118A  	fcall	___lwmod
  4897  13DF  0873               	movf	?___lwmod+1,w
  4898  13E0  00FA               	movwf	___lwdiv@dividend+1
  4899  13E1  0872               	movf	?___lwmod,w
  4900  13E2  00F9               	movwf	___lwdiv@dividend
  4901  13E3  160A  158A  2449  160A  118A  	fcall	___lwdiv
  4902  13E8  0877               	movf	?___lwdiv,w
  4903  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  4904  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  4905  13EB  00C4               	movwf	??_fround+2
  4906  13EC  3001               	movlw	1
  4907  13ED                     u4335:
  4908  13ED  1003               	clrc
  4909  13EE  0DC4               	rlf	??_fround+2,f
  4910  13EF  3EFF               	addlw	-1
  4911  13F0  1D03               	skipz
  4912  13F1  2BED               	goto	u4335
  4913  13F2  1003               	clrc
  4914  13F3  0D44               	rlf	??_fround+2,w
  4915  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4916  13F5  0084               	movwf	4
  4917  13F6  160A  158A  2000  160A  118A  	fcall	stringdir
  4918  13FB  00C5               	movwf	??_fround+3
  4919  13FC  160A  158A  2000  160A  118A  	fcall	stringdir
  4920  1401  00C6               	movwf	??_fround+4
  4921  1402  160A  158A  2000  160A  118A  	fcall	stringdir
  4922  1407  00C7               	movwf	??_fround+5
  4923  1408  160A  158A  2000  160A  118A  	fcall	stringdir
  4924  140D  00C8               	movwf	??_fround+6
  4925  140E  0848               	movf	??_fround+6,w
  4926  140F  00A7               	movwf	___flmul@b+3
  4927  1410  0847               	movf	??_fround+5,w
  4928  1411  00A6               	movwf	___flmul@b+2
  4929  1412  0846               	movf	??_fround+4,w
  4930  1413  00A5               	movwf	___flmul@b+1
  4931  1414  0845               	movf	??_fround+3,w
  4932  1415  00A4               	movwf	___flmul@b
  4933  1416  0850               	movf	_fround$828+3,w
  4934  1417  00AB               	movwf	___flmul@a+3
  4935  1418  084F               	movf	_fround$828+2,w
  4936  1419  00AA               	movwf	___flmul@a+2
  4937  141A  084E               	movf	_fround$828+1,w
  4938  141B  00A9               	movwf	___flmul@a+1
  4939  141C  084D               	movf	_fround$828,w
  4940  141D  00A8               	movwf	___flmul@a
  4941  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  4942  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4943  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4944  1425  0827               	movf	?___flmul+3,w
  4945  1426  00CC               	movwf	_fround$829+3
  4946  1427  0826               	movf	?___flmul+2,w
  4947  1428  00CB               	movwf	_fround$829+2
  4948  1429  0825               	movf	?___flmul+1,w
  4949  142A  00CA               	movwf	_fround$829+1
  4950  142B  0824               	movf	?___flmul,w
  4951  142C  00C9               	movwf	_fround$829
  4952                           
  4953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4954  142D  300A               	movlw	10
  4955  142E  00F2               	movwf	___lwmod@divisor
  4956  142F  3000               	movlw	0
  4957  1430  00F3               	movwf	___lwmod@divisor+1
  4958  1431  0851               	movf	fround@prec,w
  4959  1432  00C2               	movwf	??_fround
  4960  1433  01C3               	clrf	??_fround+1
  4961  1434  0842               	movf	??_fround,w
  4962  1435  00F4               	movwf	___lwmod@dividend
  4963  1436  0843               	movf	??_fround+1,w
  4964  1437  00F5               	movwf	___lwmod@dividend+1
  4965  1438  160A  158A  240F  160A  118A  	fcall	___lwmod
  4966  143D  0872               	movf	?___lwmod,w
  4967  143E  1283               	bcf	3,5	;RP0=0, select bank0
  4968  143F  1303               	bcf	3,6	;RP1=0, select bank0
  4969  1440  00C4               	movwf	??_fround+2
  4970  1441  3001               	movlw	1
  4971  1442                     u4345:
  4972  1442  1003               	clrc
  4973  1443  0DC4               	rlf	??_fround+2,f
  4974  1444  3EFF               	addlw	-1
  4975  1445  1D03               	skipz
  4976  1446  2C42               	goto	u4345
  4977  1447  1003               	clrc
  4978  1448  0D44               	rlf	??_fround+2,w
  4979  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4980  144A  0084               	movwf	4
  4981  144B  160A  158A  2000  160A  118A  	fcall	stringdir
  4982  1450  00C5               	movwf	??_fround+3
  4983  1451  160A  158A  2000  160A  118A  	fcall	stringdir
  4984  1456  00C6               	movwf	??_fround+4
  4985  1457  160A  158A  2000  160A  118A  	fcall	stringdir
  4986  145C  00C7               	movwf	??_fround+5
  4987  145D  160A  158A  2000  160A  118A  	fcall	stringdir
  4988  1462  00C8               	movwf	??_fround+6
  4989  1463  0848               	movf	??_fround+6,w
  4990  1464  00A7               	movwf	___flmul@b+3
  4991  1465  0847               	movf	??_fround+5,w
  4992  1466  00A6               	movwf	___flmul@b+2
  4993  1467  0846               	movf	??_fround+4,w
  4994  1468  00A5               	movwf	___flmul@b+1
  4995  1469  0845               	movf	??_fround+3,w
  4996  146A  00A4               	movwf	___flmul@b
  4997  146B  084C               	movf	_fround$829+3,w
  4998  146C  00AB               	movwf	___flmul@a+3
  4999  146D  084B               	movf	_fround$829+2,w
  5000  146E  00AA               	movwf	___flmul@a+2
  5001  146F  084A               	movf	_fround$829+1,w
  5002  1470  00A9               	movwf	___flmul@a+1
  5003  1471  0849               	movf	_fround$829,w
  5004  1472  00A8               	movwf	___flmul@a
  5005  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5006  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5007  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5008  147A  0827               	movf	?___flmul+3,w
  5009  147B  00C1               	movwf	?_fround+3
  5010  147C  0826               	movf	?___flmul+2,w
  5011  147D  00C0               	movwf	?_fround+2
  5012  147E  0825               	movf	?___flmul+1,w
  5013  147F  00BF               	movwf	?_fround+1
  5014  1480  0824               	movf	?___flmul,w
  5015  1481  00BE               	movwf	?_fround
  5016  1482  2D77               	goto	l203
  5017  1483                     l2896:
  5018  1483  300B               	movlw	11
  5019  1484  0251               	subwf	fround@prec,w
  5020  1485  1C03               	skipc
  5021  1486  2C88               	goto	u4351
  5022  1487  2C89               	goto	u4350
  5023  1488                     u4351:
  5024  1488  2D34               	goto	l2902
  5025  1489                     u4350:
  5026  1489                     l2898:
  5027                           
  5028                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5029  1489  303F               	movlw	63
  5030  148A  00A7               	movwf	___flmul@b+3
  5031  148B  3000               	movlw	0
  5032  148C  00A6               	movwf	___flmul@b+2
  5033  148D  3000               	movlw	0
  5034  148E  00A5               	movwf	___flmul@b+1
  5035  148F  3000               	movlw	0
  5036  1490  00A4               	movwf	___flmul@b
  5037  1491  300A               	movlw	10
  5038  1492  00F7               	movwf	___lwdiv@divisor
  5039  1493  3000               	movlw	0
  5040  1494  00F8               	movwf	___lwdiv@divisor+1
  5041  1495  0851               	movf	fround@prec,w
  5042  1496  00C2               	movwf	??_fround
  5043  1497  01C3               	clrf	??_fround+1
  5044  1498  0842               	movf	??_fround,w
  5045  1499  00F9               	movwf	___lwdiv@dividend
  5046  149A  0843               	movf	??_fround+1,w
  5047  149B  00FA               	movwf	___lwdiv@dividend+1
  5048  149C  160A  158A  2449  160A  118A  	fcall	___lwdiv
  5049  14A1  0877               	movf	?___lwdiv,w
  5050  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5051  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5052  14A4  00C4               	movwf	??_fround+2
  5053  14A5  3001               	movlw	1
  5054  14A6                     u4365:
  5055  14A6  1003               	clrc
  5056  14A7  0DC4               	rlf	??_fround+2,f
  5057  14A8  3EFF               	addlw	-1
  5058  14A9  1D03               	skipz
  5059  14AA  2CA6               	goto	u4365
  5060  14AB  1003               	clrc
  5061  14AC  0D44               	rlf	??_fround+2,w
  5062  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5063  14AE  0084               	movwf	4
  5064  14AF  160A  158A  2000  160A  118A  	fcall	stringdir
  5065  14B4  00C5               	movwf	??_fround+3
  5066  14B5  160A  158A  2000  160A  118A  	fcall	stringdir
  5067  14BA  00C6               	movwf	??_fround+4
  5068  14BB  160A  158A  2000  160A  118A  	fcall	stringdir
  5069  14C0  00C7               	movwf	??_fround+5
  5070  14C1  160A  158A  2000  160A  118A  	fcall	stringdir
  5071  14C6  00C8               	movwf	??_fround+6
  5072  14C7  0848               	movf	??_fround+6,w
  5073  14C8  00AB               	movwf	___flmul@a+3
  5074  14C9  0847               	movf	??_fround+5,w
  5075  14CA  00AA               	movwf	___flmul@a+2
  5076  14CB  0846               	movf	??_fround+4,w
  5077  14CC  00A9               	movwf	___flmul@a+1
  5078  14CD  0845               	movf	??_fround+3,w
  5079  14CE  00A8               	movwf	___flmul@a
  5080  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5081  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5082  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5083  14D6  0827               	movf	?___flmul+3,w
  5084  14D7  00D0               	movwf	_fround$828+3
  5085  14D8  0826               	movf	?___flmul+2,w
  5086  14D9  00CF               	movwf	_fround$828+2
  5087  14DA  0825               	movf	?___flmul+1,w
  5088  14DB  00CE               	movwf	_fround$828+1
  5089  14DC  0824               	movf	?___flmul,w
  5090  14DD  00CD               	movwf	_fround$828
  5091                           
  5092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5093  14DE  300A               	movlw	10
  5094  14DF  00F2               	movwf	___lwmod@divisor
  5095  14E0  3000               	movlw	0
  5096  14E1  00F3               	movwf	___lwmod@divisor+1
  5097  14E2  0851               	movf	fround@prec,w
  5098  14E3  00C2               	movwf	??_fround
  5099  14E4  01C3               	clrf	??_fround+1
  5100  14E5  0842               	movf	??_fround,w
  5101  14E6  00F4               	movwf	___lwmod@dividend
  5102  14E7  0843               	movf	??_fround+1,w
  5103  14E8  00F5               	movwf	___lwmod@dividend+1
  5104  14E9  160A  158A  240F  160A  118A  	fcall	___lwmod
  5105  14EE  0872               	movf	?___lwmod,w
  5106  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5107  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5108  14F1  00C4               	movwf	??_fround+2
  5109  14F2  3001               	movlw	1
  5110  14F3                     u4375:
  5111  14F3  1003               	clrc
  5112  14F4  0DC4               	rlf	??_fround+2,f
  5113  14F5  3EFF               	addlw	-1
  5114  14F6  1D03               	skipz
  5115  14F7  2CF3               	goto	u4375
  5116  14F8  1003               	clrc
  5117  14F9  0D44               	rlf	??_fround+2,w
  5118  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5119  14FB  0084               	movwf	4
  5120  14FC  160A  158A  2000  160A  118A  	fcall	stringdir
  5121  1501  00C5               	movwf	??_fround+3
  5122  1502  160A  158A  2000  160A  118A  	fcall	stringdir
  5123  1507  00C6               	movwf	??_fround+4
  5124  1508  160A  158A  2000  160A  118A  	fcall	stringdir
  5125  150D  00C7               	movwf	??_fround+5
  5126  150E  160A  158A  2000  160A  118A  	fcall	stringdir
  5127  1513  00C8               	movwf	??_fround+6
  5128  1514  0848               	movf	??_fround+6,w
  5129  1515  00A7               	movwf	___flmul@b+3
  5130  1516  0847               	movf	??_fround+5,w
  5131  1517  00A6               	movwf	___flmul@b+2
  5132  1518  0846               	movf	??_fround+4,w
  5133  1519  00A5               	movwf	___flmul@b+1
  5134  151A  0845               	movf	??_fround+3,w
  5135  151B  00A4               	movwf	___flmul@b
  5136  151C  0850               	movf	_fround$828+3,w
  5137  151D  00AB               	movwf	___flmul@a+3
  5138  151E  084F               	movf	_fround$828+2,w
  5139  151F  00AA               	movwf	___flmul@a+2
  5140  1520  084E               	movf	_fround$828+1,w
  5141  1521  00A9               	movwf	___flmul@a+1
  5142  1522  084D               	movf	_fround$828,w
  5143  1523  00A8               	movwf	___flmul@a
  5144  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5145  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5146  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5147  152B  0827               	movf	?___flmul+3,w
  5148  152C  00C1               	movwf	?_fround+3
  5149  152D  0826               	movf	?___flmul+2,w
  5150  152E  00C0               	movwf	?_fround+2
  5151  152F  0825               	movf	?___flmul+1,w
  5152  1530  00BF               	movwf	?_fround+1
  5153  1531  0824               	movf	?___flmul,w
  5154  1532  00BE               	movwf	?_fround
  5155  1533  2D77               	goto	l203
  5156  1534                     l2902:
  5157                           
  5158                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5159  1534  303F               	movlw	63
  5160  1535  00A7               	movwf	___flmul@b+3
  5161  1536  3000               	movlw	0
  5162  1537  00A6               	movwf	___flmul@b+2
  5163  1538  3000               	movlw	0
  5164  1539  00A5               	movwf	___flmul@b+1
  5165  153A  3000               	movlw	0
  5166  153B  00A4               	movwf	___flmul@b
  5167  153C  0851               	movf	fround@prec,w
  5168  153D  00C2               	movwf	??_fround
  5169  153E  3001               	movlw	1
  5170  153F                     u4385:
  5171  153F  1003               	clrc
  5172  1540  0DC2               	rlf	??_fround,f
  5173  1541  3EFF               	addlw	-1
  5174  1542  1D03               	skipz
  5175  1543  2D3F               	goto	u4385
  5176  1544  1003               	clrc
  5177  1545  0D42               	rlf	??_fround,w
  5178  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5179  1547  0084               	movwf	4
  5180  1548  160A  158A  2000  160A  118A  	fcall	stringdir
  5181  154D  00C3               	movwf	??_fround+1
  5182  154E  160A  158A  2000  160A  118A  	fcall	stringdir
  5183  1553  00C4               	movwf	??_fround+2
  5184  1554  160A  158A  2000  160A  118A  	fcall	stringdir
  5185  1559  00C5               	movwf	??_fround+3
  5186  155A  160A  158A  2000  160A  118A  	fcall	stringdir
  5187  155F  00C6               	movwf	??_fround+4
  5188  1560  0846               	movf	??_fround+4,w
  5189  1561  00AB               	movwf	___flmul@a+3
  5190  1562  0845               	movf	??_fround+3,w
  5191  1563  00AA               	movwf	___flmul@a+2
  5192  1564  0844               	movf	??_fround+2,w
  5193  1565  00A9               	movwf	___flmul@a+1
  5194  1566  0843               	movf	??_fround+1,w
  5195  1567  00A8               	movwf	___flmul@a
  5196  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5197  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5198  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5199  156F  0827               	movf	?___flmul+3,w
  5200  1570  00C1               	movwf	?_fround+3
  5201  1571  0826               	movf	?___flmul+2,w
  5202  1572  00C0               	movwf	?_fround+2
  5203  1573  0825               	movf	?___flmul+1,w
  5204  1574  00BF               	movwf	?_fround+1
  5205  1575  0824               	movf	?___flmul,w
  5206  1576  00BE               	movwf	?_fround
  5207  1577                     l203:
  5208  1577  0008               	return
  5209  1578                     __end_of_fround:
  5210                           
  5211                           	psect	text7
  5212  1C0F                     __ptext7:	
  5213 ;; *************** function ___lwmod *****************
  5214 ;; Defined at:
  5215 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  divisor         2    2[COMMON] unsigned int 
  5218 ;;  dividend        2    4[COMMON] unsigned int 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  counter         1    6[COMMON] unsigned char 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  2    2[COMMON] unsigned int 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2, status,0, btemp+1
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5230 ;;      Params:         4       0       0       0       0
  5231 ;;      Locals:         1       0       0       0       0
  5232 ;;      Temps:          0       0       0       0       0
  5233 ;;      Totals:         5       0       0       0       0
  5234 ;;Total ram usage:        5 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; Hardware stack levels required when called:    1
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_fround
  5241 ;;		_puts_float
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           
  5246                           ;psect for function ___lwmod
  5247  1C0F                     ___lwmod:
  5248  1C0F                     l2486:	
  5249                           ;incstack = 0
  5250                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  5251                           
  5252  1C0F  0872               	movf	___lwmod@divisor,w
  5253  1C10  0473               	iorwf	___lwmod@divisor+1,w
  5254  1C11  1903               	btfsc	3,2
  5255  1C12  2C14               	goto	u3391
  5256  1C13  2C15               	goto	u3390
  5257  1C14                     u3391:
  5258  1C14  2C44               	goto	l2504
  5259  1C15                     u3390:
  5260  1C15                     l2488:
  5261  1C15  01F6               	clrf	___lwmod@counter
  5262  1C16  0AF6               	incf	___lwmod@counter,f
  5263  1C17  2C23               	goto	l2494
  5264  1C18                     l2490:
  5265  1C18  3001               	movlw	1
  5266  1C19                     u3405:
  5267  1C19  1003               	clrc
  5268  1C1A  0DF2               	rlf	___lwmod@divisor,f
  5269  1C1B  0DF3               	rlf	___lwmod@divisor+1,f
  5270  1C1C  3EFF               	addlw	-1
  5271  1C1D  1D03               	skipz
  5272  1C1E  2C19               	goto	u3405
  5273  1C1F                     l2492:
  5274  1C1F  3001               	movlw	1
  5275  1C20  00FF               	movwf	btemp+1
  5276  1C21  087F               	movf	btemp+1,w
  5277  1C22  07F6               	addwf	___lwmod@counter,f
  5278  1C23                     l2494:
  5279  1C23  1FF3               	btfss	___lwmod@divisor+1,7
  5280  1C24  2C26               	goto	u3411
  5281  1C25  2C27               	goto	u3410
  5282  1C26                     u3411:
  5283  1C26  2C18               	goto	l2490
  5284  1C27                     u3410:
  5285  1C27                     l2496:
  5286  1C27  0873               	movf	___lwmod@divisor+1,w
  5287  1C28  0275               	subwf	___lwmod@dividend+1,w
  5288  1C29  1D03               	skipz
  5289  1C2A  2C2D               	goto	u3425
  5290  1C2B  0872               	movf	___lwmod@divisor,w
  5291  1C2C  0274               	subwf	___lwmod@dividend,w
  5292  1C2D                     u3425:
  5293  1C2D  1C03               	skipc
  5294  1C2E  2C30               	goto	u3421
  5295  1C2F  2C31               	goto	u3420
  5296  1C30                     u3421:
  5297  1C30  2C37               	goto	l2500
  5298  1C31                     u3420:
  5299  1C31                     l2498:
  5300  1C31  0872               	movf	___lwmod@divisor,w
  5301  1C32  02F4               	subwf	___lwmod@dividend,f
  5302  1C33  0873               	movf	___lwmod@divisor+1,w
  5303  1C34  1C03               	skipc
  5304  1C35  03F5               	decf	___lwmod@dividend+1,f
  5305  1C36  02F5               	subwf	___lwmod@dividend+1,f
  5306  1C37                     l2500:
  5307  1C37  3001               	movlw	1
  5308  1C38                     u3435:
  5309  1C38  1003               	clrc
  5310  1C39  0CF3               	rrf	___lwmod@divisor+1,f
  5311  1C3A  0CF2               	rrf	___lwmod@divisor,f
  5312  1C3B  3EFF               	addlw	-1
  5313  1C3C  1D03               	skipz
  5314  1C3D  2C38               	goto	u3435
  5315  1C3E                     l2502:
  5316  1C3E  3001               	movlw	1
  5317  1C3F  02F6               	subwf	___lwmod@counter,f
  5318  1C40  1D03               	btfss	3,2
  5319  1C41  2C43               	goto	u3441
  5320  1C42  2C44               	goto	u3440
  5321  1C43                     u3441:
  5322  1C43  2C27               	goto	l2496
  5323  1C44                     u3440:
  5324  1C44                     l2504:
  5325  1C44  0875               	movf	___lwmod@dividend+1,w
  5326  1C45  00F3               	movwf	?___lwmod+1
  5327  1C46  0874               	movf	___lwmod@dividend,w
  5328  1C47  00F2               	movwf	?___lwmod
  5329  1C48                     l613:
  5330  1C48  0008               	return
  5331  1C49                     __end_of___lwmod:
  5332                           
  5333                           	psect	text8
  5334  1C49                     __ptext8:	
  5335 ;; *************** function ___lwdiv *****************
  5336 ;; Defined at:
  5337 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  divisor         2    7[COMMON] unsigned int 
  5340 ;;  dividend        2    9[COMMON] unsigned int 
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  quotient        2    0[BANK0 ] unsigned int 
  5343 ;;  counter         1    2[BANK0 ] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  2    7[COMMON] unsigned int 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, btemp+1
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5353 ;;      Params:         4       0       0       0       0
  5354 ;;      Locals:         0       3       0       0       0
  5355 ;;      Temps:          0       0       0       0       0
  5356 ;;      Totals:         4       3       0       0       0
  5357 ;;Total ram usage:        7 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    1
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_fround
  5364 ;;		_puts_float
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           
  5369                           ;psect for function ___lwdiv
  5370  1C49                     ___lwdiv:
  5371  1C49                     l2460:	
  5372                           ;incstack = 0
  5373                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  5374                           
  5375  1C49  1283               	bcf	3,5	;RP0=0, select bank0
  5376  1C4A  1303               	bcf	3,6	;RP1=0, select bank0
  5377  1C4B  01A0               	clrf	___lwdiv@quotient
  5378  1C4C  01A1               	clrf	___lwdiv@quotient+1
  5379  1C4D                     l2462:
  5380  1C4D  0877               	movf	___lwdiv@divisor,w
  5381  1C4E  0478               	iorwf	___lwdiv@divisor+1,w
  5382  1C4F  1903               	btfsc	3,2
  5383  1C50  2C52               	goto	u3321
  5384  1C51  2C53               	goto	u3320
  5385  1C52                     u3321:
  5386  1C52  2C8A               	goto	l2482
  5387  1C53                     u3320:
  5388  1C53                     l2464:
  5389  1C53  01A2               	clrf	___lwdiv@counter
  5390  1C54  0AA2               	incf	___lwdiv@counter,f
  5391  1C55  2C61               	goto	l2470
  5392  1C56                     l2466:
  5393  1C56  3001               	movlw	1
  5394  1C57                     u3335:
  5395  1C57  1003               	clrc
  5396  1C58  0DF7               	rlf	___lwdiv@divisor,f
  5397  1C59  0DF8               	rlf	___lwdiv@divisor+1,f
  5398  1C5A  3EFF               	addlw	-1
  5399  1C5B  1D03               	skipz
  5400  1C5C  2C57               	goto	u3335
  5401  1C5D                     l2468:
  5402  1C5D  3001               	movlw	1
  5403  1C5E  00FF               	movwf	btemp+1
  5404  1C5F  087F               	movf	btemp+1,w
  5405  1C60  07A2               	addwf	___lwdiv@counter,f
  5406  1C61                     l2470:
  5407  1C61  1FF8               	btfss	___lwdiv@divisor+1,7
  5408  1C62  2C64               	goto	u3341
  5409  1C63  2C65               	goto	u3340
  5410  1C64                     u3341:
  5411  1C64  2C56               	goto	l2466
  5412  1C65                     u3340:
  5413  1C65                     l2472:
  5414  1C65  3001               	movlw	1
  5415  1C66                     u3355:
  5416  1C66  1003               	clrc
  5417  1C67  0DA0               	rlf	___lwdiv@quotient,f
  5418  1C68  0DA1               	rlf	___lwdiv@quotient+1,f
  5419  1C69  3EFF               	addlw	-1
  5420  1C6A  1D03               	skipz
  5421  1C6B  2C66               	goto	u3355
  5422  1C6C  0878               	movf	___lwdiv@divisor+1,w
  5423  1C6D  027A               	subwf	___lwdiv@dividend+1,w
  5424  1C6E  1D03               	skipz
  5425  1C6F  2C72               	goto	u3365
  5426  1C70  0877               	movf	___lwdiv@divisor,w
  5427  1C71  0279               	subwf	___lwdiv@dividend,w
  5428  1C72                     u3365:
  5429  1C72  1C03               	skipc
  5430  1C73  2C75               	goto	u3361
  5431  1C74  2C76               	goto	u3360
  5432  1C75                     u3361:
  5433  1C75  2C7D               	goto	l2478
  5434  1C76                     u3360:
  5435  1C76                     l2474:
  5436  1C76  0877               	movf	___lwdiv@divisor,w
  5437  1C77  02F9               	subwf	___lwdiv@dividend,f
  5438  1C78  0878               	movf	___lwdiv@divisor+1,w
  5439  1C79  1C03               	skipc
  5440  1C7A  03FA               	decf	___lwdiv@dividend+1,f
  5441  1C7B  02FA               	subwf	___lwdiv@dividend+1,f
  5442  1C7C                     l2476:
  5443  1C7C  1420               	bsf	___lwdiv@quotient,0
  5444  1C7D                     l2478:
  5445  1C7D  3001               	movlw	1
  5446  1C7E                     u3375:
  5447  1C7E  1003               	clrc
  5448  1C7F  0CF8               	rrf	___lwdiv@divisor+1,f
  5449  1C80  0CF7               	rrf	___lwdiv@divisor,f
  5450  1C81  3EFF               	addlw	-1
  5451  1C82  1D03               	skipz
  5452  1C83  2C7E               	goto	u3375
  5453  1C84                     l2480:
  5454  1C84  3001               	movlw	1
  5455  1C85  02A2               	subwf	___lwdiv@counter,f
  5456  1C86  1D03               	btfss	3,2
  5457  1C87  2C89               	goto	u3381
  5458  1C88  2C8A               	goto	u3380
  5459  1C89                     u3381:
  5460  1C89  2C65               	goto	l2472
  5461  1C8A                     u3380:
  5462  1C8A                     l2482:
  5463  1C8A  0821               	movf	___lwdiv@quotient+1,w
  5464  1C8B  00F8               	movwf	?___lwdiv+1
  5465  1C8C  0820               	movf	___lwdiv@quotient,w
  5466  1C8D  00F7               	movwf	?___lwdiv
  5467  1C8E                     l603:
  5468  1C8E  0008               	return
  5469  1C8F                     __end_of___lwdiv:
  5470                           
  5471                           	psect	text9
  5472  10D3                     __ptext9:	
  5473 ;; *************** function __tdiv_to_l_ *****************
  5474 ;; Defined at:
  5475 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftdivl.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  f1              4    2[COMMON] float 
  5478 ;;  f2              4    6[COMMON] float 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;  quot            4    3[BANK0 ] unsigned long 
  5481 ;;  exp1            1    8[BANK0 ] unsigned char 
  5482 ;;  cntr            1    7[BANK0 ] unsigned char 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  4    2[COMMON] unsigned long 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0, btemp+1
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5492 ;;      Params:         8       0       0       0       0
  5493 ;;      Locals:         0       6       0       0       0
  5494 ;;      Temps:          0       3       0       0       0
  5495 ;;      Totals:         8       9       0       0       0
  5496 ;;Total ram usage:       17 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    1
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_sprintf
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           
  5507                           ;psect for function __tdiv_to_l_
  5508  10D3                     __tdiv_to_l_:
  5509  10D3                     l2958:	
  5510                           ;incstack = 0
  5511                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  5512                           
  5513  10D3  0872               	movf	__tdiv_to_l_@f1,w
  5514  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  5515  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  5516  10D6  00A0               	movwf	??__tdiv_to_l_
  5517  10D7  0873               	movf	__tdiv_to_l_@f1+1,w
  5518  10D8  00A1               	movwf	??__tdiv_to_l_+1
  5519  10D9  0874               	movf	__tdiv_to_l_@f1+2,w
  5520  10DA  00A2               	movwf	??__tdiv_to_l_+2
  5521  10DB  1003               	clrc
  5522  10DC  0D21               	rlf	??__tdiv_to_l_+1,w
  5523  10DD  0D22               	rlf	??__tdiv_to_l_+2,w
  5524  10DE  00FF               	movwf	btemp+1
  5525  10DF  087F               	movf	btemp+1,w
  5526  10E0  00A8               	movwf	__tdiv_to_l_@exp1
  5527  10E1  0828               	movf	__tdiv_to_l_@exp1,w
  5528  10E2  1D03               	btfss	3,2
  5529  10E3  28E5               	goto	u4581
  5530  10E4  28E6               	goto	u4580
  5531  10E5                     u4581:
  5532  10E5  28EF               	goto	l2964
  5533  10E6                     u4580:
  5534  10E6                     l2960:
  5535  10E6  3000               	movlw	0
  5536  10E7  00F5               	movwf	?__tdiv_to_l_+3
  5537  10E8  3000               	movlw	0
  5538  10E9  00F4               	movwf	?__tdiv_to_l_+2
  5539  10EA  3000               	movlw	0
  5540  10EB  00F3               	movwf	?__tdiv_to_l_+1
  5541  10EC  3000               	movlw	0
  5542  10ED  00F2               	movwf	?__tdiv_to_l_
  5543  10EE  298F               	goto	l514
  5544  10EF                     l2964:
  5545  10EF  0876               	movf	__tdiv_to_l_@f2,w
  5546  10F0  00A0               	movwf	??__tdiv_to_l_
  5547  10F1  0877               	movf	__tdiv_to_l_@f2+1,w
  5548  10F2  00A1               	movwf	??__tdiv_to_l_+1
  5549  10F3  0878               	movf	__tdiv_to_l_@f2+2,w
  5550  10F4  00A2               	movwf	??__tdiv_to_l_+2
  5551  10F5  1003               	clrc
  5552  10F6  0D21               	rlf	??__tdiv_to_l_+1,w
  5553  10F7  0D22               	rlf	??__tdiv_to_l_+2,w
  5554  10F8  00FF               	movwf	btemp+1
  5555  10F9  087F               	movf	btemp+1,w
  5556  10FA  00A7               	movwf	__tdiv_to_l_@cntr
  5557  10FB  0827               	movf	__tdiv_to_l_@cntr,w
  5558  10FC  1D03               	btfss	3,2
  5559  10FD  28FF               	goto	u4591
  5560  10FE  2900               	goto	u4590
  5561  10FF                     u4591:
  5562  10FF  2901               	goto	l515
  5563  1100                     u4590:
  5564  1100  28E6               	goto	l2960
  5565  1101                     l515:
  5566  1101  17F3               	bsf	__tdiv_to_l_@f1+1,7
  5567  1102                     l2970:
  5568  1102  30FF               	movlw	255
  5569  1103  05F2               	andwf	__tdiv_to_l_@f1,f
  5570  1104  30FF               	movlw	255
  5571  1105  05F3               	andwf	__tdiv_to_l_@f1+1,f
  5572  1106  3000               	movlw	0
  5573  1107  05F4               	andwf	__tdiv_to_l_@f1+2,f
  5574  1108                     l2972:
  5575  1108  17F7               	bsf	__tdiv_to_l_@f2+1,7
  5576  1109  30FF               	movlw	255
  5577  110A  05F6               	andwf	__tdiv_to_l_@f2,f
  5578  110B  30FF               	movlw	255
  5579  110C  05F7               	andwf	__tdiv_to_l_@f2+1,f
  5580  110D  3000               	movlw	0
  5581  110E  05F8               	andwf	__tdiv_to_l_@f2+2,f
  5582  110F  3000               	movlw	0
  5583  1110  00A6               	movwf	__tdiv_to_l_@quot+3
  5584  1111  3000               	movlw	0
  5585  1112  00A5               	movwf	__tdiv_to_l_@quot+2
  5586  1113  3000               	movlw	0
  5587  1114  00A4               	movwf	__tdiv_to_l_@quot+1
  5588  1115  3000               	movlw	0
  5589  1116  00A3               	movwf	__tdiv_to_l_@quot
  5590  1117                     l2974:
  5591  1117  307F               	movlw	127
  5592  1118  02A8               	subwf	__tdiv_to_l_@exp1,f
  5593  1119                     l2976:
  5594  1119  3098               	movlw	152
  5595  111A  0727               	addwf	__tdiv_to_l_@cntr,w
  5596  111B  00A0               	movwf	??__tdiv_to_l_
  5597  111C  0820               	movf	??__tdiv_to_l_,w
  5598  111D  02A8               	subwf	__tdiv_to_l_@exp1,f
  5599  111E                     l2978:
  5600  111E  3018               	movlw	24
  5601  111F  00FF               	movwf	btemp+1
  5602  1120  087F               	movf	btemp+1,w
  5603  1121  00A7               	movwf	__tdiv_to_l_@cntr
  5604  1122                     l2980:
  5605  1122  3001               	movlw	1
  5606  1123  00A0               	movwf	??__tdiv_to_l_
  5607  1124                     u4605:
  5608  1124  1003               	clrc
  5609  1125  0DA3               	rlf	__tdiv_to_l_@quot,f
  5610  1126  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  5611  1127  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  5612  1128  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  5613  1129  0BA0               	decfsz	??__tdiv_to_l_,f
  5614  112A  2924               	goto	u4605
  5615  112B                     l2982:
  5616  112B  0878               	movf	__tdiv_to_l_@f2+2,w
  5617  112C  0274               	subwf	__tdiv_to_l_@f1+2,w
  5618  112D  1D03               	skipz
  5619  112E  2935               	goto	u4615
  5620  112F  0877               	movf	__tdiv_to_l_@f2+1,w
  5621  1130  0273               	subwf	__tdiv_to_l_@f1+1,w
  5622  1131  1D03               	skipz
  5623  1132  2935               	goto	u4615
  5624  1133  0876               	movf	__tdiv_to_l_@f2,w
  5625  1134  0272               	subwf	__tdiv_to_l_@f1,w
  5626  1135                     u4615:
  5627  1135  1C03               	skipc
  5628  1136  2938               	goto	u4611
  5629  1137  2939               	goto	u4610
  5630  1138                     u4611:
  5631  1138  2944               	goto	l2988
  5632  1139                     u4610:
  5633  1139                     l2984:
  5634  1139  0876               	movf	__tdiv_to_l_@f2,w
  5635  113A  02F2               	subwf	__tdiv_to_l_@f1,f
  5636  113B  0877               	movf	__tdiv_to_l_@f2+1,w
  5637  113C  1C03               	skipc
  5638  113D  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  5639  113E  02F3               	subwf	__tdiv_to_l_@f1+1,f
  5640  113F  0878               	movf	__tdiv_to_l_@f2+2,w
  5641  1140  1C03               	skipc
  5642  1141  0A78               	incf	__tdiv_to_l_@f2+2,w
  5643  1142  02F4               	subwf	__tdiv_to_l_@f1+2,f
  5644  1143                     l2986:
  5645  1143  1423               	bsf	__tdiv_to_l_@quot,0
  5646  1144                     l2988:
  5647  1144  3001               	movlw	1
  5648  1145                     u4625:
  5649  1145  1003               	clrc
  5650  1146  0DF2               	rlf	__tdiv_to_l_@f1,f
  5651  1147  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  5652  1148  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  5653  1149  3EFF               	addlw	-1
  5654  114A  1D03               	skipz
  5655  114B  2945               	goto	u4625
  5656  114C                     l2990:
  5657  114C  3001               	movlw	1
  5658  114D  02A7               	subwf	__tdiv_to_l_@cntr,f
  5659  114E  1D03               	btfss	3,2
  5660  114F  2951               	goto	u4631
  5661  1150  2952               	goto	u4630
  5662  1151                     u4631:
  5663  1151  2922               	goto	l2980
  5664  1152                     u4630:
  5665  1152                     l518:
  5666  1152  1FA8               	btfss	__tdiv_to_l_@exp1,7
  5667  1153  2955               	goto	u4641
  5668  1154  2956               	goto	u4640
  5669  1155                     u4641:
  5670  1155  2970               	goto	l3002
  5671  1156                     u4640:
  5672  1156                     l2992:
  5673  1156  0828               	movf	__tdiv_to_l_@exp1,w
  5674  1157  3A80               	xorlw	128
  5675  1158  3E97               	addlw	151
  5676  1159  1803               	skipnc
  5677  115A  295C               	goto	u4651
  5678  115B  295D               	goto	u4650
  5679  115C                     u4651:
  5680  115C  295E               	goto	l2998
  5681  115D                     u4650:
  5682  115D  28E6               	goto	l2960
  5683  115E                     l2998:
  5684  115E  3001               	movlw	1
  5685  115F                     u4665:
  5686  115F  1003               	clrc
  5687  1160  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  5688  1161  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  5689  1162  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  5690  1163  0CA3               	rrf	__tdiv_to_l_@quot,f
  5691  1164  3EFF               	addlw	-1
  5692  1165  1D03               	skipz
  5693  1166  295F               	goto	u4665
  5694  1167                     l3000:
  5695  1167  3001               	movlw	1
  5696  1168  00FF               	movwf	btemp+1
  5697  1169  087F               	movf	btemp+1,w
  5698  116A  07A8               	addwf	__tdiv_to_l_@exp1,f
  5699  116B  1D03               	btfss	3,2
  5700  116C  296E               	goto	u4671
  5701  116D  296F               	goto	u4670
  5702  116E                     u4671:
  5703  116E  295E               	goto	l2998
  5704  116F                     u4670:
  5705  116F  2987               	goto	l3010
  5706  1170                     l3002:
  5707  1170  3018               	movlw	24
  5708  1171  0228               	subwf	__tdiv_to_l_@exp1,w
  5709  1172  1C03               	skipc
  5710  1173  2975               	goto	u4681
  5711  1174  2976               	goto	u4680
  5712  1175                     u4681:
  5713  1175  2982               	goto	l525
  5714  1176                     u4680:
  5715  1176  28E6               	goto	l2960
  5716  1177                     l3008:
  5717  1177  3001               	movlw	1
  5718  1178  00A0               	movwf	??__tdiv_to_l_
  5719  1179                     u4695:
  5720  1179  1003               	clrc
  5721  117A  0DA3               	rlf	__tdiv_to_l_@quot,f
  5722  117B  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  5723  117C  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  5724  117D  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  5725  117E  0BA0               	decfsz	??__tdiv_to_l_,f
  5726  117F  2979               	goto	u4695
  5727  1180  3001               	movlw	1
  5728  1181  02A8               	subwf	__tdiv_to_l_@exp1,f
  5729  1182                     l525:
  5730  1182  0828               	movf	__tdiv_to_l_@exp1,w
  5731  1183  1D03               	btfss	3,2
  5732  1184  2986               	goto	u4701
  5733  1185  2987               	goto	u4700
  5734  1186                     u4701:
  5735  1186  2977               	goto	l3008
  5736  1187                     u4700:
  5737  1187                     l3010:
  5738  1187  0826               	movf	__tdiv_to_l_@quot+3,w
  5739  1188  00F5               	movwf	?__tdiv_to_l_+3
  5740  1189  0825               	movf	__tdiv_to_l_@quot+2,w
  5741  118A  00F4               	movwf	?__tdiv_to_l_+2
  5742  118B  0824               	movf	__tdiv_to_l_@quot+1,w
  5743  118C  00F3               	movwf	?__tdiv_to_l_+1
  5744  118D  0823               	movf	__tdiv_to_l_@quot,w
  5745  118E  00F2               	movwf	?__tdiv_to_l_
  5746  118F                     l514:
  5747  118F  0008               	return
  5748  1190                     __end_of__tdiv_to_l_:
  5749                           
  5750                           	psect	text10
  5751  0882                     __ptext10:	
  5752 ;; *************** function __div_to_l_ *****************
  5753 ;; Defined at:
  5754 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fldivl.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  f1              4    2[COMMON] unsigned long 
  5757 ;;  f2              4    6[COMMON] unsigned long 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  quot            4    0[BANK0 ] unsigned long 
  5760 ;;  exp1            1    5[BANK0 ] unsigned char 
  5761 ;;  cntr            1    4[BANK0 ] unsigned char 
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  4    2[COMMON] unsigned long 
  5764 ;; Registers used:
  5765 ;;		wreg, status,2, status,0, btemp+1
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5771 ;;      Params:         8       0       0       0       0
  5772 ;;      Locals:         0       6       0       0       0
  5773 ;;      Temps:          1       0       0       0       0
  5774 ;;      Totals:         9       6       0       0       0
  5775 ;;Total ram usage:       15 bytes
  5776 ;; Hardware stack levels used:    1
  5777 ;; Hardware stack levels required when called:    1
  5778 ;; This function calls:
  5779 ;;		Nothing
  5780 ;; This function is called by:
  5781 ;;		_sprintf
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           
  5786                           ;psect for function __div_to_l_
  5787  0882                     __div_to_l_:
  5788  0882                     l3014:	
  5789                           ;incstack = 0
  5790                           ; Regs used in __div_to_l_: [wreg+status,2+status,0+btemp+1]
  5791                           
  5792  0882  1003               	clrc
  5793  0883  0D74               	rlf	__div_to_l_@f1+2,w
  5794  0884  0D75               	rlf	__div_to_l_@f1+3,w
  5795  0885  00FF               	movwf	btemp+1
  5796  0886  087F               	movf	btemp+1,w
  5797  0887  1283               	bcf	3,5	;RP0=0, select bank0
  5798  0888  1303               	bcf	3,6	;RP1=0, select bank0
  5799  0889  00A5               	movwf	__div_to_l_@exp1
  5800  088A  0825               	movf	__div_to_l_@exp1,w
  5801  088B  1D03               	btfss	3,2
  5802  088C  288E               	goto	u4711
  5803  088D  288F               	goto	u4710
  5804  088E                     u4711:
  5805  088E  2898               	goto	l3020
  5806  088F                     u4710:
  5807  088F                     l3016:
  5808  088F  3000               	movlw	0
  5809  0890  00F5               	movwf	?__div_to_l_+3
  5810  0891  3000               	movlw	0
  5811  0892  00F4               	movwf	?__div_to_l_+2
  5812  0893  3000               	movlw	0
  5813  0894  00F3               	movwf	?__div_to_l_+1
  5814  0895  3000               	movlw	0
  5815  0896  00F2               	movwf	?__div_to_l_
  5816  0897  293F               	goto	l467
  5817  0898                     l3020:
  5818  0898  1003               	clrc
  5819  0899  0D78               	rlf	__div_to_l_@f2+2,w
  5820  089A  0D79               	rlf	__div_to_l_@f2+3,w
  5821  089B  00FF               	movwf	btemp+1
  5822  089C  087F               	movf	btemp+1,w
  5823  089D  00A4               	movwf	__div_to_l_@cntr
  5824  089E  0824               	movf	__div_to_l_@cntr,w
  5825  089F  1D03               	btfss	3,2
  5826  08A0  28A2               	goto	u4721
  5827  08A1  28A3               	goto	u4720
  5828  08A2                     u4721:
  5829  08A2  28A4               	goto	l468
  5830  08A3                     u4720:
  5831  08A3  288F               	goto	l3016
  5832  08A4                     l468:
  5833  08A4  17F4               	bsf	__div_to_l_@f1+2,7
  5834  08A5                     l3026:
  5835  08A5  30FF               	movlw	255
  5836  08A6  05F2               	andwf	__div_to_l_@f1,f
  5837  08A7  30FF               	movlw	255
  5838  08A8  05F3               	andwf	__div_to_l_@f1+1,f
  5839  08A9  30FF               	movlw	255
  5840  08AA  05F4               	andwf	__div_to_l_@f1+2,f
  5841  08AB  3000               	movlw	0
  5842  08AC  05F5               	andwf	__div_to_l_@f1+3,f
  5843  08AD                     l3028:
  5844  08AD  17F8               	bsf	__div_to_l_@f2+2,7
  5845  08AE  30FF               	movlw	255
  5846  08AF  05F6               	andwf	__div_to_l_@f2,f
  5847  08B0  30FF               	movlw	255
  5848  08B1  05F7               	andwf	__div_to_l_@f2+1,f
  5849  08B2  30FF               	movlw	255
  5850  08B3  05F8               	andwf	__div_to_l_@f2+2,f
  5851  08B4  3000               	movlw	0
  5852  08B5  05F9               	andwf	__div_to_l_@f2+3,f
  5853  08B6  3000               	movlw	0
  5854  08B7  00A3               	movwf	__div_to_l_@quot+3
  5855  08B8  3000               	movlw	0
  5856  08B9  00A2               	movwf	__div_to_l_@quot+2
  5857  08BA  3000               	movlw	0
  5858  08BB  00A1               	movwf	__div_to_l_@quot+1
  5859  08BC  3000               	movlw	0
  5860  08BD  00A0               	movwf	__div_to_l_@quot
  5861  08BE                     l3030:
  5862  08BE  307F               	movlw	127
  5863  08BF  02A5               	subwf	__div_to_l_@exp1,f
  5864  08C0                     l3032:
  5865  08C0  30A0               	movlw	160
  5866  08C1  0724               	addwf	__div_to_l_@cntr,w
  5867  08C2  00FA               	movwf	??__div_to_l_
  5868  08C3  087A               	movf	??__div_to_l_,w
  5869  08C4  02A5               	subwf	__div_to_l_@exp1,f
  5870  08C5                     l3034:
  5871  08C5  3020               	movlw	32
  5872  08C6  00FF               	movwf	btemp+1
  5873  08C7  087F               	movf	btemp+1,w
  5874  08C8  00A4               	movwf	__div_to_l_@cntr
  5875  08C9                     l3036:
  5876  08C9  3001               	movlw	1
  5877  08CA  00FA               	movwf	??__div_to_l_
  5878  08CB                     u4735:
  5879  08CB  1003               	clrc
  5880  08CC  0DA0               	rlf	__div_to_l_@quot,f
  5881  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  5882  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  5883  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  5884  08D0  0BFA               	decfsz	??__div_to_l_,f
  5885  08D1  28CB               	goto	u4735
  5886  08D2                     l3038:
  5887  08D2  0879               	movf	__div_to_l_@f2+3,w
  5888  08D3  0275               	subwf	__div_to_l_@f1+3,w
  5889  08D4  1D03               	skipz
  5890  08D5  28E0               	goto	u4745
  5891  08D6  0878               	movf	__div_to_l_@f2+2,w
  5892  08D7  0274               	subwf	__div_to_l_@f1+2,w
  5893  08D8  1D03               	skipz
  5894  08D9  28E0               	goto	u4745
  5895  08DA  0877               	movf	__div_to_l_@f2+1,w
  5896  08DB  0273               	subwf	__div_to_l_@f1+1,w
  5897  08DC  1D03               	skipz
  5898  08DD  28E0               	goto	u4745
  5899  08DE  0876               	movf	__div_to_l_@f2,w
  5900  08DF  0272               	subwf	__div_to_l_@f1,w
  5901  08E0                     u4745:
  5902  08E0  1C03               	skipc
  5903  08E1  28E3               	goto	u4741
  5904  08E2  28E4               	goto	u4740
  5905  08E3                     u4741:
  5906  08E3  28F3               	goto	l3044
  5907  08E4                     u4740:
  5908  08E4                     l3040:
  5909  08E4  0876               	movf	__div_to_l_@f2,w
  5910  08E5  02F2               	subwf	__div_to_l_@f1,f
  5911  08E6  0877               	movf	__div_to_l_@f2+1,w
  5912  08E7  1C03               	skipc
  5913  08E8  0F77               	incfsz	__div_to_l_@f2+1,w
  5914  08E9  02F3               	subwf	__div_to_l_@f1+1,f
  5915  08EA  0878               	movf	__div_to_l_@f2+2,w
  5916  08EB  1C03               	skipc
  5917  08EC  0F78               	incfsz	__div_to_l_@f2+2,w
  5918  08ED  02F4               	subwf	__div_to_l_@f1+2,f
  5919  08EE  0879               	movf	__div_to_l_@f2+3,w
  5920  08EF  1C03               	skipc
  5921  08F0  0F79               	incfsz	__div_to_l_@f2+3,w
  5922  08F1  02F5               	subwf	__div_to_l_@f1+3,f
  5923  08F2                     l3042:
  5924  08F2  1420               	bsf	__div_to_l_@quot,0
  5925  08F3                     l3044:
  5926  08F3  3001               	movlw	1
  5927  08F4  00FA               	movwf	??__div_to_l_
  5928  08F5                     u4755:
  5929  08F5  1003               	clrc
  5930  08F6  0DF2               	rlf	__div_to_l_@f1,f
  5931  08F7  0DF3               	rlf	__div_to_l_@f1+1,f
  5932  08F8  0DF4               	rlf	__div_to_l_@f1+2,f
  5933  08F9  0DF5               	rlf	__div_to_l_@f1+3,f
  5934  08FA  0BFA               	decfsz	??__div_to_l_,f
  5935  08FB  28F5               	goto	u4755
  5936  08FC                     l3046:
  5937  08FC  3001               	movlw	1
  5938  08FD  02A4               	subwf	__div_to_l_@cntr,f
  5939  08FE  1D03               	btfss	3,2
  5940  08FF  2901               	goto	u4761
  5941  0900  2902               	goto	u4760
  5942  0901                     u4761:
  5943  0901  28C9               	goto	l3036
  5944  0902                     u4760:
  5945  0902                     l471:
  5946  0902  1FA5               	btfss	__div_to_l_@exp1,7
  5947  0903  2905               	goto	u4771
  5948  0904  2906               	goto	u4770
  5949  0905                     u4771:
  5950  0905  2920               	goto	l3058
  5951  0906                     u4770:
  5952  0906                     l3048:
  5953  0906  0825               	movf	__div_to_l_@exp1,w
  5954  0907  3A80               	xorlw	128
  5955  0908  3E9F               	addlw	159
  5956  0909  1803               	skipnc
  5957  090A  290C               	goto	u4781
  5958  090B  290D               	goto	u4780
  5959  090C                     u4781:
  5960  090C  290E               	goto	l3054
  5961  090D                     u4780:
  5962  090D  288F               	goto	l3016
  5963  090E                     l3054:
  5964  090E  3001               	movlw	1
  5965  090F                     u4795:
  5966  090F  1003               	clrc
  5967  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  5968  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  5969  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  5970  0913  0CA0               	rrf	__div_to_l_@quot,f
  5971  0914  3EFF               	addlw	-1
  5972  0915  1D03               	skipz
  5973  0916  290F               	goto	u4795
  5974  0917                     l3056:
  5975  0917  3001               	movlw	1
  5976  0918  00FF               	movwf	btemp+1
  5977  0919  087F               	movf	btemp+1,w
  5978  091A  07A5               	addwf	__div_to_l_@exp1,f
  5979  091B  1D03               	btfss	3,2
  5980  091C  291E               	goto	u4801
  5981  091D  291F               	goto	u4800
  5982  091E                     u4801:
  5983  091E  290E               	goto	l3054
  5984  091F                     u4800:
  5985  091F  2937               	goto	l3066
  5986  0920                     l3058:
  5987  0920  3020               	movlw	32
  5988  0921  0225               	subwf	__div_to_l_@exp1,w
  5989  0922  1C03               	skipc
  5990  0923  2925               	goto	u4811
  5991  0924  2926               	goto	u4810
  5992  0925                     u4811:
  5993  0925  2932               	goto	l478
  5994  0926                     u4810:
  5995  0926  288F               	goto	l3016
  5996  0927                     l3064:
  5997  0927  3001               	movlw	1
  5998  0928  00FA               	movwf	??__div_to_l_
  5999  0929                     u4825:
  6000  0929  1003               	clrc
  6001  092A  0DA0               	rlf	__div_to_l_@quot,f
  6002  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  6003  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  6004  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  6005  092E  0BFA               	decfsz	??__div_to_l_,f
  6006  092F  2929               	goto	u4825
  6007  0930  3001               	movlw	1
  6008  0931  02A5               	subwf	__div_to_l_@exp1,f
  6009  0932                     l478:
  6010  0932  0825               	movf	__div_to_l_@exp1,w
  6011  0933  1D03               	btfss	3,2
  6012  0934  2936               	goto	u4831
  6013  0935  2937               	goto	u4830
  6014  0936                     u4831:
  6015  0936  2927               	goto	l3064
  6016  0937                     u4830:
  6017  0937                     l3066:
  6018  0937  0823               	movf	__div_to_l_@quot+3,w
  6019  0938  00F5               	movwf	?__div_to_l_+3
  6020  0939  0822               	movf	__div_to_l_@quot+2,w
  6021  093A  00F4               	movwf	?__div_to_l_+2
  6022  093B  0821               	movf	__div_to_l_@quot+1,w
  6023  093C  00F3               	movwf	?__div_to_l_+1
  6024  093D  0820               	movf	__div_to_l_@quot,w
  6025  093E  00F2               	movwf	?__div_to_l_
  6026  093F                     l467:
  6027  093F  0008               	return
  6028  0940                     __end_of__div_to_l_:
  6029                           
  6030                           	psect	text11
  6031  1B5F                     __ptext11:	
  6032 ;; *************** function ___wmul *****************
  6033 ;; Defined at:
  6034 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  multiplier      2    2[COMMON] unsigned int 
  6037 ;;  multiplicand    2    4[COMMON] unsigned int 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  product         2    6[COMMON] unsigned int 
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  2    2[COMMON] unsigned int 
  6042 ;; Registers used:
  6043 ;;		wreg, status,2, status,0
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6049 ;;      Params:         4       0       0       0       0
  6050 ;;      Locals:         2       0       0       0       0
  6051 ;;      Temps:          0       0       0       0       0
  6052 ;;      Totals:         6       0       0       0       0
  6053 ;;Total ram usage:        6 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; Hardware stack levels required when called:    1
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_sprintf
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           
  6064                           ;psect for function ___wmul
  6065  1B5F                     ___wmul:
  6066  1B5F                     l3070:	
  6067                           ;incstack = 0
  6068                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6069                           
  6070  1B5F  01F6               	clrf	___wmul@product
  6071  1B60  01F7               	clrf	___wmul@product+1
  6072  1B61                     l3072:
  6073  1B61  1C72               	btfss	___wmul@multiplier,0
  6074  1B62  2B64               	goto	u4841
  6075  1B63  2B65               	goto	u4840
  6076  1B64                     u4841:
  6077  1B64  2B6B               	goto	l297
  6078  1B65                     u4840:
  6079  1B65                     l3074:
  6080  1B65  0874               	movf	___wmul@multiplicand,w
  6081  1B66  07F6               	addwf	___wmul@product,f
  6082  1B67  1803               	skipnc
  6083  1B68  0AF7               	incf	___wmul@product+1,f
  6084  1B69  0875               	movf	___wmul@multiplicand+1,w
  6085  1B6A  07F7               	addwf	___wmul@product+1,f
  6086  1B6B                     l297:
  6087  1B6B  3001               	movlw	1
  6088  1B6C                     u4855:
  6089  1B6C  1003               	clrc
  6090  1B6D  0DF4               	rlf	___wmul@multiplicand,f
  6091  1B6E  0DF5               	rlf	___wmul@multiplicand+1,f
  6092  1B6F  3EFF               	addlw	-1
  6093  1B70  1D03               	skipz
  6094  1B71  2B6C               	goto	u4855
  6095  1B72                     l3076:
  6096  1B72  3001               	movlw	1
  6097  1B73                     u4865:
  6098  1B73  1003               	clrc
  6099  1B74  0CF3               	rrf	___wmul@multiplier+1,f
  6100  1B75  0CF2               	rrf	___wmul@multiplier,f
  6101  1B76  3EFF               	addlw	-1
  6102  1B77  1D03               	skipz
  6103  1B78  2B73               	goto	u4865
  6104  1B79                     l3078:
  6105  1B79  0872               	movf	___wmul@multiplier,w
  6106  1B7A  0473               	iorwf	___wmul@multiplier+1,w
  6107  1B7B  1D03               	btfss	3,2
  6108  1B7C  2B7E               	goto	u4871
  6109  1B7D  2B7F               	goto	u4870
  6110  1B7E                     u4871:
  6111  1B7E  2B61               	goto	l3072
  6112  1B7F                     u4870:
  6113  1B7F                     l3080:
  6114  1B7F  0877               	movf	___wmul@product+1,w
  6115  1B80  00F3               	movwf	?___wmul+1
  6116  1B81  0876               	movf	___wmul@product,w
  6117  1B82  00F2               	movwf	?___wmul
  6118  1B83                     l299:
  6119  1B83  0008               	return
  6120  1B84                     __end_of___wmul:
  6121                           
  6122                           	psect	text12
  6123  1CDF                     __ptext12:	
  6124 ;; *************** function ___llmod *****************
  6125 ;; Defined at:
  6126 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\llmod.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;  divisor         4    2[COMMON] unsigned long 
  6129 ;;  dividend        4    6[COMMON] unsigned long 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  counter         1   11[COMMON] unsigned char 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  4    2[COMMON] unsigned long 
  6134 ;; Registers used:
  6135 ;;		wreg, status,2, status,0, btemp+1
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6141 ;;      Params:         8       0       0       0       0
  6142 ;;      Locals:         1       0       0       0       0
  6143 ;;      Temps:          1       0       0       0       0
  6144 ;;      Totals:        10       0       0       0       0
  6145 ;;Total ram usage:       10 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:    1
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_sprintf
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           
  6156                           ;psect for function ___llmod
  6157  1CDF                     ___llmod:
  6158  1CDF                     l3188:	
  6159                           ;incstack = 0
  6160                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  6161                           
  6162  1CDF  0875               	movf	___llmod@divisor+3,w
  6163  1CE0  0474               	iorwf	___llmod@divisor+2,w
  6164  1CE1  0473               	iorwf	___llmod@divisor+1,w
  6165  1CE2  0472               	iorwf	___llmod@divisor,w
  6166  1CE3  1903               	skipnz
  6167  1CE4  2CE6               	goto	u5161
  6168  1CE5  2CE7               	goto	u5160
  6169  1CE6                     u5161:
  6170  1CE6  2D2A               	goto	l3206
  6171  1CE7                     u5160:
  6172  1CE7                     l3190:
  6173  1CE7  01FB               	clrf	___llmod@counter
  6174  1CE8  0AFB               	incf	___llmod@counter,f
  6175  1CE9  2CF7               	goto	l3196
  6176  1CEA                     l3192:
  6177  1CEA  3001               	movlw	1
  6178  1CEB  00FA               	movwf	??___llmod
  6179  1CEC                     u5175:
  6180  1CEC  1003               	clrc
  6181  1CED  0DF2               	rlf	___llmod@divisor,f
  6182  1CEE  0DF3               	rlf	___llmod@divisor+1,f
  6183  1CEF  0DF4               	rlf	___llmod@divisor+2,f
  6184  1CF0  0DF5               	rlf	___llmod@divisor+3,f
  6185  1CF1  0BFA               	decfsz	??___llmod,f
  6186  1CF2  2CEC               	goto	u5175
  6187  1CF3                     l3194:
  6188  1CF3  3001               	movlw	1
  6189  1CF4  00FF               	movwf	btemp+1
  6190  1CF5  087F               	movf	btemp+1,w
  6191  1CF6  07FB               	addwf	___llmod@counter,f
  6192  1CF7                     l3196:
  6193  1CF7  1FF5               	btfss	___llmod@divisor+3,7
  6194  1CF8  2CFA               	goto	u5181
  6195  1CF9  2CFB               	goto	u5180
  6196  1CFA                     u5181:
  6197  1CFA  2CEA               	goto	l3192
  6198  1CFB                     u5180:
  6199  1CFB                     l3198:
  6200  1CFB  0875               	movf	___llmod@divisor+3,w
  6201  1CFC  0279               	subwf	___llmod@dividend+3,w
  6202  1CFD  1D03               	skipz
  6203  1CFE  2D09               	goto	u5195
  6204  1CFF  0874               	movf	___llmod@divisor+2,w
  6205  1D00  0278               	subwf	___llmod@dividend+2,w
  6206  1D01  1D03               	skipz
  6207  1D02  2D09               	goto	u5195
  6208  1D03  0873               	movf	___llmod@divisor+1,w
  6209  1D04  0277               	subwf	___llmod@dividend+1,w
  6210  1D05  1D03               	skipz
  6211  1D06  2D09               	goto	u5195
  6212  1D07  0872               	movf	___llmod@divisor,w
  6213  1D08  0276               	subwf	___llmod@dividend,w
  6214  1D09                     u5195:
  6215  1D09  1C03               	skipc
  6216  1D0A  2D0C               	goto	u5191
  6217  1D0B  2D0D               	goto	u5190
  6218  1D0C                     u5191:
  6219  1D0C  2D1B               	goto	l3202
  6220  1D0D                     u5190:
  6221  1D0D                     l3200:
  6222  1D0D  0872               	movf	___llmod@divisor,w
  6223  1D0E  02F6               	subwf	___llmod@dividend,f
  6224  1D0F  0873               	movf	___llmod@divisor+1,w
  6225  1D10  1C03               	skipc
  6226  1D11  0F73               	incfsz	___llmod@divisor+1,w
  6227  1D12  02F7               	subwf	___llmod@dividend+1,f
  6228  1D13  0874               	movf	___llmod@divisor+2,w
  6229  1D14  1C03               	skipc
  6230  1D15  0F74               	incfsz	___llmod@divisor+2,w
  6231  1D16  02F8               	subwf	___llmod@dividend+2,f
  6232  1D17  0875               	movf	___llmod@divisor+3,w
  6233  1D18  1C03               	skipc
  6234  1D19  0F75               	incfsz	___llmod@divisor+3,w
  6235  1D1A  02F9               	subwf	___llmod@dividend+3,f
  6236  1D1B                     l3202:
  6237  1D1B  3001               	movlw	1
  6238  1D1C                     u5205:
  6239  1D1C  1003               	clrc
  6240  1D1D  0CF5               	rrf	___llmod@divisor+3,f
  6241  1D1E  0CF4               	rrf	___llmod@divisor+2,f
  6242  1D1F  0CF3               	rrf	___llmod@divisor+1,f
  6243  1D20  0CF2               	rrf	___llmod@divisor,f
  6244  1D21  3EFF               	addlw	-1
  6245  1D22  1D03               	skipz
  6246  1D23  2D1C               	goto	u5205
  6247  1D24                     l3204:
  6248  1D24  3001               	movlw	1
  6249  1D25  02FB               	subwf	___llmod@counter,f
  6250  1D26  1D03               	btfss	3,2
  6251  1D27  2D29               	goto	u5211
  6252  1D28  2D2A               	goto	u5210
  6253  1D29                     u5211:
  6254  1D29  2CFB               	goto	l3198
  6255  1D2A                     u5210:
  6256  1D2A                     l3206:
  6257  1D2A  0879               	movf	___llmod@dividend+3,w
  6258  1D2B  00F5               	movwf	?___llmod+3
  6259  1D2C  0878               	movf	___llmod@dividend+2,w
  6260  1D2D  00F4               	movwf	?___llmod+2
  6261  1D2E  0877               	movf	___llmod@dividend+1,w
  6262  1D2F  00F3               	movwf	?___llmod+1
  6263  1D30  0876               	movf	___llmod@dividend,w
  6264  1D31  00F2               	movwf	?___llmod
  6265  1D32                     l553:
  6266  1D32  0008               	return
  6267  1D33                     __end_of___llmod:
  6268                           
  6269                           	psect	text13
  6270  1D8C                     __ptext13:	
  6271 ;; *************** function ___lldiv *****************
  6272 ;; Defined at:
  6273 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;  divisor         4    2[COMMON] unsigned long 
  6276 ;;  dividend        4    6[COMMON] unsigned long 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  quotient        4    0[BANK0 ] unsigned long 
  6279 ;;  counter         1    4[BANK0 ] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  4    2[COMMON] unsigned long 
  6282 ;; Registers used:
  6283 ;;		wreg, status,2, status,0, btemp+1
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6289 ;;      Params:         8       0       0       0       0
  6290 ;;      Locals:         0       5       0       0       0
  6291 ;;      Temps:          1       0       0       0       0
  6292 ;;      Totals:         9       5       0       0       0
  6293 ;;Total ram usage:       14 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    1
  6296 ;; This function calls:
  6297 ;;		Nothing
  6298 ;; This function is called by:
  6299 ;;		_sprintf
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           
  6304                           ;psect for function ___lldiv
  6305  1D8C                     ___lldiv:
  6306  1D8C                     l3084:	
  6307                           ;incstack = 0
  6308                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  6309                           
  6310  1D8C  3000               	movlw	0
  6311  1D8D  1283               	bcf	3,5	;RP0=0, select bank0
  6312  1D8E  1303               	bcf	3,6	;RP1=0, select bank0
  6313  1D8F  00A3               	movwf	___lldiv@quotient+3
  6314  1D90  3000               	movlw	0
  6315  1D91  00A2               	movwf	___lldiv@quotient+2
  6316  1D92  3000               	movlw	0
  6317  1D93  00A1               	movwf	___lldiv@quotient+1
  6318  1D94  3000               	movlw	0
  6319  1D95  00A0               	movwf	___lldiv@quotient
  6320  1D96  0875               	movf	___lldiv@divisor+3,w
  6321  1D97  0474               	iorwf	___lldiv@divisor+2,w
  6322  1D98  0473               	iorwf	___lldiv@divisor+1,w
  6323  1D99  0472               	iorwf	___lldiv@divisor,w
  6324  1D9A  1903               	skipnz
  6325  1D9B  2D9D               	goto	u4881
  6326  1D9C  2D9E               	goto	u4880
  6327  1D9D                     u4881:
  6328  1D9D  2DEB               	goto	l3106
  6329  1D9E                     u4880:
  6330  1D9E                     l3086:
  6331  1D9E  01A4               	clrf	___lldiv@counter
  6332  1D9F  0AA4               	incf	___lldiv@counter,f
  6333  1DA0  2DAE               	goto	l3092
  6334  1DA1                     l3088:
  6335  1DA1  3001               	movlw	1
  6336  1DA2  00FA               	movwf	??___lldiv
  6337  1DA3                     u4895:
  6338  1DA3  1003               	clrc
  6339  1DA4  0DF2               	rlf	___lldiv@divisor,f
  6340  1DA5  0DF3               	rlf	___lldiv@divisor+1,f
  6341  1DA6  0DF4               	rlf	___lldiv@divisor+2,f
  6342  1DA7  0DF5               	rlf	___lldiv@divisor+3,f
  6343  1DA8  0BFA               	decfsz	??___lldiv,f
  6344  1DA9  2DA3               	goto	u4895
  6345  1DAA                     l3090:
  6346  1DAA  3001               	movlw	1
  6347  1DAB  00FF               	movwf	btemp+1
  6348  1DAC  087F               	movf	btemp+1,w
  6349  1DAD  07A4               	addwf	___lldiv@counter,f
  6350  1DAE                     l3092:
  6351  1DAE  1FF5               	btfss	___lldiv@divisor+3,7
  6352  1DAF  2DB1               	goto	u4901
  6353  1DB0  2DB2               	goto	u4900
  6354  1DB1                     u4901:
  6355  1DB1  2DA1               	goto	l3088
  6356  1DB2                     u4900:
  6357  1DB2                     l3094:
  6358  1DB2  3001               	movlw	1
  6359  1DB3  00FA               	movwf	??___lldiv
  6360  1DB4                     u4915:
  6361  1DB4  1003               	clrc
  6362  1DB5  0DA0               	rlf	___lldiv@quotient,f
  6363  1DB6  0DA1               	rlf	___lldiv@quotient+1,f
  6364  1DB7  0DA2               	rlf	___lldiv@quotient+2,f
  6365  1DB8  0DA3               	rlf	___lldiv@quotient+3,f
  6366  1DB9  0BFA               	decfsz	??___lldiv,f
  6367  1DBA  2DB4               	goto	u4915
  6368  1DBB                     l3096:
  6369  1DBB  0875               	movf	___lldiv@divisor+3,w
  6370  1DBC  0279               	subwf	___lldiv@dividend+3,w
  6371  1DBD  1D03               	skipz
  6372  1DBE  2DC9               	goto	u4925
  6373  1DBF  0874               	movf	___lldiv@divisor+2,w
  6374  1DC0  0278               	subwf	___lldiv@dividend+2,w
  6375  1DC1  1D03               	skipz
  6376  1DC2  2DC9               	goto	u4925
  6377  1DC3  0873               	movf	___lldiv@divisor+1,w
  6378  1DC4  0277               	subwf	___lldiv@dividend+1,w
  6379  1DC5  1D03               	skipz
  6380  1DC6  2DC9               	goto	u4925
  6381  1DC7  0872               	movf	___lldiv@divisor,w
  6382  1DC8  0276               	subwf	___lldiv@dividend,w
  6383  1DC9                     u4925:
  6384  1DC9  1C03               	skipc
  6385  1DCA  2DCC               	goto	u4921
  6386  1DCB  2DCD               	goto	u4920
  6387  1DCC                     u4921:
  6388  1DCC  2DDC               	goto	l3102
  6389  1DCD                     u4920:
  6390  1DCD                     l3098:
  6391  1DCD  0872               	movf	___lldiv@divisor,w
  6392  1DCE  02F6               	subwf	___lldiv@dividend,f
  6393  1DCF  0873               	movf	___lldiv@divisor+1,w
  6394  1DD0  1C03               	skipc
  6395  1DD1  0F73               	incfsz	___lldiv@divisor+1,w
  6396  1DD2  02F7               	subwf	___lldiv@dividend+1,f
  6397  1DD3  0874               	movf	___lldiv@divisor+2,w
  6398  1DD4  1C03               	skipc
  6399  1DD5  0F74               	incfsz	___lldiv@divisor+2,w
  6400  1DD6  02F8               	subwf	___lldiv@dividend+2,f
  6401  1DD7  0875               	movf	___lldiv@divisor+3,w
  6402  1DD8  1C03               	skipc
  6403  1DD9  0F75               	incfsz	___lldiv@divisor+3,w
  6404  1DDA  02F9               	subwf	___lldiv@dividend+3,f
  6405  1DDB                     l3100:
  6406  1DDB  1420               	bsf	___lldiv@quotient,0
  6407  1DDC                     l3102:
  6408  1DDC  3001               	movlw	1
  6409  1DDD                     u4935:
  6410  1DDD  1003               	clrc
  6411  1DDE  0CF5               	rrf	___lldiv@divisor+3,f
  6412  1DDF  0CF4               	rrf	___lldiv@divisor+2,f
  6413  1DE0  0CF3               	rrf	___lldiv@divisor+1,f
  6414  1DE1  0CF2               	rrf	___lldiv@divisor,f
  6415  1DE2  3EFF               	addlw	-1
  6416  1DE3  1D03               	skipz
  6417  1DE4  2DDD               	goto	u4935
  6418  1DE5                     l3104:
  6419  1DE5  3001               	movlw	1
  6420  1DE6  02A4               	subwf	___lldiv@counter,f
  6421  1DE7  1D03               	btfss	3,2
  6422  1DE8  2DEA               	goto	u4941
  6423  1DE9  2DEB               	goto	u4940
  6424  1DEA                     u4941:
  6425  1DEA  2DB2               	goto	l3094
  6426  1DEB                     u4940:
  6427  1DEB                     l3106:
  6428  1DEB  0823               	movf	___lldiv@quotient+3,w
  6429  1DEC  00F5               	movwf	?___lldiv+3
  6430  1DED  0822               	movf	___lldiv@quotient+2,w
  6431  1DEE  00F4               	movwf	?___lldiv+2
  6432  1DEF  0821               	movf	___lldiv@quotient+1,w
  6433  1DF0  00F3               	movwf	?___lldiv+1
  6434  1DF1  0820               	movf	___lldiv@quotient,w
  6435  1DF2  00F2               	movwf	?___lldiv
  6436  1DF3                     l333:
  6437  1DF3  0008               	return
  6438  1DF4                     __end_of___lldiv:
  6439                           
  6440                           	psect	text14
  6441  1E5D                     __ptext14:	
  6442 ;; *************** function ___fltol *****************
  6443 ;; Defined at:
  6444 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  f1              4   49[BANK0 ] unsigned long 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  exp1            1   58[BANK0 ] unsigned char 
  6449 ;;  sign1           1   57[BANK0 ] unsigned char 
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  4   49[BANK0 ] long 
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0, btemp+1
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6459 ;;      Params:         0       4       0       0       0
  6460 ;;      Locals:         0       2       0       0       0
  6461 ;;      Temps:          0       4       0       0       0
  6462 ;;      Totals:         0      10       0       0       0
  6463 ;;Total ram usage:       10 bytes
  6464 ;; Hardware stack levels used:    1
  6465 ;; Hardware stack levels required when called:    1
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_sprintf
  6470 ;;		_puts_float
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           
  6475                           ;psect for function ___fltol
  6476  1E5D                     ___fltol:
  6477  1E5D                     l3150:	
  6478                           ;incstack = 0
  6479                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  6480                           
  6481  1E5D  1003               	clrc
  6482  1E5E  1283               	bcf	3,5	;RP0=0, select bank0
  6483  1E5F  1303               	bcf	3,6	;RP1=0, select bank0
  6484  1E60  0D53               	rlf	___fltol@f1+2,w
  6485  1E61  0D54               	rlf	___fltol@f1+3,w
  6486  1E62  00FF               	movwf	btemp+1
  6487  1E63  087F               	movf	btemp+1,w
  6488  1E64  00DA               	movwf	___fltol@exp1
  6489  1E65  085A               	movf	___fltol@exp1,w
  6490  1E66  1D03               	btfss	3,2
  6491  1E67  2E69               	goto	u5061
  6492  1E68  2E6A               	goto	u5060
  6493  1E69                     u5061:
  6494  1E69  2E73               	goto	l3156
  6495  1E6A                     u5060:
  6496  1E6A                     l3152:
  6497  1E6A  3000               	movlw	0
  6498  1E6B  00D4               	movwf	?___fltol+3
  6499  1E6C  3000               	movlw	0
  6500  1E6D  00D3               	movwf	?___fltol+2
  6501  1E6E  3000               	movlw	0
  6502  1E6F  00D2               	movwf	?___fltol+1
  6503  1E70  3000               	movlw	0
  6504  1E71  00D1               	movwf	?___fltol
  6505  1E72  2ED8               	goto	l500
  6506  1E73                     l3156:
  6507  1E73  0851               	movf	___fltol@f1,w
  6508  1E74  00D5               	movwf	??___fltol
  6509  1E75  0852               	movf	___fltol@f1+1,w
  6510  1E76  00D6               	movwf	??___fltol+1
  6511  1E77  0853               	movf	___fltol@f1+2,w
  6512  1E78  00D7               	movwf	??___fltol+2
  6513  1E79  0854               	movf	___fltol@f1+3,w
  6514  1E7A  00D8               	movwf	??___fltol+3
  6515  1E7B  301F               	movlw	31
  6516  1E7C                     u5075:
  6517  1E7C  1003               	clrc
  6518  1E7D  0CD8               	rrf	??___fltol+3,f
  6519  1E7E  0CD7               	rrf	??___fltol+2,f
  6520  1E7F  0CD6               	rrf	??___fltol+1,f
  6521  1E80  0CD5               	rrf	??___fltol,f
  6522  1E81                     u5070:
  6523  1E81  3EFF               	addlw	-1
  6524  1E82  1D03               	skipz
  6525  1E83  2E7C               	goto	u5075
  6526  1E84  0855               	movf	??___fltol,w
  6527  1E85  00FF               	movwf	btemp+1
  6528  1E86  087F               	movf	btemp+1,w
  6529  1E87  00D9               	movwf	___fltol@sign1
  6530  1E88                     l3158:
  6531  1E88  17D3               	bsf	___fltol@f1+2,7
  6532  1E89                     l3160:
  6533  1E89  30FF               	movlw	255
  6534  1E8A  05D1               	andwf	___fltol@f1,f
  6535  1E8B  30FF               	movlw	255
  6536  1E8C  05D2               	andwf	___fltol@f1+1,f
  6537  1E8D  30FF               	movlw	255
  6538  1E8E  05D3               	andwf	___fltol@f1+2,f
  6539  1E8F  3000               	movlw	0
  6540  1E90  05D4               	andwf	___fltol@f1+3,f
  6541  1E91                     l3162:
  6542  1E91  3096               	movlw	150
  6543  1E92  02DA               	subwf	___fltol@exp1,f
  6544  1E93                     l3164:
  6545  1E93  1FDA               	btfss	___fltol@exp1,7
  6546  1E94  2E96               	goto	u5081
  6547  1E95  2E97               	goto	u5080
  6548  1E96                     u5081:
  6549  1E96  2EB1               	goto	l3176
  6550  1E97                     u5080:
  6551  1E97                     l3166:
  6552  1E97  085A               	movf	___fltol@exp1,w
  6553  1E98  3A80               	xorlw	128
  6554  1E99  3E97               	addlw	151
  6555  1E9A  1803               	skipnc
  6556  1E9B  2E9D               	goto	u5091
  6557  1E9C  2E9E               	goto	u5090
  6558  1E9D                     u5091:
  6559  1E9D  2E9F               	goto	l3172
  6560  1E9E                     u5090:
  6561  1E9E  2E6A               	goto	l3152
  6562  1E9F                     l3172:
  6563  1E9F  3001               	movlw	1
  6564  1EA0                     u5105:
  6565  1EA0  1003               	clrc
  6566  1EA1  0CD4               	rrf	___fltol@f1+3,f
  6567  1EA2  0CD3               	rrf	___fltol@f1+2,f
  6568  1EA3  0CD2               	rrf	___fltol@f1+1,f
  6569  1EA4  0CD1               	rrf	___fltol@f1,f
  6570  1EA5  3EFF               	addlw	-1
  6571  1EA6  1D03               	skipz
  6572  1EA7  2EA0               	goto	u5105
  6573  1EA8                     l3174:
  6574  1EA8  3001               	movlw	1
  6575  1EA9  00FF               	movwf	btemp+1
  6576  1EAA  087F               	movf	btemp+1,w
  6577  1EAB  07DA               	addwf	___fltol@exp1,f
  6578  1EAC  1D03               	btfss	3,2
  6579  1EAD  2EAF               	goto	u5111
  6580  1EAE  2EB0               	goto	u5110
  6581  1EAF                     u5111:
  6582  1EAF  2E9F               	goto	l3172
  6583  1EB0                     u5110:
  6584  1EB0  2EC8               	goto	l3184
  6585  1EB1                     l3176:
  6586  1EB1  3020               	movlw	32
  6587  1EB2  025A               	subwf	___fltol@exp1,w
  6588  1EB3  1C03               	skipc
  6589  1EB4  2EB6               	goto	u5121
  6590  1EB5  2EB7               	goto	u5120
  6591  1EB6                     u5121:
  6592  1EB6  2EC3               	goto	l507
  6593  1EB7                     u5120:
  6594  1EB7  2E6A               	goto	l3152
  6595  1EB8                     l3182:
  6596  1EB8  3001               	movlw	1
  6597  1EB9  00D5               	movwf	??___fltol
  6598  1EBA                     u5135:
  6599  1EBA  1003               	clrc
  6600  1EBB  0DD1               	rlf	___fltol@f1,f
  6601  1EBC  0DD2               	rlf	___fltol@f1+1,f
  6602  1EBD  0DD3               	rlf	___fltol@f1+2,f
  6603  1EBE  0DD4               	rlf	___fltol@f1+3,f
  6604  1EBF  0BD5               	decfsz	??___fltol,f
  6605  1EC0  2EBA               	goto	u5135
  6606  1EC1  3001               	movlw	1
  6607  1EC2  02DA               	subwf	___fltol@exp1,f
  6608  1EC3                     l507:
  6609  1EC3  085A               	movf	___fltol@exp1,w
  6610  1EC4  1D03               	btfss	3,2
  6611  1EC5  2EC7               	goto	u5141
  6612  1EC6  2EC8               	goto	u5140
  6613  1EC7                     u5141:
  6614  1EC7  2EB8               	goto	l3182
  6615  1EC8                     u5140:
  6616  1EC8                     l3184:
  6617  1EC8  0859               	movf	___fltol@sign1,w
  6618  1EC9  1903               	btfsc	3,2
  6619  1ECA  2ECC               	goto	u5151
  6620  1ECB  2ECD               	goto	u5150
  6621  1ECC                     u5151:
  6622  1ECC  2ED8               	goto	l510
  6623  1ECD                     u5150:
  6624  1ECD                     l3186:
  6625  1ECD  09D1               	comf	___fltol@f1,f
  6626  1ECE  09D2               	comf	___fltol@f1+1,f
  6627  1ECF  09D3               	comf	___fltol@f1+2,f
  6628  1ED0  09D4               	comf	___fltol@f1+3,f
  6629  1ED1  0AD1               	incf	___fltol@f1,f
  6630  1ED2  1903               	skipnz
  6631  1ED3  0AD2               	incf	___fltol@f1+1,f
  6632  1ED4  1903               	skipnz
  6633  1ED5  0AD3               	incf	___fltol@f1+2,f
  6634  1ED6  1903               	skipnz
  6635  1ED7  0AD4               	incf	___fltol@f1+3,f
  6636  1ED8                     l510:
  6637  1ED8                     l500:
  6638  1ED8  0008               	return
  6639  1ED9                     __end_of___fltol:
  6640                           
  6641                           	psect	text15
  6642  1AA4                     __ptext15:	
  6643 ;; *************** function ___flneg *****************
  6644 ;; Defined at:
  6645 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flneg.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  f1              4    2[COMMON] long 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  4    2[COMMON] long 
  6652 ;; Registers used:
  6653 ;;		wreg
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6659 ;;      Params:         4       0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0
  6662 ;;      Totals:         4       0       0       0       0
  6663 ;;Total ram usage:        4 bytes
  6664 ;; Hardware stack levels used:    1
  6665 ;; Hardware stack levels required when called:    1
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		_sprintf
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           
  6674                           ;psect for function ___flneg
  6675  1AA4                     ___flneg:
  6676  1AA4                     l3142:	
  6677                           ;incstack = 0
  6678                           ; Regs used in ___flneg: [wreg]
  6679                           
  6680  1AA4  0875               	movf	___flneg@f1+3,w
  6681  1AA5  0474               	iorwf	___flneg@f1+2,w
  6682  1AA6  0473               	iorwf	___flneg@f1+1,w
  6683  1AA7  0472               	iorwf	___flneg@f1,w
  6684  1AA8  1903               	skipnz
  6685  1AA9  2AAB               	goto	u5051
  6686  1AAA  2AAC               	goto	u5050
  6687  1AAB                     u5051:
  6688  1AAB  2AAE               	goto	l3146
  6689  1AAC                     u5050:
  6690  1AAC                     l3144:
  6691  1AAC  3080               	movlw	128
  6692  1AAD  06F5               	xorwf	___flneg@f1+3,f
  6693  1AAE                     l3146:
  6694  1AAE                     l496:
  6695  1AAE  0008               	return
  6696  1AAF                     __end_of___flneg:
  6697                           
  6698                           	psect	text16
  6699  1F5C                     __ptext16:	
  6700 ;; *************** function ___flge *****************
  6701 ;; Defined at:
  6702 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flge.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;  ff1             4    2[COMMON] long 
  6705 ;;  ff2             4    6[COMMON] long 
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;		None
  6708 ;; Return value:  Size  Location     Type
  6709 ;;		None               void
  6710 ;; Registers used:
  6711 ;;		wreg, status,2, status,0
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6717 ;;      Params:         8       0       0       0       0
  6718 ;;      Locals:         0       0       0       0       0
  6719 ;;      Temps:          0       4       0       0       0
  6720 ;;      Totals:         8       4       0       0       0
  6721 ;;Total ram usage:       12 bytes
  6722 ;; Hardware stack levels used:    1
  6723 ;; Hardware stack levels required when called:    1
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		_sprintf
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           
  6732                           ;psect for function ___flge
  6733  1F5C                     ___flge:
  6734  1F5C                     l3122:	
  6735                           ;incstack = 0
  6736                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6737                           
  6738  1F5C  3000               	movlw	0
  6739  1F5D  0572               	andwf	___flge@ff1,w
  6740  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  6741  1F5F  1303               	bcf	3,6	;RP1=0, select bank0
  6742  1F60  00A0               	movwf	??___flge
  6743  1F61  3000               	movlw	0
  6744  1F62  0573               	andwf	___flge@ff1+1,w
  6745  1F63  00A1               	movwf	??___flge+1
  6746  1F64  3080               	movlw	128
  6747  1F65  0574               	andwf	___flge@ff1+2,w
  6748  1F66  00A2               	movwf	??___flge+2
  6749  1F67  307F               	movlw	127
  6750  1F68  0575               	andwf	___flge@ff1+3,w
  6751  1F69  00A3               	movwf	??___flge+3
  6752  1F6A  0823               	movf	??___flge+3,w
  6753  1F6B  0422               	iorwf	??___flge+2,w
  6754  1F6C  0421               	iorwf	??___flge+1,w
  6755  1F6D  0420               	iorwf	??___flge,w
  6756  1F6E  1D03               	skipz
  6757  1F6F  2F71               	goto	u4981
  6758  1F70  2F72               	goto	u4980
  6759  1F71                     u4981:
  6760  1F71  2F7A               	goto	l488
  6761  1F72                     u4980:
  6762  1F72                     l3124:
  6763  1F72  3000               	movlw	0
  6764  1F73  00F5               	movwf	___flge@ff1+3
  6765  1F74  3000               	movlw	0
  6766  1F75  00F4               	movwf	___flge@ff1+2
  6767  1F76  3000               	movlw	0
  6768  1F77  00F3               	movwf	___flge@ff1+1
  6769  1F78  3000               	movlw	0
  6770  1F79  00F2               	movwf	___flge@ff1
  6771  1F7A                     l488:
  6772  1F7A  3000               	movlw	0
  6773  1F7B  0576               	andwf	___flge@ff2,w
  6774  1F7C  00A0               	movwf	??___flge
  6775  1F7D  3000               	movlw	0
  6776  1F7E  0577               	andwf	___flge@ff2+1,w
  6777  1F7F  00A1               	movwf	??___flge+1
  6778  1F80  3080               	movlw	128
  6779  1F81  0578               	andwf	___flge@ff2+2,w
  6780  1F82  00A2               	movwf	??___flge+2
  6781  1F83  307F               	movlw	127
  6782  1F84  0579               	andwf	___flge@ff2+3,w
  6783  1F85  00A3               	movwf	??___flge+3
  6784  1F86  0823               	movf	??___flge+3,w
  6785  1F87  0422               	iorwf	??___flge+2,w
  6786  1F88  0421               	iorwf	??___flge+1,w
  6787  1F89  0420               	iorwf	??___flge,w
  6788  1F8A  1D03               	skipz
  6789  1F8B  2F8D               	goto	u4991
  6790  1F8C  2F8E               	goto	u4990
  6791  1F8D                     u4991:
  6792  1F8D  2F96               	goto	l3128
  6793  1F8E                     u4990:
  6794  1F8E                     l3126:
  6795  1F8E  3000               	movlw	0
  6796  1F8F  00F9               	movwf	___flge@ff2+3
  6797  1F90  3000               	movlw	0
  6798  1F91  00F8               	movwf	___flge@ff2+2
  6799  1F92  3000               	movlw	0
  6800  1F93  00F7               	movwf	___flge@ff2+1
  6801  1F94  3000               	movlw	0
  6802  1F95  00F6               	movwf	___flge@ff2
  6803  1F96                     l3128:
  6804  1F96  1FF5               	btfss	___flge@ff1+3,7
  6805  1F97  2F99               	goto	u5001
  6806  1F98  2F9A               	goto	u5000
  6807  1F99                     u5001:
  6808  1F99  2FBE               	goto	l3132
  6809  1F9A                     u5000:
  6810  1F9A                     l3130:
  6811  1F9A  3000               	movlw	0
  6812  1F9B  00A0               	movwf	??___flge
  6813  1F9C  3000               	movlw	0
  6814  1F9D  00A1               	movwf	??___flge+1
  6815  1F9E  3000               	movlw	0
  6816  1F9F  00A2               	movwf	??___flge+2
  6817  1FA0  3080               	movlw	128
  6818  1FA1  00A3               	movwf	??___flge+3
  6819  1FA2  0872               	movf	___flge@ff1,w
  6820  1FA3  02A0               	subwf	??___flge,f
  6821  1FA4  0873               	movf	___flge@ff1+1,w
  6822  1FA5  1C03               	skipc
  6823  1FA6  0F73               	incfsz	___flge@ff1+1,w
  6824  1FA7  2FA9               	goto	u5011
  6825  1FA8  2FAA               	goto	u5012
  6826  1FA9                     u5011:
  6827  1FA9  02A1               	subwf	??___flge+1,f
  6828  1FAA                     u5012:
  6829  1FAA  0874               	movf	___flge@ff1+2,w
  6830  1FAB  1C03               	skipc
  6831  1FAC  0F74               	incfsz	___flge@ff1+2,w
  6832  1FAD  2FAF               	goto	u5013
  6833  1FAE  2FB0               	goto	u5014
  6834  1FAF                     u5013:
  6835  1FAF  02A2               	subwf	??___flge+2,f
  6836  1FB0                     u5014:
  6837  1FB0  0875               	movf	___flge@ff1+3,w
  6838  1FB1  1C03               	skipc
  6839  1FB2  0F75               	incfsz	___flge@ff1+3,w
  6840  1FB3  2FB5               	goto	u5015
  6841  1FB4  2FB6               	goto	u5016
  6842  1FB5                     u5015:
  6843  1FB5  02A3               	subwf	??___flge+3,f
  6844  1FB6                     u5016:
  6845  1FB6  0823               	movf	??___flge+3,w
  6846  1FB7  00F5               	movwf	___flge@ff1+3
  6847  1FB8  0822               	movf	??___flge+2,w
  6848  1FB9  00F4               	movwf	___flge@ff1+2
  6849  1FBA  0821               	movf	??___flge+1,w
  6850  1FBB  00F3               	movwf	___flge@ff1+1
  6851  1FBC  0820               	movf	??___flge,w
  6852  1FBD  00F2               	movwf	___flge@ff1
  6853  1FBE                     l3132:
  6854  1FBE  1FF9               	btfss	___flge@ff2+3,7
  6855  1FBF  2FC1               	goto	u5021
  6856  1FC0  2FC2               	goto	u5020
  6857  1FC1                     u5021:
  6858  1FC1  2FE6               	goto	l491
  6859  1FC2                     u5020:
  6860  1FC2                     l3134:
  6861  1FC2  3000               	movlw	0
  6862  1FC3  00A0               	movwf	??___flge
  6863  1FC4  3000               	movlw	0
  6864  1FC5  00A1               	movwf	??___flge+1
  6865  1FC6  3000               	movlw	0
  6866  1FC7  00A2               	movwf	??___flge+2
  6867  1FC8  3080               	movlw	128
  6868  1FC9  00A3               	movwf	??___flge+3
  6869  1FCA  0876               	movf	___flge@ff2,w
  6870  1FCB  02A0               	subwf	??___flge,f
  6871  1FCC  0877               	movf	___flge@ff2+1,w
  6872  1FCD  1C03               	skipc
  6873  1FCE  0F77               	incfsz	___flge@ff2+1,w
  6874  1FCF  2FD1               	goto	u5031
  6875  1FD0  2FD2               	goto	u5032
  6876  1FD1                     u5031:
  6877  1FD1  02A1               	subwf	??___flge+1,f
  6878  1FD2                     u5032:
  6879  1FD2  0878               	movf	___flge@ff2+2,w
  6880  1FD3  1C03               	skipc
  6881  1FD4  0F78               	incfsz	___flge@ff2+2,w
  6882  1FD5  2FD7               	goto	u5033
  6883  1FD6  2FD8               	goto	u5034
  6884  1FD7                     u5033:
  6885  1FD7  02A2               	subwf	??___flge+2,f
  6886  1FD8                     u5034:
  6887  1FD8  0879               	movf	___flge@ff2+3,w
  6888  1FD9  1C03               	skipc
  6889  1FDA  0F79               	incfsz	___flge@ff2+3,w
  6890  1FDB  2FDD               	goto	u5035
  6891  1FDC  2FDE               	goto	u5036
  6892  1FDD                     u5035:
  6893  1FDD  02A3               	subwf	??___flge+3,f
  6894  1FDE                     u5036:
  6895  1FDE  0823               	movf	??___flge+3,w
  6896  1FDF  00F9               	movwf	___flge@ff2+3
  6897  1FE0  0822               	movf	??___flge+2,w
  6898  1FE1  00F8               	movwf	___flge@ff2+2
  6899  1FE2  0821               	movf	??___flge+1,w
  6900  1FE3  00F7               	movwf	___flge@ff2+1
  6901  1FE4  0820               	movf	??___flge,w
  6902  1FE5  00F6               	movwf	___flge@ff2
  6903  1FE6                     l491:
  6904  1FE6  3080               	movlw	128
  6905  1FE7  06F5               	xorwf	___flge@ff1+3,f
  6906  1FE8  3080               	movlw	128
  6907  1FE9  06F9               	xorwf	___flge@ff2+3,f
  6908  1FEA  0879               	movf	___flge@ff2+3,w
  6909  1FEB  0275               	subwf	___flge@ff1+3,w
  6910  1FEC  1D03               	skipz
  6911  1FED  2FF8               	goto	u5045
  6912  1FEE  0878               	movf	___flge@ff2+2,w
  6913  1FEF  0274               	subwf	___flge@ff1+2,w
  6914  1FF0  1D03               	skipz
  6915  1FF1  2FF8               	goto	u5045
  6916  1FF2  0877               	movf	___flge@ff2+1,w
  6917  1FF3  0273               	subwf	___flge@ff1+1,w
  6918  1FF4  1D03               	skipz
  6919  1FF5  2FF8               	goto	u5045
  6920  1FF6  0876               	movf	___flge@ff2,w
  6921  1FF7  0272               	subwf	___flge@ff1,w
  6922  1FF8                     u5045:
  6923  1FF8  1803               	skipnc
  6924  1FF9  2FFB               	goto	u5041
  6925  1FFA  2FFC               	goto	u5040
  6926  1FFB                     u5041:
  6927  1FFB  2FFE               	goto	l3138
  6928  1FFC                     u5040:
  6929  1FFC                     l3136:
  6930  1FFC  1003               	clrc
  6931  1FFD  2FFF               	goto	l492
  6932  1FFE                     l3138:
  6933  1FFE  1403               	setc
  6934  1FFF                     l492:
  6935  1FFF  0008               	return
  6936  2000                     __end_of___flge:
  6937                           
  6938                           	psect	text17
  6939  1C8F                     __ptext17:	
  6940 ;; *************** function ___fleq *****************
  6941 ;; Defined at:
  6942 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fleq.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  ff1             4    2[COMMON] long 
  6945 ;;  ff2             4    6[COMMON] long 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;		None
  6948 ;; Return value:  Size  Location     Type
  6949 ;;		None               void
  6950 ;; Registers used:
  6951 ;;		wreg, status,2, status,0
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6957 ;;      Params:         8       0       0       0       0
  6958 ;;      Locals:         0       0       0       0       0
  6959 ;;      Temps:          0       4       0       0       0
  6960 ;;      Totals:         8       4       0       0       0
  6961 ;;Total ram usage:       12 bytes
  6962 ;; Hardware stack levels used:    1
  6963 ;; Hardware stack levels required when called:    1
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_sprintf
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           
  6972                           ;psect for function ___fleq
  6973  1C8F                     ___fleq:
  6974  1C8F                     l3110:	
  6975                           ;incstack = 0
  6976                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6977                           
  6978  1C8F  3000               	movlw	0
  6979  1C90  0572               	andwf	___fleq@ff1,w
  6980  1C91  1283               	bcf	3,5	;RP0=0, select bank0
  6981  1C92  1303               	bcf	3,6	;RP1=0, select bank0
  6982  1C93  00A0               	movwf	??___fleq
  6983  1C94  3000               	movlw	0
  6984  1C95  0573               	andwf	___fleq@ff1+1,w
  6985  1C96  00A1               	movwf	??___fleq+1
  6986  1C97  3080               	movlw	128
  6987  1C98  0574               	andwf	___fleq@ff1+2,w
  6988  1C99  00A2               	movwf	??___fleq+2
  6989  1C9A  307F               	movlw	127
  6990  1C9B  0575               	andwf	___fleq@ff1+3,w
  6991  1C9C  00A3               	movwf	??___fleq+3
  6992  1C9D  0823               	movf	??___fleq+3,w
  6993  1C9E  0422               	iorwf	??___fleq+2,w
  6994  1C9F  0421               	iorwf	??___fleq+1,w
  6995  1CA0  0420               	iorwf	??___fleq,w
  6996  1CA1  1D03               	skipz
  6997  1CA2  2CA4               	goto	u4951
  6998  1CA3  2CA5               	goto	u4950
  6999  1CA4                     u4951:
  7000  1CA4  2CAD               	goto	l483
  7001  1CA5                     u4950:
  7002  1CA5                     l3112:
  7003  1CA5  3000               	movlw	0
  7004  1CA6  00F5               	movwf	___fleq@ff1+3
  7005  1CA7  3000               	movlw	0
  7006  1CA8  00F4               	movwf	___fleq@ff1+2
  7007  1CA9  3000               	movlw	0
  7008  1CAA  00F3               	movwf	___fleq@ff1+1
  7009  1CAB  3000               	movlw	0
  7010  1CAC  00F2               	movwf	___fleq@ff1
  7011  1CAD                     l483:
  7012  1CAD  3000               	movlw	0
  7013  1CAE  0576               	andwf	___fleq@ff2,w
  7014  1CAF  00A0               	movwf	??___fleq
  7015  1CB0  3000               	movlw	0
  7016  1CB1  0577               	andwf	___fleq@ff2+1,w
  7017  1CB2  00A1               	movwf	??___fleq+1
  7018  1CB3  3080               	movlw	128
  7019  1CB4  0578               	andwf	___fleq@ff2+2,w
  7020  1CB5  00A2               	movwf	??___fleq+2
  7021  1CB6  307F               	movlw	127
  7022  1CB7  0579               	andwf	___fleq@ff2+3,w
  7023  1CB8  00A3               	movwf	??___fleq+3
  7024  1CB9  0823               	movf	??___fleq+3,w
  7025  1CBA  0422               	iorwf	??___fleq+2,w
  7026  1CBB  0421               	iorwf	??___fleq+1,w
  7027  1CBC  0420               	iorwf	??___fleq,w
  7028  1CBD  1D03               	skipz
  7029  1CBE  2CC0               	goto	u4961
  7030  1CBF  2CC1               	goto	u4960
  7031  1CC0                     u4961:
  7032  1CC0  2CC9               	goto	l484
  7033  1CC1                     u4960:
  7034  1CC1                     l3114:
  7035  1CC1  3000               	movlw	0
  7036  1CC2  00F9               	movwf	___fleq@ff2+3
  7037  1CC3  3000               	movlw	0
  7038  1CC4  00F8               	movwf	___fleq@ff2+2
  7039  1CC5  3000               	movlw	0
  7040  1CC6  00F7               	movwf	___fleq@ff2+1
  7041  1CC7  3000               	movlw	0
  7042  1CC8  00F6               	movwf	___fleq@ff2
  7043  1CC9                     l484:
  7044  1CC9  0879               	movf	___fleq@ff2+3,w
  7045  1CCA  0675               	xorwf	___fleq@ff1+3,w
  7046  1CCB  1D03               	skipz
  7047  1CCC  2CD7               	goto	u4975
  7048  1CCD  0878               	movf	___fleq@ff2+2,w
  7049  1CCE  0674               	xorwf	___fleq@ff1+2,w
  7050  1CCF  1D03               	skipz
  7051  1CD0  2CD7               	goto	u4975
  7052  1CD1  0877               	movf	___fleq@ff2+1,w
  7053  1CD2  0673               	xorwf	___fleq@ff1+1,w
  7054  1CD3  1D03               	skipz
  7055  1CD4  2CD7               	goto	u4975
  7056  1CD5  0876               	movf	___fleq@ff2,w
  7057  1CD6  0672               	xorwf	___fleq@ff1,w
  7058  1CD7                     u4975:
  7059  1CD7  1903               	skipnz
  7060  1CD8  2CDA               	goto	u4971
  7061  1CD9  2CDB               	goto	u4970
  7062  1CDA                     u4971:
  7063  1CDA  2CDD               	goto	l3118
  7064  1CDB                     u4970:
  7065  1CDB                     l3116:
  7066  1CDB  1003               	clrc
  7067  1CDC  2CDE               	goto	l485
  7068  1CDD                     l3118:
  7069  1CDD  1403               	setc
  7070  1CDE                     l485:
  7071  1CDE  0008               	return
  7072  1CDF                     __end_of___fleq:
  7073                           
  7074                           	psect	text18
  7075  0803                     __ptext18:	
  7076 ;; *************** function _Voltage_Value *****************
  7077 ;; Defined at:
  7078 ;;		line 111 in file "main.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;  sensor          1    wreg     unsigned char 
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;  sensor          1   42[BANK1 ] unsigned char 
  7083 ;;  fSensor         4   38[BANK1 ] float 
  7084 ;;  result          4   34[BANK1 ] float 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  4   26[BANK1 ] float 
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7094 ;;      Params:         0       0       4       0       0
  7095 ;;      Locals:         0       0       9       0       0
  7096 ;;      Temps:          0       0       4       0       0
  7097 ;;      Totals:         0       0      17       0       0
  7098 ;;Total ram usage:       17 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    3
  7101 ;; This function calls:
  7102 ;;		___fldiv
  7103 ;;		___flmul
  7104 ;;		___xxtofl
  7105 ;; This function is called by:
  7106 ;;		_main
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function _Voltage_Value
  7112  0803                     _Voltage_Value:
  7113                           
  7114                           ;incstack = 0
  7115                           ; Regs used in _Voltage_Value: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7116                           ;Voltage_Value@sensor stored from wreg
  7117  0803  1683               	bsf	3,5	;RP0=1, select bank1
  7118  0804  1303               	bcf	3,6	;RP1=0, select bank1
  7119  0805  00CA               	movwf	Voltage_Value@sensor^(0+128)
  7120  0806                     l3476:
  7121                           
  7122                           ;main.c: 114:     float result;;main.c: 115:     float fSensor = (float) sensor;
  7123  0806  084A               	movf	Voltage_Value@sensor^(0+128),w
  7124  0807  00BE               	movwf	??_Voltage_Value^(0+128)
  7125  0808  01BF               	clrf	(??_Voltage_Value^(0+128)+1)
  7126  0809  01C0               	clrf	(??_Voltage_Value^(0+128)+2)
  7127  080A  01C1               	clrf	(??_Voltage_Value^(0+128)+3)
  7128  080B  0841               	movf	(??_Voltage_Value+3)^(0+128),w
  7129  080C  00F5               	movwf	___xxtofl@val+3
  7130  080D  0840               	movf	(??_Voltage_Value+2)^(0+128),w
  7131  080E  00F4               	movwf	___xxtofl@val+2
  7132  080F  083F               	movf	(??_Voltage_Value+1)^(0+128),w
  7133  0810  00F3               	movwf	___xxtofl@val+1
  7134  0811  083E               	movf	??_Voltage_Value^(0+128),w
  7135  0812  00F2               	movwf	___xxtofl@val
  7136  0813  3000               	movlw	0
  7137  0814  160A  118A  2017  120A  158A  	fcall	___xxtofl
  7138  0819  0875               	movf	?___xxtofl+3,w
  7139  081A  1683               	bsf	3,5	;RP0=1, select bank1
  7140  081B  1303               	bcf	3,6	;RP1=0, select bank1
  7141  081C  00C9               	movwf	(Voltage_Value@fSensor+3)^(0+128)
  7142  081D  0874               	movf	?___xxtofl+2,w
  7143  081E  00C8               	movwf	(Voltage_Value@fSensor+2)^(0+128)
  7144  081F  0873               	movf	?___xxtofl+1,w
  7145  0820  00C7               	movwf	(Voltage_Value@fSensor+1)^(0+128)
  7146  0821  0872               	movf	?___xxtofl,w
  7147  0822  00C6               	movwf	Voltage_Value@fSensor^(0+128)
  7148                           
  7149                           ;main.c: 116:     result = fSensor* 5/255;
  7150  0823  3043               	movlw	67
  7151  0824  00A3               	movwf	(___fldiv@a+3)^(0+128)
  7152  0825  307F               	movlw	127
  7153  0826  00A2               	movwf	(___fldiv@a+2)^(0+128)
  7154  0827  3000               	movlw	0
  7155  0828  00A1               	movwf	(___fldiv@a+1)^(0+128)
  7156  0829  3000               	movlw	0
  7157  082A  00A0               	movwf	___fldiv@a^(0+128)
  7158  082B  3040               	movlw	64
  7159  082C  1283               	bcf	3,5	;RP0=0, select bank0
  7160  082D  1303               	bcf	3,6	;RP1=0, select bank0
  7161  082E  00A7               	movwf	___flmul@b+3
  7162  082F  30A0               	movlw	160
  7163  0830  00A6               	movwf	___flmul@b+2
  7164  0831  3000               	movlw	0
  7165  0832  00A5               	movwf	___flmul@b+1
  7166  0833  3000               	movlw	0
  7167  0834  00A4               	movwf	___flmul@b
  7168  0835  1683               	bsf	3,5	;RP0=1, select bank1
  7169  0836  1303               	bcf	3,6	;RP1=0, select bank1
  7170  0837  0849               	movf	(Voltage_Value@fSensor+3)^(0+128),w
  7171  0838  1283               	bcf	3,5	;RP0=0, select bank0
  7172  0839  1303               	bcf	3,6	;RP1=0, select bank0
  7173  083A  00AB               	movwf	___flmul@a+3
  7174  083B  1683               	bsf	3,5	;RP0=1, select bank1
  7175  083C  1303               	bcf	3,6	;RP1=0, select bank1
  7176  083D  0848               	movf	(Voltage_Value@fSensor+2)^(0+128),w
  7177  083E  1283               	bcf	3,5	;RP0=0, select bank0
  7178  083F  1303               	bcf	3,6	;RP1=0, select bank0
  7179  0840  00AA               	movwf	___flmul@a+2
  7180  0841  1683               	bsf	3,5	;RP0=1, select bank1
  7181  0842  1303               	bcf	3,6	;RP1=0, select bank1
  7182  0843  0847               	movf	(Voltage_Value@fSensor+1)^(0+128),w
  7183  0844  1283               	bcf	3,5	;RP0=0, select bank0
  7184  0845  1303               	bcf	3,6	;RP1=0, select bank0
  7185  0846  00A9               	movwf	___flmul@a+1
  7186  0847  1683               	bsf	3,5	;RP0=1, select bank1
  7187  0848  1303               	bcf	3,6	;RP1=0, select bank1
  7188  0849  0846               	movf	Voltage_Value@fSensor^(0+128),w
  7189  084A  1283               	bcf	3,5	;RP0=0, select bank0
  7190  084B  1303               	bcf	3,6	;RP1=0, select bank0
  7191  084C  00A8               	movwf	___flmul@a
  7192  084D  120A  158A  249F  120A  158A  	fcall	___flmul
  7193  0852  1283               	bcf	3,5	;RP0=0, select bank0
  7194  0853  1303               	bcf	3,6	;RP1=0, select bank0
  7195  0854  0827               	movf	?___flmul+3,w
  7196  0855  1683               	bsf	3,5	;RP0=1, select bank1
  7197  0856  1303               	bcf	3,6	;RP1=0, select bank1
  7198  0857  00A7               	movwf	(___fldiv@b+3)^(0+128)
  7199  0858  1283               	bcf	3,5	;RP0=0, select bank0
  7200  0859  1303               	bcf	3,6	;RP1=0, select bank0
  7201  085A  0826               	movf	?___flmul+2,w
  7202  085B  1683               	bsf	3,5	;RP0=1, select bank1
  7203  085C  1303               	bcf	3,6	;RP1=0, select bank1
  7204  085D  00A6               	movwf	(___fldiv@b+2)^(0+128)
  7205  085E  1283               	bcf	3,5	;RP0=0, select bank0
  7206  085F  1303               	bcf	3,6	;RP1=0, select bank0
  7207  0860  0825               	movf	?___flmul+1,w
  7208  0861  1683               	bsf	3,5	;RP0=1, select bank1
  7209  0862  1303               	bcf	3,6	;RP1=0, select bank1
  7210  0863  00A5               	movwf	(___fldiv@b+1)^(0+128)
  7211  0864  1283               	bcf	3,5	;RP0=0, select bank0
  7212  0865  1303               	bcf	3,6	;RP1=0, select bank0
  7213  0866  0824               	movf	?___flmul,w
  7214  0867  1683               	bsf	3,5	;RP0=1, select bank1
  7215  0868  1303               	bcf	3,6	;RP1=0, select bank1
  7216  0869  00A4               	movwf	___fldiv@b^(0+128)
  7217  086A  160A  118A  2190  120A  158A  	fcall	___fldiv
  7218  086F  1683               	bsf	3,5	;RP0=1, select bank1
  7219  0870  1303               	bcf	3,6	;RP1=0, select bank1
  7220  0871  0823               	movf	(?___fldiv+3)^(0+128),w
  7221  0872  00C5               	movwf	(Voltage_Value@result+3)^(0+128)
  7222  0873  0822               	movf	(?___fldiv+2)^(0+128),w
  7223  0874  00C4               	movwf	(Voltage_Value@result+2)^(0+128)
  7224  0875  0821               	movf	(?___fldiv+1)^(0+128),w
  7225  0876  00C3               	movwf	(Voltage_Value@result+1)^(0+128)
  7226  0877  0820               	movf	?___fldiv^(0+128),w
  7227  0878  00C2               	movwf	Voltage_Value@result^(0+128)
  7228  0879                     l3478:
  7229                           
  7230                           ;main.c: 117:     return result;
  7231  0879  0845               	movf	(Voltage_Value@result+3)^(0+128),w
  7232  087A  00BD               	movwf	(?_Voltage_Value+3)^(0+128)
  7233  087B  0844               	movf	(Voltage_Value@result+2)^(0+128),w
  7234  087C  00BC               	movwf	(?_Voltage_Value+2)^(0+128)
  7235  087D  0843               	movf	(Voltage_Value@result+1)^(0+128),w
  7236  087E  00BB               	movwf	(?_Voltage_Value+1)^(0+128)
  7237  087F  0842               	movf	Voltage_Value@result^(0+128),w
  7238  0880  00BA               	movwf	?_Voltage_Value^(0+128)
  7239  0881                     l41:
  7240  0881  0008               	return
  7241  0882                     __end_of_Voltage_Value:
  7242                           
  7243                           	psect	text19
  7244  1017                     __ptext19:	
  7245 ;; *************** function ___xxtofl *****************
  7246 ;; Defined at:
  7247 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;  sign            1    wreg     unsigned char 
  7250 ;;  val             4    2[COMMON] long 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  sign            1    0[BANK0 ] unsigned char 
  7253 ;;  arg             4    2[BANK0 ] unsigned long 
  7254 ;;  exp             1    1[BANK0 ] unsigned char 
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  4    2[COMMON] unsigned char 
  7257 ;; Registers used:
  7258 ;;		wreg, status,2, status,0, btemp+1
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7264 ;;      Params:         4       0       0       0       0
  7265 ;;      Locals:         0       6       0       0       0
  7266 ;;      Temps:          4       0       0       0       0
  7267 ;;      Totals:         8       6       0       0       0
  7268 ;;Total ram usage:       14 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    1
  7271 ;; This function calls:
  7272 ;;		Nothing
  7273 ;; This function is called by:
  7274 ;;		_Voltage_Value
  7275 ;;		_sprintf
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           
  7280                           ;psect for function ___xxtofl
  7281  1017                     ___xxtofl:
  7282                           
  7283                           ;incstack = 0
  7284                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  7285                           ;___xxtofl@sign stored from wreg
  7286  1017  1283               	bcf	3,5	;RP0=0, select bank0
  7287  1018  1303               	bcf	3,6	;RP1=0, select bank0
  7288  1019  00A0               	movwf	___xxtofl@sign
  7289  101A                     l3360:
  7290  101A  0820               	movf	___xxtofl@sign,w
  7291  101B  1903               	btfsc	3,2
  7292  101C  281E               	goto	u5511
  7293  101D  281F               	goto	u5510
  7294  101E                     u5511:
  7295  101E  2833               	goto	l3366
  7296  101F                     u5510:
  7297  101F                     l3362:
  7298  101F  1FF5               	btfss	___xxtofl@val+3,7
  7299  1020  2822               	goto	u5521
  7300  1021  2823               	goto	u5520
  7301  1022                     u5521:
  7302  1022  2833               	goto	l3366
  7303  1023                     u5520:
  7304  1023                     l3364:
  7305  1023  0972               	comf	___xxtofl@val,w
  7306  1024  00A2               	movwf	___xxtofl@arg
  7307  1025  0973               	comf	___xxtofl@val+1,w
  7308  1026  00A3               	movwf	___xxtofl@arg+1
  7309  1027  0974               	comf	___xxtofl@val+2,w
  7310  1028  00A4               	movwf	___xxtofl@arg+2
  7311  1029  0975               	comf	___xxtofl@val+3,w
  7312  102A  00A5               	movwf	___xxtofl@arg+3
  7313  102B  0AA2               	incf	___xxtofl@arg,f
  7314  102C  1903               	skipnz
  7315  102D  0AA3               	incf	___xxtofl@arg+1,f
  7316  102E  1903               	skipnz
  7317  102F  0AA4               	incf	___xxtofl@arg+2,f
  7318  1030  1903               	skipnz
  7319  1031  0AA5               	incf	___xxtofl@arg+3,f
  7320  1032  283B               	goto	l764
  7321  1033                     l3366:
  7322  1033  0875               	movf	___xxtofl@val+3,w
  7323  1034  00A5               	movwf	___xxtofl@arg+3
  7324  1035  0874               	movf	___xxtofl@val+2,w
  7325  1036  00A4               	movwf	___xxtofl@arg+2
  7326  1037  0873               	movf	___xxtofl@val+1,w
  7327  1038  00A3               	movwf	___xxtofl@arg+1
  7328  1039  0872               	movf	___xxtofl@val,w
  7329  103A  00A2               	movwf	___xxtofl@arg
  7330  103B                     l764:
  7331  103B  0875               	movf	___xxtofl@val+3,w
  7332  103C  0474               	iorwf	___xxtofl@val+2,w
  7333  103D  0473               	iorwf	___xxtofl@val+1,w
  7334  103E  0472               	iorwf	___xxtofl@val,w
  7335  103F  1D03               	skipz
  7336  1040  2842               	goto	u5531
  7337  1041  2843               	goto	u5530
  7338  1042                     u5531:
  7339  1042  284C               	goto	l3372
  7340  1043                     u5530:
  7341  1043                     l3368:
  7342  1043  3000               	movlw	0
  7343  1044  00F5               	movwf	?___xxtofl+3
  7344  1045  3000               	movlw	0
  7345  1046  00F4               	movwf	?___xxtofl+2
  7346  1047  3000               	movlw	0
  7347  1048  00F3               	movwf	?___xxtofl+1
  7348  1049  3000               	movlw	0
  7349  104A  00F2               	movwf	?___xxtofl
  7350  104B  28D2               	goto	l766
  7351  104C                     l3372:
  7352  104C  3096               	movlw	150
  7353  104D  00FF               	movwf	btemp+1
  7354  104E  087F               	movf	btemp+1,w
  7355  104F  00A1               	movwf	___xxtofl@exp
  7356  1050  285E               	goto	l3378
  7357  1051                     l3374:
  7358  1051  3001               	movlw	1
  7359  1052  00FF               	movwf	btemp+1
  7360  1053  087F               	movf	btemp+1,w
  7361  1054  07A1               	addwf	___xxtofl@exp,f
  7362  1055                     l3376:
  7363  1055  3001               	movlw	1
  7364  1056                     u5545:
  7365  1056  1003               	clrc
  7366  1057  0CA5               	rrf	___xxtofl@arg+3,f
  7367  1058  0CA4               	rrf	___xxtofl@arg+2,f
  7368  1059  0CA3               	rrf	___xxtofl@arg+1,f
  7369  105A  0CA2               	rrf	___xxtofl@arg,f
  7370  105B  3EFF               	addlw	-1
  7371  105C  1D03               	skipz
  7372  105D  2856               	goto	u5545
  7373  105E                     l3378:
  7374  105E  30FE               	movlw	254
  7375  105F  0525               	andwf	___xxtofl@arg+3,w
  7376  1060  1D03               	btfss	3,2
  7377  1061  2863               	goto	u5551
  7378  1062  2864               	goto	u5550
  7379  1063                     u5551:
  7380  1063  2851               	goto	l3374
  7381  1064                     u5550:
  7382  1064  2880               	goto	l3386
  7383  1065                     l3380:
  7384  1065  3001               	movlw	1
  7385  1066  00FF               	movwf	btemp+1
  7386  1067  087F               	movf	btemp+1,w
  7387  1068  07A1               	addwf	___xxtofl@exp,f
  7388  1069                     l3382:
  7389  1069  3001               	movlw	1
  7390  106A  07A2               	addwf	___xxtofl@arg,f
  7391  106B  3000               	movlw	0
  7392  106C  1803               	skipnc
  7393  106D  3001               	movlw	1
  7394  106E  07A3               	addwf	___xxtofl@arg+1,f
  7395  106F  3000               	movlw	0
  7396  1070  1803               	skipnc
  7397  1071  3001               	movlw	1
  7398  1072  07A4               	addwf	___xxtofl@arg+2,f
  7399  1073  3000               	movlw	0
  7400  1074  1803               	skipnc
  7401  1075  3001               	movlw	1
  7402  1076  07A5               	addwf	___xxtofl@arg+3,f
  7403  1077                     l3384:
  7404  1077  3001               	movlw	1
  7405  1078                     u5565:
  7406  1078  1003               	clrc
  7407  1079  0CA5               	rrf	___xxtofl@arg+3,f
  7408  107A  0CA4               	rrf	___xxtofl@arg+2,f
  7409  107B  0CA3               	rrf	___xxtofl@arg+1,f
  7410  107C  0CA2               	rrf	___xxtofl@arg,f
  7411  107D  3EFF               	addlw	-1
  7412  107E  1D03               	skipz
  7413  107F  2878               	goto	u5565
  7414  1080                     l3386:
  7415  1080  30FF               	movlw	255
  7416  1081  0525               	andwf	___xxtofl@arg+3,w
  7417  1082  1D03               	btfss	3,2
  7418  1083  2885               	goto	u5571
  7419  1084  2886               	goto	u5570
  7420  1085                     u5571:
  7421  1085  2865               	goto	l3380
  7422  1086                     u5570:
  7423  1086  2892               	goto	l3390
  7424  1087                     l3388:
  7425  1087  3001               	movlw	1
  7426  1088  02A1               	subwf	___xxtofl@exp,f
  7427  1089  3001               	movlw	1
  7428  108A  00F6               	movwf	??___xxtofl
  7429  108B                     u5585:
  7430  108B  1003               	clrc
  7431  108C  0DA2               	rlf	___xxtofl@arg,f
  7432  108D  0DA3               	rlf	___xxtofl@arg+1,f
  7433  108E  0DA4               	rlf	___xxtofl@arg+2,f
  7434  108F  0DA5               	rlf	___xxtofl@arg+3,f
  7435  1090  0BF6               	decfsz	??___xxtofl,f
  7436  1091  288B               	goto	u5585
  7437  1092                     l3390:
  7438  1092  1BA4               	btfsc	___xxtofl@arg+2,7
  7439  1093  2895               	goto	u5591
  7440  1094  2896               	goto	u5590
  7441  1095                     u5591:
  7442  1095  289C               	goto	l777
  7443  1096                     u5590:
  7444  1096                     l3392:
  7445  1096  3002               	movlw	2
  7446  1097  0221               	subwf	___xxtofl@exp,w
  7447  1098  1803               	skipnc
  7448  1099  289B               	goto	u5601
  7449  109A  289C               	goto	u5600
  7450  109B                     u5601:
  7451  109B  2887               	goto	l3388
  7452  109C                     u5600:
  7453  109C                     l777:
  7454  109C  1821               	btfsc	___xxtofl@exp,0
  7455  109D  289F               	goto	u5611
  7456  109E  28A0               	goto	u5610
  7457  109F                     u5611:
  7458  109F  28A8               	goto	l778
  7459  10A0                     u5610:
  7460  10A0                     l3394:
  7461  10A0  30FF               	movlw	255
  7462  10A1  05A2               	andwf	___xxtofl@arg,f
  7463  10A2  30FF               	movlw	255
  7464  10A3  05A3               	andwf	___xxtofl@arg+1,f
  7465  10A4  307F               	movlw	127
  7466  10A5  05A4               	andwf	___xxtofl@arg+2,f
  7467  10A6  30FF               	movlw	255
  7468  10A7  05A5               	andwf	___xxtofl@arg+3,f
  7469  10A8                     l778:
  7470  10A8  1003               	clrc
  7471  10A9  0CA1               	rrf	___xxtofl@exp,f
  7472  10AA                     l3396:
  7473  10AA  0821               	movf	___xxtofl@exp,w
  7474  10AB  00F6               	movwf	??___xxtofl
  7475  10AC  01F7               	clrf	??___xxtofl+1
  7476  10AD  01F8               	clrf	??___xxtofl+2
  7477  10AE  01F9               	clrf	??___xxtofl+3
  7478  10AF  3018               	movlw	24
  7479  10B0                     u5625:
  7480  10B0  1003               	clrc
  7481  10B1  0DF6               	rlf	??___xxtofl,f
  7482  10B2  0DF7               	rlf	??___xxtofl+1,f
  7483  10B3  0DF8               	rlf	??___xxtofl+2,f
  7484  10B4  0DF9               	rlf	??___xxtofl+3,f
  7485  10B5                     u5620:
  7486  10B5  3EFF               	addlw	-1
  7487  10B6  1D03               	skipz
  7488  10B7  28B0               	goto	u5625
  7489  10B8  0876               	movf	??___xxtofl,w
  7490  10B9  04A2               	iorwf	___xxtofl@arg,f
  7491  10BA  0877               	movf	??___xxtofl+1,w
  7492  10BB  04A3               	iorwf	___xxtofl@arg+1,f
  7493  10BC  0878               	movf	??___xxtofl+2,w
  7494  10BD  04A4               	iorwf	___xxtofl@arg+2,f
  7495  10BE  0879               	movf	??___xxtofl+3,w
  7496  10BF  04A5               	iorwf	___xxtofl@arg+3,f
  7497  10C0                     l3398:
  7498  10C0  0820               	movf	___xxtofl@sign,w
  7499  10C1  1903               	btfsc	3,2
  7500  10C2  28C4               	goto	u5631
  7501  10C3  28C5               	goto	u5630
  7502  10C4                     u5631:
  7503  10C4  28CA               	goto	l3404
  7504  10C5                     u5630:
  7505  10C5                     l3400:
  7506  10C5  1FF5               	btfss	___xxtofl@val+3,7
  7507  10C6  28C8               	goto	u5641
  7508  10C7  28C9               	goto	u5640
  7509  10C8                     u5641:
  7510  10C8  28CA               	goto	l3404
  7511  10C9                     u5640:
  7512  10C9                     l3402:
  7513  10C9  17A5               	bsf	___xxtofl@arg+3,7
  7514  10CA                     l3404:
  7515  10CA  0825               	movf	___xxtofl@arg+3,w
  7516  10CB  00F5               	movwf	?___xxtofl+3
  7517  10CC  0824               	movf	___xxtofl@arg+2,w
  7518  10CD  00F4               	movwf	?___xxtofl+2
  7519  10CE  0823               	movf	___xxtofl@arg+1,w
  7520  10CF  00F3               	movwf	?___xxtofl+1
  7521  10D0  0822               	movf	___xxtofl@arg,w
  7522  10D1  00F2               	movwf	?___xxtofl
  7523  10D2                     l766:
  7524  10D2  0008               	return
  7525  10D3                     __end_of___xxtofl:
  7526                           
  7527                           	psect	text20
  7528  1AEF                     __ptext20:	
  7529 ;; *************** function _TIMER_init_timer1 *****************
  7530 ;; Defined at:
  7531 ;;		line 8 in file "timer.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;		None
  7534 ;; Auto vars:     Size  Location     Type
  7535 ;;		None
  7536 ;; Return value:  Size  Location     Type
  7537 ;;                  1    wreg      void 
  7538 ;; Registers used:
  7539 ;;		wreg
  7540 ;; Tracked objects:
  7541 ;;		On entry : 0/0
  7542 ;;		On exit  : 0/0
  7543 ;;		Unchanged: 0/0
  7544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7545 ;;      Params:         0       0       0       0       0
  7546 ;;      Locals:         0       0       0       0       0
  7547 ;;      Temps:          0       0       0       0       0
  7548 ;;      Totals:         0       0       0       0       0
  7549 ;;Total ram usage:        0 bytes
  7550 ;; Hardware stack levels used:    1
  7551 ;; Hardware stack levels required when called:    1
  7552 ;; This function calls:
  7553 ;;		Nothing
  7554 ;; This function is called by:
  7555 ;;		_main
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           
  7560                           ;psect for function _TIMER_init_timer1
  7561  1AEF                     _TIMER_init_timer1:
  7562  1AEF                     l3440:	
  7563                           ;incstack = 0
  7564                           ; Regs used in _TIMER_init_timer1: [wreg]
  7565                           
  7566                           
  7567                           ;timer.c: 10:     TMRA = 65535-5000;
  7568  1AEF  3077               	movlw	119
  7569  1AF0  1283               	bcf	3,5	;RP0=0, select bank2
  7570  1AF1  1703               	bsf	3,6	;RP1=1, select bank2
  7571  1AF2  0090               	movwf	16	;volatile
  7572  1AF3                     l3442:
  7573                           
  7574                           ;timer.c: 24:     T1OSCEN=0;
  7575  1AF3  1283               	bcf	3,5	;RP0=0, select bank0
  7576  1AF4  1303               	bcf	3,6	;RP1=0, select bank0
  7577  1AF5  1190               	bcf	16,3	;volatile
  7578  1AF6                     l3444:
  7579                           
  7580                           ;timer.c: 36:     TMRCS1=0;
  7581  1AF6  1390               	bcf	16,7	;volatile
  7582  1AF7                     l3446:
  7583                           
  7584                           ;timer.c: 37:     TMRCS0=0;
  7585  1AF7  1310               	bcf	16,6	;volatile
  7586  1AF8                     l3448:
  7587                           
  7588                           ;timer.c: 46:     T1CKPS0=1;
  7589  1AF8  1610               	bsf	16,4	;volatile
  7590  1AF9                     l3450:
  7591                           
  7592                           ;timer.c: 47:     T1CKPS1=1;
  7593  1AF9  1690               	bsf	16,5	;volatile
  7594  1AFA                     l3452:
  7595                           
  7596                           ;timer.c: 56:     T1SYNC=1;
  7597  1AFA  1510               	bsf	16,2	;volatile
  7598  1AFB                     l3454:
  7599                           
  7600                           ;timer.c: 62:     TMR1ON=1;
  7601  1AFB  1410               	bsf	16,0	;volatile
  7602  1AFC                     l3456:
  7603                           
  7604                           ;timer.c: 71:     TMR1GE=0;
  7605  1AFC  1683               	bsf	3,5	;RP0=1, select bank1
  7606  1AFD  1303               	bcf	3,6	;RP1=0, select bank1
  7607  1AFE  138F               	bcf	15,7	;volatile
  7608  1AFF                     l3458:
  7609                           
  7610                           ;timer.c: 75:     TMR1IE=1;
  7611  1AFF  140C               	bsf	12,0	;volatile
  7612  1B00                     l176:
  7613  1B00  0008               	return
  7614  1B01                     __end_of_TIMER_init_timer1:
  7615                           
  7616                           	psect	text21
  7617  0791                     __ptext21:	
  7618 ;; *************** function _Resistance_Value *****************
  7619 ;; Defined at:
  7620 ;;		line 128 in file "main.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;  Voltage         4   26[BANK1 ] float 
  7623 ;; Auto vars:     Size  Location     Type
  7624 ;;		None
  7625 ;; Return value:  Size  Location     Type
  7626 ;;                  4   26[BANK1 ] float 
  7627 ;; Registers used:
  7628 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7629 ;; Tracked objects:
  7630 ;;		On entry : 0/0
  7631 ;;		On exit  : 0/0
  7632 ;;		Unchanged: 0/0
  7633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7634 ;;      Params:         0       0       4       0       0
  7635 ;;      Locals:         0       0       0       0       0
  7636 ;;      Temps:          0       0       0       0       0
  7637 ;;      Totals:         0       0       4       0       0
  7638 ;;Total ram usage:        4 bytes
  7639 ;; Hardware stack levels used:    1
  7640 ;; Hardware stack levels required when called:    3
  7641 ;; This function calls:
  7642 ;;		___fldiv
  7643 ;;		___flmul
  7644 ;;		___flsub
  7645 ;; This function is called by:
  7646 ;;		_main
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           
  7651                           ;psect for function _Resistance_Value
  7652  0791                     _Resistance_Value:
  7653  0791                     l3482:	
  7654                           ;incstack = 0
  7655                           ; Regs used in _Resistance_Value: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7656                           
  7657                           
  7658                           ;main.c: 129:     return (4.7 * (5)/(5 -(2*Voltage)));
  7659  0791  3040               	movlw	64
  7660  0792  1283               	bcf	3,5	;RP0=0, select bank0
  7661  0793  1303               	bcf	3,6	;RP1=0, select bank0
  7662  0794  00A7               	movwf	___flmul@b+3
  7663  0795  3000               	movlw	0
  7664  0796  00A6               	movwf	___flmul@b+2
  7665  0797  3000               	movlw	0
  7666  0798  00A5               	movwf	___flmul@b+1
  7667  0799  3000               	movlw	0
  7668  079A  00A4               	movwf	___flmul@b
  7669  079B  1683               	bsf	3,5	;RP0=1, select bank1
  7670  079C  1303               	bcf	3,6	;RP1=0, select bank1
  7671  079D  083D               	movf	(Resistance_Value@Voltage+3)^(0+128),w
  7672  079E  1283               	bcf	3,5	;RP0=0, select bank0
  7673  079F  1303               	bcf	3,6	;RP1=0, select bank0
  7674  07A0  00AB               	movwf	___flmul@a+3
  7675  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  7676  07A2  1303               	bcf	3,6	;RP1=0, select bank1
  7677  07A3  083C               	movf	(Resistance_Value@Voltage+2)^(0+128),w
  7678  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  7679  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  7680  07A6  00AA               	movwf	___flmul@a+2
  7681  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  7682  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  7683  07A9  083B               	movf	(Resistance_Value@Voltage+1)^(0+128),w
  7684  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  7685  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  7686  07AC  00A9               	movwf	___flmul@a+1
  7687  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  7688  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  7689  07AF  083A               	movf	Resistance_Value@Voltage^(0+128),w
  7690  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  7691  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  7692  07B2  00A8               	movwf	___flmul@a
  7693  07B3  120A  158A  249F  120A  118A  	fcall	___flmul
  7694  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  7695  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  7696  07BA  0827               	movf	?___flmul+3,w
  7697  07BB  00E9               	movwf	___flsub@a+3
  7698  07BC  0826               	movf	?___flmul+2,w
  7699  07BD  00E8               	movwf	___flsub@a+2
  7700  07BE  0825               	movf	?___flmul+1,w
  7701  07BF  00E7               	movwf	___flsub@a+1
  7702  07C0  0824               	movf	?___flmul,w
  7703  07C1  00E6               	movwf	___flsub@a
  7704  07C2  3040               	movlw	64
  7705  07C3  00ED               	movwf	___flsub@b+3
  7706  07C4  30A0               	movlw	160
  7707  07C5  00EC               	movwf	___flsub@b+2
  7708  07C6  3000               	movlw	0
  7709  07C7  00EB               	movwf	___flsub@b+1
  7710  07C8  3000               	movlw	0
  7711  07C9  00EA               	movwf	___flsub@b
  7712  07CA  160A  158A  233B  120A  118A  	fcall	___flsub
  7713  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  7714  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  7715  07D1  0869               	movf	?___flsub+3,w
  7716  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  7717  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  7718  07D4  00A3               	movwf	(___fldiv@a+3)^(0+128)
  7719  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  7720  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  7721  07D7  0868               	movf	?___flsub+2,w
  7722  07D8  1683               	bsf	3,5	;RP0=1, select bank1
  7723  07D9  1303               	bcf	3,6	;RP1=0, select bank1
  7724  07DA  00A2               	movwf	(___fldiv@a+2)^(0+128)
  7725  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  7726  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  7727  07DD  0867               	movf	?___flsub+1,w
  7728  07DE  1683               	bsf	3,5	;RP0=1, select bank1
  7729  07DF  1303               	bcf	3,6	;RP1=0, select bank1
  7730  07E0  00A1               	movwf	(___fldiv@a+1)^(0+128)
  7731  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  7732  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  7733  07E3  0866               	movf	?___flsub,w
  7734  07E4  1683               	bsf	3,5	;RP0=1, select bank1
  7735  07E5  1303               	bcf	3,6	;RP1=0, select bank1
  7736  07E6  00A0               	movwf	___fldiv@a^(0+128)
  7737  07E7  3041               	movlw	65
  7738  07E8  00A7               	movwf	(___fldiv@b+3)^(0+128)
  7739  07E9  30BC               	movlw	188
  7740  07EA  00A6               	movwf	(___fldiv@b+2)^(0+128)
  7741  07EB  3000               	movlw	0
  7742  07EC  00A5               	movwf	(___fldiv@b+1)^(0+128)
  7743  07ED  3000               	movlw	0
  7744  07EE  00A4               	movwf	___fldiv@b^(0+128)
  7745  07EF  160A  118A  2190  120A  118A  	fcall	___fldiv
  7746  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  7747  07F5  1303               	bcf	3,6	;RP1=0, select bank1
  7748  07F6  0823               	movf	(?___fldiv+3)^(0+128),w
  7749  07F7  00BD               	movwf	(?_Resistance_Value+3)^(0+128)
  7750  07F8  0822               	movf	(?___fldiv+2)^(0+128),w
  7751  07F9  00BC               	movwf	(?_Resistance_Value+2)^(0+128)
  7752  07FA  0821               	movf	(?___fldiv+1)^(0+128),w
  7753  07FB  00BB               	movwf	(?_Resistance_Value+1)^(0+128)
  7754  07FC  0820               	movf	?___fldiv^(0+128),w
  7755  07FD  00BA               	movwf	?_Resistance_Value^(0+128)
  7756  07FE                     l44:
  7757  07FE  0008               	return
  7758  07FF                     __end_of_Resistance_Value:
  7759                           
  7760                           	psect	text22
  7761  1B3B                     __ptext22:	
  7762 ;; *************** function ___flsub *****************
  7763 ;; Defined at:
  7764 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  a               4   70[BANK0 ] float 
  7767 ;;  b               4   74[BANK0 ] float 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;		None
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  4   70[BANK0 ] float 
  7772 ;; Registers used:
  7773 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7779 ;;      Params:         0       8       0       0       0
  7780 ;;      Locals:         0       0       0       0       0
  7781 ;;      Temps:          0       0       0       0       0
  7782 ;;      Totals:         0       8       0       0       0
  7783 ;;Total ram usage:        8 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    2
  7786 ;; This function calls:
  7787 ;;		___fladd
  7788 ;; This function is called by:
  7789 ;;		_Resistance_Value
  7790 ;;		_sprintf
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           
  7795                           ;psect for function ___flsub
  7796  1B3B                     ___flsub:
  7797  1B3B                     l3210:	
  7798                           ;incstack = 0
  7799                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7800                           
  7801  1B3B  3080               	movlw	128
  7802  1B3C  1283               	bcf	3,5	;RP0=0, select bank0
  7803  1B3D  1303               	bcf	3,6	;RP1=0, select bank0
  7804  1B3E  06E9               	xorwf	___flsub@a+3,f
  7805  1B3F                     l3212:
  7806  1B3F  086D               	movf	___flsub@b+3,w
  7807  1B40  00D5               	movwf	___fladd@b+3
  7808  1B41  086C               	movf	___flsub@b+2,w
  7809  1B42  00D4               	movwf	___fladd@b+2
  7810  1B43  086B               	movf	___flsub@b+1,w
  7811  1B44  00D3               	movwf	___fladd@b+1
  7812  1B45  086A               	movf	___flsub@b,w
  7813  1B46  00D2               	movwf	___fladd@b
  7814  1B47  0869               	movf	___flsub@a+3,w
  7815  1B48  00D9               	movwf	___fladd@a+3
  7816  1B49  0868               	movf	___flsub@a+2,w
  7817  1B4A  00D8               	movwf	___fladd@a+2
  7818  1B4B  0867               	movf	___flsub@a+1,w
  7819  1B4C  00D7               	movwf	___fladd@a+1
  7820  1B4D  0866               	movf	___flsub@a,w
  7821  1B4E  00D6               	movwf	___fladd@a
  7822  1B4F  160A  118A  2578  160A  158A  	fcall	___fladd
  7823  1B54  1283               	bcf	3,5	;RP0=0, select bank0
  7824  1B55  1303               	bcf	3,6	;RP1=0, select bank0
  7825  1B56  0855               	movf	?___fladd+3,w
  7826  1B57  00E9               	movwf	?___flsub+3
  7827  1B58  0854               	movf	?___fladd+2,w
  7828  1B59  00E8               	movwf	?___flsub+2
  7829  1B5A  0853               	movf	?___fladd+1,w
  7830  1B5B  00E7               	movwf	?___flsub+1
  7831  1B5C  0852               	movf	?___fladd,w
  7832  1B5D  00E6               	movwf	?___flsub
  7833  1B5E                     l670:
  7834  1B5E  0008               	return
  7835  1B5F                     __end_of___flsub:
  7836                           
  7837                           	psect	text23
  7838  1578                     __ptext23:	
  7839 ;; *************** function ___fladd *****************
  7840 ;; Defined at:
  7841 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;  b               4   50[BANK0 ] float 
  7844 ;;  a               4   54[BANK0 ] float 
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;  grs             1   69[BANK0 ] unsigned char 
  7847 ;;  bexp            1   68[BANK0 ] unsigned char 
  7848 ;;  aexp            1   67[BANK0 ] unsigned char 
  7849 ;;  signs           1   66[BANK0 ] unsigned char 
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  4   50[BANK0 ] unsigned char 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2, status,0, btemp+1
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7859 ;;      Params:         0       8       0       0       0
  7860 ;;      Locals:         0       4       0       0       0
  7861 ;;      Temps:          0       8       0       0       0
  7862 ;;      Totals:         0      20       0       0       0
  7863 ;;Total ram usage:       20 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:    1
  7866 ;; This function calls:
  7867 ;;		Nothing
  7868 ;; This function is called by:
  7869 ;;		_sprintf
  7870 ;;		___flsub
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           
  7875                           ;psect for function ___fladd
  7876  1578                     ___fladd:
  7877  1578                     l2508:	
  7878                           ;incstack = 0
  7879                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7880                           
  7881  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7882  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7883  157A  0855               	movf	___fladd@b+3,w
  7884  157B  3980               	andlw	128
  7885  157C  00FF               	movwf	btemp+1
  7886  157D  087F               	movf	btemp+1,w
  7887  157E  00E2               	movwf	___fladd@signs
  7888  157F                     l2510:
  7889  157F  0855               	movf	___fladd@b+3,w
  7890  1580  00DA               	movwf	??___fladd
  7891  1581  075A               	addwf	??___fladd,w
  7892  1582  00FF               	movwf	btemp+1
  7893  1583  087F               	movf	btemp+1,w
  7894  1584  00E4               	movwf	___fladd@bexp
  7895  1585                     l2512:
  7896  1585  1FD4               	btfss	___fladd@b+2,7
  7897  1586  2D88               	goto	u3451
  7898  1587  2D89               	goto	u3450
  7899  1588                     u3451:
  7900  1588  2D8A               	goto	l2516
  7901  1589                     u3450:
  7902  1589                     l2514:
  7903  1589  1464               	bsf	___fladd@bexp,0
  7904  158A                     l2516:
  7905  158A  0864               	movf	___fladd@bexp,w
  7906  158B  1903               	btfsc	3,2
  7907  158C  2D8E               	goto	u3461
  7908  158D  2D8F               	goto	u3460
  7909  158E                     u3461:
  7910  158E  2D9F               	goto	l2526
  7911  158F                     u3460:
  7912  158F                     l2518:
  7913  158F  0A64               	incf	___fladd@bexp,w
  7914  1590  1D03               	btfss	3,2
  7915  1591  2D93               	goto	u3471
  7916  1592  2D94               	goto	u3470
  7917  1593                     u3471:
  7918  1593  2D9C               	goto	l2522
  7919  1594                     u3470:
  7920  1594                     l2520:
  7921  1594  3000               	movlw	0
  7922  1595  00D5               	movwf	___fladd@b+3
  7923  1596  3000               	movlw	0
  7924  1597  00D4               	movwf	___fladd@b+2
  7925  1598  3000               	movlw	0
  7926  1599  00D3               	movwf	___fladd@b+1
  7927  159A  3000               	movlw	0
  7928  159B  00D2               	movwf	___fladd@b
  7929  159C                     l2522:
  7930  159C  17D4               	bsf	___fladd@b+2,7
  7931  159D                     l2524:
  7932  159D  01D5               	clrf	___fladd@b+3
  7933  159E  2DA7               	goto	l2528
  7934  159F                     l2526:
  7935  159F  3000               	movlw	0
  7936  15A0  00D5               	movwf	___fladd@b+3
  7937  15A1  3000               	movlw	0
  7938  15A2  00D4               	movwf	___fladd@b+2
  7939  15A3  3000               	movlw	0
  7940  15A4  00D3               	movwf	___fladd@b+1
  7941  15A5  3000               	movlw	0
  7942  15A6  00D2               	movwf	___fladd@b
  7943  15A7                     l2528:
  7944  15A7  0859               	movf	___fladd@a+3,w
  7945  15A8  3980               	andlw	128
  7946  15A9  00FF               	movwf	btemp+1
  7947  15AA  087F               	movf	btemp+1,w
  7948  15AB  00E3               	movwf	___fladd@aexp
  7949  15AC                     l2530:
  7950  15AC  0863               	movf	___fladd@aexp,w
  7951  15AD  0662               	xorwf	___fladd@signs,w
  7952  15AE  1903               	skipnz
  7953  15AF  2DB1               	goto	u3481
  7954  15B0  2DB2               	goto	u3480
  7955  15B1                     u3481:
  7956  15B1  2DB3               	goto	l2534
  7957  15B2                     u3480:
  7958  15B2                     l2532:
  7959  15B2  1762               	bsf	___fladd@signs,6
  7960  15B3                     l2534:
  7961  15B3  0859               	movf	___fladd@a+3,w
  7962  15B4  00DA               	movwf	??___fladd
  7963  15B5  075A               	addwf	??___fladd,w
  7964  15B6  00FF               	movwf	btemp+1
  7965  15B7  087F               	movf	btemp+1,w
  7966  15B8  00E3               	movwf	___fladd@aexp
  7967  15B9                     l2536:
  7968  15B9  1FD8               	btfss	___fladd@a+2,7
  7969  15BA  2DBC               	goto	u3491
  7970  15BB  2DBD               	goto	u3490
  7971  15BC                     u3491:
  7972  15BC  2DBE               	goto	l2540
  7973  15BD                     u3490:
  7974  15BD                     l2538:
  7975  15BD  1463               	bsf	___fladd@aexp,0
  7976  15BE                     l2540:
  7977  15BE  0863               	movf	___fladd@aexp,w
  7978  15BF  1903               	btfsc	3,2
  7979  15C0  2DC2               	goto	u3501
  7980  15C1  2DC3               	goto	u3500
  7981  15C2                     u3501:
  7982  15C2  2DD3               	goto	l2550
  7983  15C3                     u3500:
  7984  15C3                     l2542:
  7985  15C3  0A63               	incf	___fladd@aexp,w
  7986  15C4  1D03               	btfss	3,2
  7987  15C5  2DC7               	goto	u3511
  7988  15C6  2DC8               	goto	u3510
  7989  15C7                     u3511:
  7990  15C7  2DD0               	goto	l2546
  7991  15C8                     u3510:
  7992  15C8                     l2544:
  7993  15C8  3000               	movlw	0
  7994  15C9  00D9               	movwf	___fladd@a+3
  7995  15CA  3000               	movlw	0
  7996  15CB  00D8               	movwf	___fladd@a+2
  7997  15CC  3000               	movlw	0
  7998  15CD  00D7               	movwf	___fladd@a+1
  7999  15CE  3000               	movlw	0
  8000  15CF  00D6               	movwf	___fladd@a
  8001  15D0                     l2546:
  8002  15D0  17D8               	bsf	___fladd@a+2,7
  8003  15D1                     l2548:
  8004  15D1  01D9               	clrf	___fladd@a+3
  8005  15D2  2DDB               	goto	l624
  8006  15D3                     l2550:
  8007  15D3  3000               	movlw	0
  8008  15D4  00D9               	movwf	___fladd@a+3
  8009  15D5  3000               	movlw	0
  8010  15D6  00D8               	movwf	___fladd@a+2
  8011  15D7  3000               	movlw	0
  8012  15D8  00D7               	movwf	___fladd@a+1
  8013  15D9  3000               	movlw	0
  8014  15DA  00D6               	movwf	___fladd@a
  8015  15DB                     l624:
  8016  15DB  0864               	movf	___fladd@bexp,w
  8017  15DC  0263               	subwf	___fladd@aexp,w
  8018  15DD  1803               	skipnc
  8019  15DE  2DE0               	goto	u3521
  8020  15DF  2DE1               	goto	u3520
  8021  15E0                     u3521:
  8022  15E0  2E25               	goto	l2586
  8023  15E1                     u3520:
  8024  15E1                     l2552:
  8025  15E1  1F62               	btfss	___fladd@signs,6
  8026  15E2  2DE4               	goto	u3531
  8027  15E3  2DE5               	goto	u3530
  8028  15E4                     u3531:
  8029  15E4  2DE9               	goto	l2556
  8030  15E5                     u3530:
  8031  15E5                     l2554:
  8032  15E5  3080               	movlw	128
  8033  15E6  00FF               	movwf	btemp+1
  8034  15E7  087F               	movf	btemp+1,w
  8035  15E8  06E2               	xorwf	___fladd@signs,f
  8036  15E9                     l2556:
  8037  15E9  0864               	movf	___fladd@bexp,w
  8038  15EA  00FF               	movwf	btemp+1
  8039  15EB  087F               	movf	btemp+1,w
  8040  15EC  00E5               	movwf	___fladd@grs
  8041  15ED                     l2558:
  8042  15ED  0863               	movf	___fladd@aexp,w
  8043  15EE  00FF               	movwf	btemp+1
  8044  15EF  087F               	movf	btemp+1,w
  8045  15F0  00E4               	movwf	___fladd@bexp
  8046  15F1                     l2560:
  8047  15F1  0865               	movf	___fladd@grs,w
  8048  15F2  00FF               	movwf	btemp+1
  8049  15F3  087F               	movf	btemp+1,w
  8050  15F4  00E3               	movwf	___fladd@aexp
  8051  15F5                     l2562:
  8052  15F5  0852               	movf	___fladd@b,w
  8053  15F6  00FF               	movwf	btemp+1
  8054  15F7  087F               	movf	btemp+1,w
  8055  15F8  00E5               	movwf	___fladd@grs
  8056  15F9                     l2564:
  8057  15F9  0856               	movf	___fladd@a,w
  8058  15FA  00FF               	movwf	btemp+1
  8059  15FB  087F               	movf	btemp+1,w
  8060  15FC  00D2               	movwf	___fladd@b
  8061  15FD                     l2566:
  8062  15FD  0865               	movf	___fladd@grs,w
  8063  15FE  00FF               	movwf	btemp+1
  8064  15FF  087F               	movf	btemp+1,w
  8065  1600  00D6               	movwf	___fladd@a
  8066  1601                     l2568:
  8067  1601  0853               	movf	___fladd@b+1,w
  8068  1602  00FF               	movwf	btemp+1
  8069  1603  087F               	movf	btemp+1,w
  8070  1604  00E5               	movwf	___fladd@grs
  8071  1605                     l2570:
  8072  1605  0857               	movf	___fladd@a+1,w
  8073  1606  00FF               	movwf	btemp+1
  8074  1607  087F               	movf	btemp+1,w
  8075  1608  00D3               	movwf	___fladd@b+1
  8076  1609                     l2572:
  8077  1609  0865               	movf	___fladd@grs,w
  8078  160A  00FF               	movwf	btemp+1
  8079  160B  087F               	movf	btemp+1,w
  8080  160C  00D7               	movwf	___fladd@a+1
  8081  160D                     l2574:
  8082  160D  0854               	movf	___fladd@b+2,w
  8083  160E  00FF               	movwf	btemp+1
  8084  160F  087F               	movf	btemp+1,w
  8085  1610  00E5               	movwf	___fladd@grs
  8086  1611                     l2576:
  8087  1611  0858               	movf	___fladd@a+2,w
  8088  1612  00FF               	movwf	btemp+1
  8089  1613  087F               	movf	btemp+1,w
  8090  1614  00D4               	movwf	___fladd@b+2
  8091  1615                     l2578:
  8092  1615  0865               	movf	___fladd@grs,w
  8093  1616  00FF               	movwf	btemp+1
  8094  1617  087F               	movf	btemp+1,w
  8095  1618  00D8               	movwf	___fladd@a+2
  8096  1619                     l2580:
  8097  1619  0855               	movf	___fladd@b+3,w
  8098  161A  00FF               	movwf	btemp+1
  8099  161B  087F               	movf	btemp+1,w
  8100  161C  00E5               	movwf	___fladd@grs
  8101  161D                     l2582:
  8102  161D  0859               	movf	___fladd@a+3,w
  8103  161E  00FF               	movwf	btemp+1
  8104  161F  087F               	movf	btemp+1,w
  8105  1620  00D5               	movwf	___fladd@b+3
  8106  1621                     l2584:
  8107  1621  0865               	movf	___fladd@grs,w
  8108  1622  00FF               	movwf	btemp+1
  8109  1623  087F               	movf	btemp+1,w
  8110  1624  00D9               	movwf	___fladd@a+3
  8111  1625                     l2586:
  8112  1625  01E5               	clrf	___fladd@grs
  8113  1626                     l2588:
  8114  1626  0863               	movf	___fladd@aexp,w
  8115  1627  00DA               	movwf	??___fladd
  8116  1628  01DB               	clrf	??___fladd+1
  8117  1629  085B               	movf	??___fladd+1,w
  8118  162A  00DD               	movwf	??___fladd+3
  8119  162B  0864               	movf	___fladd@bexp,w
  8120  162C  025A               	subwf	??___fladd,w
  8121  162D  00DC               	movwf	??___fladd+2
  8122  162E  1C03               	skipc
  8123  162F  03DD               	decf	??___fladd+3,f
  8124  1630  085D               	movf	??___fladd+3,w
  8125  1631  3A80               	xorlw	128
  8126  1632  00FF               	movwf	btemp+1
  8127  1633  3080               	movlw	128
  8128  1634  027F               	subwf	btemp+1,w
  8129  1635  1D03               	skipz
  8130  1636  2E39               	goto	u3545
  8131  1637  301A               	movlw	26
  8132  1638  025C               	subwf	??___fladd+2,w
  8133  1639                     u3545:
  8134  1639  1C03               	skipc
  8135  163A  2E3C               	goto	u3541
  8136  163B  2E3D               	goto	u3540
  8137  163C                     u3541:
  8138  163C  2E7A               	goto	l2608
  8139  163D                     u3540:
  8140  163D                     l2590:
  8141  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8142  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8143  163F  0855               	movf	___fladd@b+3,w
  8144  1640  0454               	iorwf	___fladd@b+2,w
  8145  1641  0453               	iorwf	___fladd@b+1,w
  8146  1642  0452               	iorwf	___fladd@b,w
  8147  1643  1D03               	skipz
  8148  1644  2E46               	goto	u3551
  8149  1645  2E48               	goto	u3550
  8150  1646                     u3551:
  8151  1646  3001               	movlw	1
  8152  1647  2E49               	goto	u3560
  8153  1648                     u3550:
  8154  1648  3000               	movlw	0
  8155  1649                     u3560:
  8156  1649  00FF               	movwf	btemp+1
  8157  164A  087F               	movf	btemp+1,w
  8158  164B  00E5               	movwf	___fladd@grs
  8159  164C                     l2592:
  8160  164C  3000               	movlw	0
  8161  164D  00D5               	movwf	___fladd@b+3
  8162  164E  3000               	movlw	0
  8163  164F  00D4               	movwf	___fladd@b+2
  8164  1650  3000               	movlw	0
  8165  1651  00D3               	movwf	___fladd@b+1
  8166  1652  3000               	movlw	0
  8167  1653  00D2               	movwf	___fladd@b
  8168  1654                     l2594:
  8169  1654  0863               	movf	___fladd@aexp,w
  8170  1655  00FF               	movwf	btemp+1
  8171  1656  087F               	movf	btemp+1,w
  8172  1657  00E4               	movwf	___fladd@bexp
  8173  1658  2E82               	goto	l628
  8174  1659                     l630:
  8175  1659  1C65               	btfss	___fladd@grs,0
  8176  165A  2E5C               	goto	u3571
  8177  165B  2E5D               	goto	u3570
  8178  165C                     u3571:
  8179  165C  2E66               	goto	l2598
  8180  165D                     u3570:
  8181  165D                     l2596:
  8182  165D  0865               	movf	___fladd@grs,w
  8183  165E  00DA               	movwf	??___fladd
  8184  165F  1003               	clrc
  8185  1660  0C5A               	rrf	??___fladd,w
  8186  1661  3801               	iorlw	1
  8187  1662  00FF               	movwf	btemp+1
  8188  1663  087F               	movf	btemp+1,w
  8189  1664  00E5               	movwf	___fladd@grs
  8190  1665  2E68               	goto	l2600
  8191  1666                     l2598:
  8192  1666  1003               	clrc
  8193  1667  0CE5               	rrf	___fladd@grs,f
  8194  1668                     l2600:
  8195  1668  1C52               	btfss	___fladd@b,0
  8196  1669  2E6B               	goto	u3581
  8197  166A  2E6C               	goto	u3580
  8198  166B                     u3581:
  8199  166B  2E6D               	goto	l2604
  8200  166C                     u3580:
  8201  166C                     l2602:
  8202  166C  17E5               	bsf	___fladd@grs,7
  8203  166D                     l2604:
  8204  166D  3001               	movlw	1
  8205  166E  00DA               	movwf	??___fladd
  8206  166F                     u3595:
  8207  166F  0D55               	rlf	___fladd@b+3,w
  8208  1670  0CD5               	rrf	___fladd@b+3,f
  8209  1671  0CD4               	rrf	___fladd@b+2,f
  8210  1672  0CD3               	rrf	___fladd@b+1,f
  8211  1673  0CD2               	rrf	___fladd@b,f
  8212  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8213  1675  2E6F               	goto	u3595
  8214  1676                     l2606:
  8215  1676  3001               	movlw	1
  8216  1677  00FF               	movwf	btemp+1
  8217  1678  087F               	movf	btemp+1,w
  8218  1679  07E4               	addwf	___fladd@bexp,f
  8219  167A                     l2608:
  8220  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8221  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8222  167C  0863               	movf	___fladd@aexp,w
  8223  167D  0264               	subwf	___fladd@bexp,w
  8224  167E  1C03               	skipc
  8225  167F  2E81               	goto	u3601
  8226  1680  2E82               	goto	u3600
  8227  1681                     u3601:
  8228  1681  2E59               	goto	l630
  8229  1682                     u3600:
  8230  1682                     l628:
  8231  1682  1B62               	btfsc	___fladd@signs,6
  8232  1683  2E85               	goto	u3611
  8233  1684  2E86               	goto	u3610
  8234  1685                     u3611:
  8235  1685  2ED1               	goto	l2634
  8236  1686                     u3610:
  8237  1686                     l2610:
  8238  1686  0864               	movf	___fladd@bexp,w
  8239  1687  1D03               	btfss	3,2
  8240  1688  2E8A               	goto	u3621
  8241  1689  2E8B               	goto	u3620
  8242  168A                     u3621:
  8243  168A  2E94               	goto	l2616
  8244  168B                     u3620:
  8245  168B                     l2612:
  8246  168B  3000               	movlw	0
  8247  168C  00D5               	movwf	?___fladd+3
  8248  168D  3000               	movlw	0
  8249  168E  00D4               	movwf	?___fladd+2
  8250  168F  3000               	movlw	0
  8251  1690  00D3               	movwf	?___fladd+1
  8252  1691  3000               	movlw	0
  8253  1692  00D2               	movwf	?___fladd
  8254  1693  2FFF               	goto	l637
  8255  1694                     l2616:
  8256  1694  0856               	movf	___fladd@a,w
  8257  1695  07D2               	addwf	___fladd@b,f
  8258  1696  0857               	movf	___fladd@a+1,w
  8259  1697  1103               	clrz
  8260  1698  1803               	skipnc
  8261  1699  3E01               	addlw	1
  8262  169A  1903               	skipnz
  8263  169B  2E9D               	goto	u3631
  8264  169C  07D3               	addwf	___fladd@b+1,f
  8265  169D                     u3631:
  8266  169D  0858               	movf	___fladd@a+2,w
  8267  169E  1103               	clrz
  8268  169F  1803               	skipnc
  8269  16A0  3E01               	addlw	1
  8270  16A1  1903               	skipnz
  8271  16A2  2EA4               	goto	u3632
  8272  16A3  07D4               	addwf	___fladd@b+2,f
  8273  16A4                     u3632:
  8274  16A4  0859               	movf	___fladd@a+3,w
  8275  16A5  1103               	clrz
  8276  16A6  1803               	skipnc
  8277  16A7  3E01               	addlw	1
  8278  16A8  1903               	skipnz
  8279  16A9  2EAB               	goto	u3633
  8280  16AA  07D5               	addwf	___fladd@b+3,f
  8281  16AB                     u3633:
  8282  16AB                     l2618:
  8283  16AB  1C55               	btfss	___fladd@b+3,0
  8284  16AC  2EAE               	goto	u3641
  8285  16AD  2EAF               	goto	u3640
  8286  16AE                     u3641:
  8287  16AE  2F85               	goto	l2670
  8288  16AF                     u3640:
  8289  16AF                     l2620:
  8290  16AF  1C65               	btfss	___fladd@grs,0
  8291  16B0  2EB2               	goto	u3651
  8292  16B1  2EB3               	goto	u3650
  8293  16B2                     u3651:
  8294  16B2  2EBC               	goto	l2624
  8295  16B3                     u3650:
  8296  16B3                     l2622:
  8297  16B3  0865               	movf	___fladd@grs,w
  8298  16B4  00DA               	movwf	??___fladd
  8299  16B5  1003               	clrc
  8300  16B6  0C5A               	rrf	??___fladd,w
  8301  16B7  3801               	iorlw	1
  8302  16B8  00FF               	movwf	btemp+1
  8303  16B9  087F               	movf	btemp+1,w
  8304  16BA  00E5               	movwf	___fladd@grs
  8305  16BB  2EBE               	goto	l2626
  8306  16BC                     l2624:
  8307  16BC  1003               	clrc
  8308  16BD  0CE5               	rrf	___fladd@grs,f
  8309  16BE                     l2626:
  8310  16BE  1C52               	btfss	___fladd@b,0
  8311  16BF  2EC1               	goto	u3661
  8312  16C0  2EC2               	goto	u3660
  8313  16C1                     u3661:
  8314  16C1  2EC3               	goto	l2630
  8315  16C2                     u3660:
  8316  16C2                     l2628:
  8317  16C2  17E5               	bsf	___fladd@grs,7
  8318  16C3                     l2630:
  8319  16C3  3001               	movlw	1
  8320  16C4  00DA               	movwf	??___fladd
  8321  16C5                     u3675:
  8322  16C5  0D55               	rlf	___fladd@b+3,w
  8323  16C6  0CD5               	rrf	___fladd@b+3,f
  8324  16C7  0CD4               	rrf	___fladd@b+2,f
  8325  16C8  0CD3               	rrf	___fladd@b+1,f
  8326  16C9  0CD2               	rrf	___fladd@b,f
  8327  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8328  16CB  2EC5               	goto	u3675
  8329  16CC                     l2632:
  8330  16CC  3001               	movlw	1
  8331  16CD  00FF               	movwf	btemp+1
  8332  16CE  087F               	movf	btemp+1,w
  8333  16CF  07E4               	addwf	___fladd@bexp,f
  8334  16D0  2F85               	goto	l2670
  8335  16D1                     l2634:
  8336  16D1  0855               	movf	___fladd@b+3,w
  8337  16D2  3A80               	xorlw	128
  8338  16D3  00FF               	movwf	btemp+1
  8339  16D4  0859               	movf	___fladd@a+3,w
  8340  16D5  3A80               	xorlw	128
  8341  16D6  027F               	subwf	btemp+1,w
  8342  16D7  1D03               	skipz
  8343  16D8  2EE3               	goto	u3683
  8344  16D9  0858               	movf	___fladd@a+2,w
  8345  16DA  0254               	subwf	___fladd@b+2,w
  8346  16DB  1D03               	skipz
  8347  16DC  2EE3               	goto	u3683
  8348  16DD  0857               	movf	___fladd@a+1,w
  8349  16DE  0253               	subwf	___fladd@b+1,w
  8350  16DF  1D03               	skipz
  8351  16E0  2EE3               	goto	u3683
  8352  16E1  0856               	movf	___fladd@a,w
  8353  16E2  0252               	subwf	___fladd@b,w
  8354  16E3                     u3683:
  8355  16E3  1803               	skipnc
  8356  16E4  2EE6               	goto	u3681
  8357  16E5  2EE7               	goto	u3680
  8358  16E6                     u3681:
  8359  16E6  2F3F               	goto	l2646
  8360  16E7                     u3680:
  8361  16E7                     l2636:
  8362  16E7  30FF               	movlw	255
  8363  16E8  00DA               	movwf	??___fladd
  8364  16E9  30FF               	movlw	255
  8365  16EA  00DB               	movwf	??___fladd+1
  8366  16EB  30FF               	movlw	255
  8367  16EC  00DC               	movwf	??___fladd+2
  8368  16ED  30FF               	movlw	255
  8369  16EE  00DD               	movwf	??___fladd+3
  8370  16EF  0856               	movf	___fladd@a,w
  8371  16F0  00DE               	movwf	??___fladd+4
  8372  16F1  0857               	movf	___fladd@a+1,w
  8373  16F2  00DF               	movwf	??___fladd+5
  8374  16F3  0858               	movf	___fladd@a+2,w
  8375  16F4  00E0               	movwf	??___fladd+6
  8376  16F5  0859               	movf	___fladd@a+3,w
  8377  16F6  00E1               	movwf	??___fladd+7
  8378  16F7  0852               	movf	___fladd@b,w
  8379  16F8  02DE               	subwf	??___fladd+4,f
  8380  16F9  0853               	movf	___fladd@b+1,w
  8381  16FA  1C03               	skipc
  8382  16FB  0F53               	incfsz	___fladd@b+1,w
  8383  16FC  2EFE               	goto	u3691
  8384  16FD  2EFF               	goto	u3692
  8385  16FE                     u3691:
  8386  16FE  02DF               	subwf	??___fladd+5,f
  8387  16FF                     u3692:
  8388  16FF  0854               	movf	___fladd@b+2,w
  8389  1700  1C03               	skipc
  8390  1701  0F54               	incfsz	___fladd@b+2,w
  8391  1702  2F04               	goto	u3693
  8392  1703  2F05               	goto	u3694
  8393  1704                     u3693:
  8394  1704  02E0               	subwf	??___fladd+6,f
  8395  1705                     u3694:
  8396  1705  0855               	movf	___fladd@b+3,w
  8397  1706  1C03               	skipc
  8398  1707  0F55               	incfsz	___fladd@b+3,w
  8399  1708  2F0A               	goto	u3695
  8400  1709  2F0B               	goto	u3696
  8401  170A                     u3695:
  8402  170A  02E1               	subwf	??___fladd+7,f
  8403  170B                     u3696:
  8404  170B  085E               	movf	??___fladd+4,w
  8405  170C  07DA               	addwf	??___fladd,f
  8406  170D  085F               	movf	??___fladd+5,w
  8407  170E  1803               	skipnc
  8408  170F  0F5F               	incfsz	??___fladd+5,w
  8409  1710  2F12               	goto	u3700
  8410  1711  2F13               	goto	u3701
  8411  1712                     u3700:
  8412  1712  07DB               	addwf	??___fladd+1,f
  8413  1713                     u3701:
  8414  1713  0860               	movf	??___fladd+6,w
  8415  1714  1803               	skipnc
  8416  1715  0F60               	incfsz	??___fladd+6,w
  8417  1716  2F18               	goto	u3702
  8418  1717  2F19               	goto	u3703
  8419  1718                     u3702:
  8420  1718  07DC               	addwf	??___fladd+2,f
  8421  1719                     u3703:
  8422  1719  0861               	movf	??___fladd+7,w
  8423  171A  1803               	skipnc
  8424  171B  0A61               	incf	??___fladd+7,w
  8425  171C  07DD               	addwf	??___fladd+3,f
  8426  171D  085D               	movf	??___fladd+3,w
  8427  171E  00D5               	movwf	___fladd@b+3
  8428  171F  085C               	movf	??___fladd+2,w
  8429  1720  00D4               	movwf	___fladd@b+2
  8430  1721  085B               	movf	??___fladd+1,w
  8431  1722  00D3               	movwf	___fladd@b+1
  8432  1723  085A               	movf	??___fladd,w
  8433  1724  00D2               	movwf	___fladd@b
  8434  1725                     l2638:
  8435  1725  3080               	movlw	128
  8436  1726  00FF               	movwf	btemp+1
  8437  1727  087F               	movf	btemp+1,w
  8438  1728  06E2               	xorwf	___fladd@signs,f
  8439  1729                     l2640:
  8440  1729  09E5               	comf	___fladd@grs,f
  8441  172A  0AE5               	incf	___fladd@grs,f
  8442  172B                     l2642:
  8443  172B  0865               	movf	___fladd@grs,w
  8444  172C  1D03               	btfss	3,2
  8445  172D  2F2F               	goto	u3711
  8446  172E  2F30               	goto	u3710
  8447  172F                     u3711:
  8448  172F  2F4D               	goto	l645
  8449  1730                     u3710:
  8450  1730                     l2644:
  8451  1730  3001               	movlw	1
  8452  1731  07D2               	addwf	___fladd@b,f
  8453  1732  3000               	movlw	0
  8454  1733  1803               	skipnc
  8455  1734  3001               	movlw	1
  8456  1735  07D3               	addwf	___fladd@b+1,f
  8457  1736  3000               	movlw	0
  8458  1737  1803               	skipnc
  8459  1738  3001               	movlw	1
  8460  1739  07D4               	addwf	___fladd@b+2,f
  8461  173A  3000               	movlw	0
  8462  173B  1803               	skipnc
  8463  173C  3001               	movlw	1
  8464  173D  07D5               	addwf	___fladd@b+3,f
  8465  173E  2F4D               	goto	l645
  8466  173F                     l2646:
  8467  173F  0856               	movf	___fladd@a,w
  8468  1740  02D2               	subwf	___fladd@b,f
  8469  1741  0857               	movf	___fladd@a+1,w
  8470  1742  1C03               	skipc
  8471  1743  0F57               	incfsz	___fladd@a+1,w
  8472  1744  02D3               	subwf	___fladd@b+1,f
  8473  1745  0858               	movf	___fladd@a+2,w
  8474  1746  1C03               	skipc
  8475  1747  0F58               	incfsz	___fladd@a+2,w
  8476  1748  02D4               	subwf	___fladd@b+2,f
  8477  1749  0859               	movf	___fladd@a+3,w
  8478  174A  1C03               	skipc
  8479  174B  0F59               	incfsz	___fladd@a+3,w
  8480  174C  02D5               	subwf	___fladd@b+3,f
  8481  174D                     l645:
  8482  174D  0855               	movf	___fladd@b+3,w
  8483  174E  0454               	iorwf	___fladd@b+2,w
  8484  174F  0453               	iorwf	___fladd@b+1,w
  8485  1750  0452               	iorwf	___fladd@b,w
  8486  1751  1D03               	skipz
  8487  1752  2F54               	goto	u3721
  8488  1753  2F55               	goto	u3720
  8489  1754                     u3721:
  8490  1754  2F81               	goto	l2668
  8491  1755                     u3720:
  8492  1755                     l2648:
  8493  1755  0865               	movf	___fladd@grs,w
  8494  1756  1D03               	btfss	3,2
  8495  1757  2F59               	goto	u3731
  8496  1758  2F5A               	goto	u3730
  8497  1759                     u3731:
  8498  1759  2F81               	goto	l2668
  8499  175A                     u3730:
  8500  175A                     l2650:
  8501  175A  3000               	movlw	0
  8502  175B  00D5               	movwf	?___fladd+3
  8503  175C  3000               	movlw	0
  8504  175D  00D4               	movwf	?___fladd+2
  8505  175E  3000               	movlw	0
  8506  175F  00D3               	movwf	?___fladd+1
  8507  1760  3000               	movlw	0
  8508  1761  00D2               	movwf	?___fladd
  8509  1762  2FFF               	goto	l637
  8510  1763                     l2654:
  8511  1763  3001               	movlw	1
  8512  1764  00DA               	movwf	??___fladd
  8513  1765                     u3745:
  8514  1765  1003               	clrc
  8515  1766  0DD2               	rlf	___fladd@b,f
  8516  1767  0DD3               	rlf	___fladd@b+1,f
  8517  1768  0DD4               	rlf	___fladd@b+2,f
  8518  1769  0DD5               	rlf	___fladd@b+3,f
  8519  176A  0BDA               	decfsz	??___fladd,f
  8520  176B  2F65               	goto	u3745
  8521  176C                     l2656:
  8522  176C  1FE5               	btfss	___fladd@grs,7
  8523  176D  2F6F               	goto	u3751
  8524  176E  2F70               	goto	u3750
  8525  176F                     u3751:
  8526  176F  2F71               	goto	l649
  8527  1770                     u3750:
  8528  1770                     l2658:
  8529  1770  1452               	bsf	___fladd@b,0
  8530  1771                     l649:
  8531  1771  1C65               	btfss	___fladd@grs,0
  8532  1772  2F74               	goto	u3761
  8533  1773  2F75               	goto	u3760
  8534  1774                     u3761:
  8535  1774  2F78               	goto	l2662
  8536  1775                     u3760:
  8537  1775                     l2660:
  8538  1775  1403               	setc
  8539  1776  0DE5               	rlf	___fladd@grs,f
  8540  1777  2F7A               	goto	l2664
  8541  1778                     l2662:
  8542  1778  1003               	clrc
  8543  1779  0DE5               	rlf	___fladd@grs,f
  8544  177A                     l2664:
  8545  177A  0864               	movf	___fladd@bexp,w
  8546  177B  1903               	btfsc	3,2
  8547  177C  2F7E               	goto	u3771
  8548  177D  2F7F               	goto	u3770
  8549  177E                     u3771:
  8550  177E  2F81               	goto	l2668
  8551  177F                     u3770:
  8552  177F                     l2666:
  8553  177F  3001               	movlw	1
  8554  1780  02E4               	subwf	___fladd@bexp,f
  8555  1781                     l2668:
  8556  1781  1FD4               	btfss	___fladd@b+2,7
  8557  1782  2F84               	goto	u3781
  8558  1783  2F85               	goto	u3780
  8559  1784                     u3781:
  8560  1784  2F63               	goto	l2654
  8561  1785                     u3780:
  8562  1785                     l2670:
  8563  1785  01E3               	clrf	___fladd@aexp
  8564  1786                     l2672:
  8565  1786  1FE5               	btfss	___fladd@grs,7
  8566  1787  2F89               	goto	u3791
  8567  1788  2F8A               	goto	u3790
  8568  1789                     u3791:
  8569  1789  2F98               	goto	l2680
  8570  178A                     u3790:
  8571  178A                     l2674:
  8572  178A  0865               	movf	___fladd@grs,w
  8573  178B  397F               	andlw	127
  8574  178C  1903               	btfsc	3,2
  8575  178D  2F8F               	goto	u3801
  8576  178E  2F90               	goto	u3800
  8577  178F                     u3801:
  8578  178F  2F93               	goto	l655
  8579  1790                     u3800:
  8580  1790                     l2676:
  8581  1790  01E3               	clrf	___fladd@aexp
  8582  1791  0AE3               	incf	___fladd@aexp,f
  8583  1792  2F98               	goto	l2680
  8584  1793                     l655:
  8585  1793  1C52               	btfss	___fladd@b,0
  8586  1794  2F96               	goto	u3811
  8587  1795  2F97               	goto	u3810
  8588  1796                     u3811:
  8589  1796  2F98               	goto	l2680
  8590  1797                     u3810:
  8591  1797  2F90               	goto	l2676
  8592  1798                     l2680:
  8593  1798  0863               	movf	___fladd@aexp,w
  8594  1799  1903               	btfsc	3,2
  8595  179A  2F9C               	goto	u3821
  8596  179B  2F9D               	goto	u3820
  8597  179C                     u3821:
  8598  179C  2FD1               	goto	l2690
  8599  179D                     u3820:
  8600  179D                     l2682:
  8601  179D  3001               	movlw	1
  8602  179E  07D2               	addwf	___fladd@b,f
  8603  179F  3000               	movlw	0
  8604  17A0  1803               	skipnc
  8605  17A1  3001               	movlw	1
  8606  17A2  07D3               	addwf	___fladd@b+1,f
  8607  17A3  3000               	movlw	0
  8608  17A4  1803               	skipnc
  8609  17A5  3001               	movlw	1
  8610  17A6  07D4               	addwf	___fladd@b+2,f
  8611  17A7  3000               	movlw	0
  8612  17A8  1803               	skipnc
  8613  17A9  3001               	movlw	1
  8614  17AA  07D5               	addwf	___fladd@b+3,f
  8615  17AB                     l2684:
  8616  17AB  1C55               	btfss	___fladd@b+3,0
  8617  17AC  2FAE               	goto	u3831
  8618  17AD  2FAF               	goto	u3830
  8619  17AE                     u3831:
  8620  17AE  2FD1               	goto	l2690
  8621  17AF                     u3830:
  8622  17AF                     l2686:
  8623  17AF  0852               	movf	___fladd@b,w
  8624  17B0  00DA               	movwf	??___fladd
  8625  17B1  0853               	movf	___fladd@b+1,w
  8626  17B2  00DB               	movwf	??___fladd+1
  8627  17B3  0854               	movf	___fladd@b+2,w
  8628  17B4  00DC               	movwf	??___fladd+2
  8629  17B5  0855               	movf	___fladd@b+3,w
  8630  17B6  00DD               	movwf	??___fladd+3
  8631  17B7  3001               	movlw	1
  8632  17B8  00DE               	movwf	??___fladd+4
  8633  17B9                     u3845:
  8634  17B9  0D5D               	rlf	??___fladd+3,w
  8635  17BA  0CDD               	rrf	??___fladd+3,f
  8636  17BB  0CDC               	rrf	??___fladd+2,f
  8637  17BC  0CDB               	rrf	??___fladd+1,f
  8638  17BD  0CDA               	rrf	??___fladd,f
  8639  17BE                     u3840:
  8640  17BE  0BDE               	decfsz	??___fladd+4,f
  8641  17BF  2FB9               	goto	u3845
  8642  17C0  085D               	movf	??___fladd+3,w
  8643  17C1  00D5               	movwf	___fladd@b+3
  8644  17C2  085C               	movf	??___fladd+2,w
  8645  17C3  00D4               	movwf	___fladd@b+2
  8646  17C4  085B               	movf	??___fladd+1,w
  8647  17C5  00D3               	movwf	___fladd@b+1
  8648  17C6  085A               	movf	??___fladd,w
  8649  17C7  00D2               	movwf	___fladd@b
  8650  17C8  0A64               	incf	___fladd@bexp,w
  8651  17C9  1903               	btfsc	3,2
  8652  17CA  2FCC               	goto	u3851
  8653  17CB  2FCD               	goto	u3850
  8654  17CC                     u3851:
  8655  17CC  2FD1               	goto	l2690
  8656  17CD                     u3850:
  8657  17CD                     l2688:
  8658  17CD  3001               	movlw	1
  8659  17CE  00FF               	movwf	btemp+1
  8660  17CF  087F               	movf	btemp+1,w
  8661  17D0  07E4               	addwf	___fladd@bexp,f
  8662  17D1                     l2690:
  8663  17D1  0A64               	incf	___fladd@bexp,w
  8664  17D2  1903               	btfsc	3,2
  8665  17D3  2FD5               	goto	u3861
  8666  17D4  2FD6               	goto	u3860
  8667  17D5                     u3861:
  8668  17D5  2FDB               	goto	l2694
  8669  17D6                     u3860:
  8670  17D6                     l2692:
  8671  17D6  0864               	movf	___fladd@bexp,w
  8672  17D7  1D03               	btfss	3,2
  8673  17D8  2FDA               	goto	u3871
  8674  17D9  2FDB               	goto	u3870
  8675  17DA                     u3871:
  8676  17DA  2FE9               	goto	l2700
  8677  17DB                     u3870:
  8678  17DB                     l2694:
  8679  17DB  3000               	movlw	0
  8680  17DC  00D5               	movwf	___fladd@b+3
  8681  17DD  3000               	movlw	0
  8682  17DE  00D4               	movwf	___fladd@b+2
  8683  17DF  3000               	movlw	0
  8684  17E0  00D3               	movwf	___fladd@b+1
  8685  17E1  3000               	movlw	0
  8686  17E2  00D2               	movwf	___fladd@b
  8687  17E3                     l2696:
  8688  17E3  0864               	movf	___fladd@bexp,w
  8689  17E4  1D03               	btfss	3,2
  8690  17E5  2FE7               	goto	u3881
  8691  17E6  2FE8               	goto	u3880
  8692  17E7                     u3881:
  8693  17E7  2FE9               	goto	l2700
  8694  17E8                     u3880:
  8695  17E8                     l2698:
  8696  17E8  01E2               	clrf	___fladd@signs
  8697  17E9                     l2700:
  8698  17E9  1C64               	btfss	___fladd@bexp,0
  8699  17EA  2FEC               	goto	u3891
  8700  17EB  2FED               	goto	u3890
  8701  17EC                     u3891:
  8702  17EC  2FEF               	goto	l2704
  8703  17ED                     u3890:
  8704  17ED                     l2702:
  8705  17ED  17D4               	bsf	___fladd@b+2,7
  8706  17EE  2FF3               	goto	l666
  8707  17EF                     l2704:
  8708  17EF  307F               	movlw	127
  8709  17F0  00FF               	movwf	btemp+1
  8710  17F1  087F               	movf	btemp+1,w
  8711  17F2  05D4               	andwf	___fladd@b+2,f
  8712  17F3                     l666:
  8713  17F3  0864               	movf	___fladd@bexp,w
  8714  17F4  00DA               	movwf	??___fladd
  8715  17F5  1003               	clrc
  8716  17F6  0C5A               	rrf	??___fladd,w
  8717  17F7  00FF               	movwf	btemp+1
  8718  17F8  087F               	movf	btemp+1,w
  8719  17F9  00D5               	movwf	___fladd@b+3
  8720  17FA                     l2706:
  8721  17FA  1FE2               	btfss	___fladd@signs,7
  8722  17FB  2FFD               	goto	u3901
  8723  17FC  2FFE               	goto	u3900
  8724  17FD                     u3901:
  8725  17FD  2FFF               	goto	l667
  8726  17FE                     u3900:
  8727  17FE                     l2708:
  8728  17FE  17D5               	bsf	___fladd@b+3,7
  8729  17FF                     l667:
  8730  17FF                     l637:
  8731  17FF  0008               	return
  8732  1800                     __end_of___fladd:
  8733                           
  8734                           	psect	text24
  8735  0C9F                     __ptext24:	
  8736 ;; *************** function ___flmul *****************
  8737 ;; Defined at:
  8738 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  b               4    4[BANK0 ] unsigned char 
  8741 ;;  a               4    8[BANK0 ] unsigned char 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  prod            4   24[BANK0 ] struct .
  8744 ;;  grs             4   18[BANK0 ] unsigned long 
  8745 ;;  temp            2   28[BANK0 ] struct .
  8746 ;;  bexp            1   23[BANK0 ] unsigned char 
  8747 ;;  aexp            1   22[BANK0 ] unsigned char 
  8748 ;;  sign            1   17[BANK0 ] unsigned char 
  8749 ;; Return value:  Size  Location     Type
  8750 ;;                  4    4[BANK0 ] unsigned char 
  8751 ;; Registers used:
  8752 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8753 ;; Tracked objects:
  8754 ;;		On entry : 0/0
  8755 ;;		On exit  : 0/0
  8756 ;;		Unchanged: 0/0
  8757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8758 ;;      Params:         0       8       0       0       0
  8759 ;;      Locals:         0      13       0       0       0
  8760 ;;      Temps:          0       5       0       0       0
  8761 ;;      Totals:         0      26       0       0       0
  8762 ;;Total ram usage:       26 bytes
  8763 ;; Hardware stack levels used:    1
  8764 ;; Hardware stack levels required when called:    2
  8765 ;; This function calls:
  8766 ;;		__Umul8_16
  8767 ;; This function is called by:
  8768 ;;		_Voltage_Value
  8769 ;;		_Resistance_Value
  8770 ;;		_fround
  8771 ;;		_scale
  8772 ;;		_sprintf
  8773 ;;		_puts_float
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777                           
  8778                           ;psect for function ___flmul
  8779  0C9F                     ___flmul:
  8780  0C9F                     l2710:	
  8781                           ;incstack = 0
  8782                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8783                           
  8784  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  8785  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  8786  0CA1  0827               	movf	___flmul@b+3,w
  8787  0CA2  3980               	andlw	128
  8788  0CA3  00FF               	movwf	btemp+1
  8789  0CA4  087F               	movf	btemp+1,w
  8790  0CA5  00B1               	movwf	___flmul@sign
  8791  0CA6                     l2712:
  8792  0CA6  0827               	movf	___flmul@b+3,w
  8793  0CA7  00AC               	movwf	??___flmul
  8794  0CA8  072C               	addwf	??___flmul,w
  8795  0CA9  00FF               	movwf	btemp+1
  8796  0CAA  087F               	movf	btemp+1,w
  8797  0CAB  00B7               	movwf	___flmul@bexp
  8798  0CAC                     l2714:
  8799  0CAC  1FA6               	btfss	___flmul@b+2,7
  8800  0CAD  2CAF               	goto	u3911
  8801  0CAE  2CB0               	goto	u3910
  8802  0CAF                     u3911:
  8803  0CAF  2CB1               	goto	l2718
  8804  0CB0                     u3910:
  8805  0CB0                     l2716:
  8806  0CB0  1437               	bsf	___flmul@bexp,0
  8807  0CB1                     l2718:
  8808  0CB1  0837               	movf	___flmul@bexp,w
  8809  0CB2  1903               	btfsc	3,2
  8810  0CB3  2CB5               	goto	u3921
  8811  0CB4  2CB6               	goto	u3920
  8812  0CB5                     u3921:
  8813  0CB5  2CC5               	goto	l2726
  8814  0CB6                     u3920:
  8815  0CB6                     l2720:
  8816  0CB6  0A37               	incf	___flmul@bexp,w
  8817  0CB7  1D03               	btfss	3,2
  8818  0CB8  2CBA               	goto	u3931
  8819  0CB9  2CBB               	goto	u3930
  8820  0CBA                     u3931:
  8821  0CBA  2CC3               	goto	l2724
  8822  0CBB                     u3930:
  8823  0CBB                     l2722:
  8824  0CBB  3000               	movlw	0
  8825  0CBC  00A7               	movwf	___flmul@b+3
  8826  0CBD  3000               	movlw	0
  8827  0CBE  00A6               	movwf	___flmul@b+2
  8828  0CBF  3000               	movlw	0
  8829  0CC0  00A5               	movwf	___flmul@b+1
  8830  0CC1  3000               	movlw	0
  8831  0CC2  00A4               	movwf	___flmul@b
  8832  0CC3                     l2724:
  8833  0CC3  17A6               	bsf	___flmul@b+2,7
  8834  0CC4  2CCD               	goto	l2728
  8835  0CC5                     l2726:
  8836  0CC5  3000               	movlw	0
  8837  0CC6  00A7               	movwf	___flmul@b+3
  8838  0CC7  3000               	movlw	0
  8839  0CC8  00A6               	movwf	___flmul@b+2
  8840  0CC9  3000               	movlw	0
  8841  0CCA  00A5               	movwf	___flmul@b+1
  8842  0CCB  3000               	movlw	0
  8843  0CCC  00A4               	movwf	___flmul@b
  8844  0CCD                     l2728:
  8845  0CCD  082B               	movf	___flmul@a+3,w
  8846  0CCE  3980               	andlw	128
  8847  0CCF  00FF               	movwf	btemp+1
  8848  0CD0  087F               	movf	btemp+1,w
  8849  0CD1  06B1               	xorwf	___flmul@sign,f
  8850  0CD2                     l2730:
  8851  0CD2  082B               	movf	___flmul@a+3,w
  8852  0CD3  00AC               	movwf	??___flmul
  8853  0CD4  072C               	addwf	??___flmul,w
  8854  0CD5  00FF               	movwf	btemp+1
  8855  0CD6  087F               	movf	btemp+1,w
  8856  0CD7  00B6               	movwf	___flmul@aexp
  8857  0CD8                     l2732:
  8858  0CD8  1FAA               	btfss	___flmul@a+2,7
  8859  0CD9  2CDB               	goto	u3941
  8860  0CDA  2CDC               	goto	u3940
  8861  0CDB                     u3941:
  8862  0CDB  2CDD               	goto	l2736
  8863  0CDC                     u3940:
  8864  0CDC                     l2734:
  8865  0CDC  1436               	bsf	___flmul@aexp,0
  8866  0CDD                     l2736:
  8867  0CDD  0836               	movf	___flmul@aexp,w
  8868  0CDE  1903               	btfsc	3,2
  8869  0CDF  2CE1               	goto	u3951
  8870  0CE0  2CE2               	goto	u3950
  8871  0CE1                     u3951:
  8872  0CE1  2CF1               	goto	l2744
  8873  0CE2                     u3950:
  8874  0CE2                     l2738:
  8875  0CE2  0A36               	incf	___flmul@aexp,w
  8876  0CE3  1D03               	btfss	3,2
  8877  0CE4  2CE6               	goto	u3961
  8878  0CE5  2CE7               	goto	u3960
  8879  0CE6                     u3961:
  8880  0CE6  2CEF               	goto	l2742
  8881  0CE7                     u3960:
  8882  0CE7                     l2740:
  8883  0CE7  3000               	movlw	0
  8884  0CE8  00AB               	movwf	___flmul@a+3
  8885  0CE9  3000               	movlw	0
  8886  0CEA  00AA               	movwf	___flmul@a+2
  8887  0CEB  3000               	movlw	0
  8888  0CEC  00A9               	movwf	___flmul@a+1
  8889  0CED  3000               	movlw	0
  8890  0CEE  00A8               	movwf	___flmul@a
  8891  0CEF                     l2742:
  8892  0CEF  17AA               	bsf	___flmul@a+2,7
  8893  0CF0  2CF9               	goto	l2746
  8894  0CF1                     l2744:
  8895  0CF1  3000               	movlw	0
  8896  0CF2  00AB               	movwf	___flmul@a+3
  8897  0CF3  3000               	movlw	0
  8898  0CF4  00AA               	movwf	___flmul@a+2
  8899  0CF5  3000               	movlw	0
  8900  0CF6  00A9               	movwf	___flmul@a+1
  8901  0CF7  3000               	movlw	0
  8902  0CF8  00A8               	movwf	___flmul@a
  8903  0CF9                     l2746:
  8904  0CF9  0836               	movf	___flmul@aexp,w
  8905  0CFA  1903               	btfsc	3,2
  8906  0CFB  2CFD               	goto	u3971
  8907  0CFC  2CFE               	goto	u3970
  8908  0CFD                     u3971:
  8909  0CFD  2D03               	goto	l2750
  8910  0CFE                     u3970:
  8911  0CFE                     l2748:
  8912  0CFE  0837               	movf	___flmul@bexp,w
  8913  0CFF  1D03               	btfss	3,2
  8914  0D00  2D02               	goto	u3981
  8915  0D01  2D03               	goto	u3980
  8916  0D02                     u3981:
  8917  0D02  2D0C               	goto	l2754
  8918  0D03                     u3980:
  8919  0D03                     l2750:
  8920  0D03  3000               	movlw	0
  8921  0D04  00A7               	movwf	?___flmul+3
  8922  0D05  3000               	movlw	0
  8923  0D06  00A6               	movwf	?___flmul+2
  8924  0D07  3000               	movlw	0
  8925  0D08  00A5               	movwf	?___flmul+1
  8926  0D09  3000               	movlw	0
  8927  0D0A  00A4               	movwf	?___flmul
  8928  0D0B  2FFF               	goto	l720
  8929  0D0C                     l2754:
  8930  0D0C  0824               	movf	___flmul@b,w
  8931  0D0D  00FF               	movwf	btemp+1
  8932  0D0E  087F               	movf	btemp+1,w
  8933  0D0F  00F2               	movwf	__Umul8_16@multiplicand
  8934  0D10  082A               	movf	___flmul@a+2,w
  8935  0D11  160A  158A  2384  120A  158A  	fcall	__Umul8_16
  8936  0D16  0873               	movf	?__Umul8_16+1,w
  8937  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  8938  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  8939  0D19  00BD               	movwf	___flmul@temp+1
  8940  0D1A  0872               	movf	?__Umul8_16,w
  8941  0D1B  00BC               	movwf	___flmul@temp
  8942  0D1C                     l2756:
  8943  0D1C  083C               	movf	___flmul@temp,w
  8944  0D1D  00AC               	movwf	??___flmul
  8945  0D1E  01AD               	clrf	??___flmul+1
  8946  0D1F  01AE               	clrf	??___flmul+2
  8947  0D20  01AF               	clrf	??___flmul+3
  8948  0D21  082F               	movf	??___flmul+3,w
  8949  0D22  00B5               	movwf	___flmul@grs+3
  8950  0D23  082E               	movf	??___flmul+2,w
  8951  0D24  00B4               	movwf	___flmul@grs+2
  8952  0D25  082D               	movf	??___flmul+1,w
  8953  0D26  00B3               	movwf	___flmul@grs+1
  8954  0D27  082C               	movf	??___flmul,w
  8955  0D28  00B2               	movwf	___flmul@grs
  8956  0D29                     l2758:
  8957  0D29  083D               	movf	___flmul@temp+1,w
  8958  0D2A  00AC               	movwf	??___flmul
  8959  0D2B  01AD               	clrf	??___flmul+1
  8960  0D2C  01AE               	clrf	??___flmul+2
  8961  0D2D  01AF               	clrf	??___flmul+3
  8962  0D2E  082F               	movf	??___flmul+3,w
  8963  0D2F  00BB               	movwf	___flmul@prod+3
  8964  0D30  082E               	movf	??___flmul+2,w
  8965  0D31  00BA               	movwf	___flmul@prod+2
  8966  0D32  082D               	movf	??___flmul+1,w
  8967  0D33  00B9               	movwf	___flmul@prod+1
  8968  0D34  082C               	movf	??___flmul,w
  8969  0D35  00B8               	movwf	___flmul@prod
  8970  0D36  0825               	movf	___flmul@b+1,w
  8971  0D37  00FF               	movwf	btemp+1
  8972  0D38  087F               	movf	btemp+1,w
  8973  0D39  00F2               	movwf	__Umul8_16@multiplicand
  8974  0D3A  0829               	movf	___flmul@a+1,w
  8975  0D3B  160A  158A  2384  120A  158A  	fcall	__Umul8_16
  8976  0D40  0873               	movf	?__Umul8_16+1,w
  8977  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  8978  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  8979  0D43  00BD               	movwf	___flmul@temp+1
  8980  0D44  0872               	movf	?__Umul8_16,w
  8981  0D45  00BC               	movwf	___flmul@temp
  8982  0D46                     l2760:
  8983  0D46  083C               	movf	___flmul@temp,w
  8984  0D47  00AC               	movwf	??___flmul
  8985  0D48  01AD               	clrf	??___flmul+1
  8986  0D49  01AE               	clrf	??___flmul+2
  8987  0D4A  01AF               	clrf	??___flmul+3
  8988  0D4B  082C               	movf	??___flmul,w
  8989  0D4C  07B2               	addwf	___flmul@grs,f
  8990  0D4D  082D               	movf	??___flmul+1,w
  8991  0D4E  1103               	clrz
  8992  0D4F  1803               	skipnc
  8993  0D50  3E01               	addlw	1
  8994  0D51  1903               	skipnz
  8995  0D52  2D54               	goto	u3991
  8996  0D53  07B3               	addwf	___flmul@grs+1,f
  8997  0D54                     u3991:
  8998  0D54  082E               	movf	??___flmul+2,w
  8999  0D55  1103               	clrz
  9000  0D56  1803               	skipnc
  9001  0D57  3E01               	addlw	1
  9002  0D58  1903               	skipnz
  9003  0D59  2D5B               	goto	u3992
  9004  0D5A  07B4               	addwf	___flmul@grs+2,f
  9005  0D5B                     u3992:
  9006  0D5B  082F               	movf	??___flmul+3,w
  9007  0D5C  1103               	clrz
  9008  0D5D  1803               	skipnc
  9009  0D5E  3E01               	addlw	1
  9010  0D5F  1903               	skipnz
  9011  0D60  2D62               	goto	u3993
  9012  0D61  07B5               	addwf	___flmul@grs+3,f
  9013  0D62                     u3993:
  9014  0D62                     l2762:
  9015  0D62  083D               	movf	___flmul@temp+1,w
  9016  0D63  00AC               	movwf	??___flmul
  9017  0D64  01AD               	clrf	??___flmul+1
  9018  0D65  01AE               	clrf	??___flmul+2
  9019  0D66  01AF               	clrf	??___flmul+3
  9020  0D67  082C               	movf	??___flmul,w
  9021  0D68  07B8               	addwf	___flmul@prod,f
  9022  0D69  082D               	movf	??___flmul+1,w
  9023  0D6A  1103               	clrz
  9024  0D6B  1803               	skipnc
  9025  0D6C  3E01               	addlw	1
  9026  0D6D  1903               	skipnz
  9027  0D6E  2D70               	goto	u4001
  9028  0D6F  07B9               	addwf	___flmul@prod+1,f
  9029  0D70                     u4001:
  9030  0D70  082E               	movf	??___flmul+2,w
  9031  0D71  1103               	clrz
  9032  0D72  1803               	skipnc
  9033  0D73  3E01               	addlw	1
  9034  0D74  1903               	skipnz
  9035  0D75  2D77               	goto	u4002
  9036  0D76  07BA               	addwf	___flmul@prod+2,f
  9037  0D77                     u4002:
  9038  0D77  082F               	movf	??___flmul+3,w
  9039  0D78  1103               	clrz
  9040  0D79  1803               	skipnc
  9041  0D7A  3E01               	addlw	1
  9042  0D7B  1903               	skipnz
  9043  0D7C  2D7E               	goto	u4003
  9044  0D7D  07BB               	addwf	___flmul@prod+3,f
  9045  0D7E                     u4003:
  9046  0D7E  0826               	movf	___flmul@b+2,w
  9047  0D7F  00FF               	movwf	btemp+1
  9048  0D80  087F               	movf	btemp+1,w
  9049  0D81  00F2               	movwf	__Umul8_16@multiplicand
  9050  0D82  0828               	movf	___flmul@a,w
  9051  0D83  160A  158A  2384  120A  158A  	fcall	__Umul8_16
  9052  0D88  0873               	movf	?__Umul8_16+1,w
  9053  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  9054  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  9055  0D8B  00BD               	movwf	___flmul@temp+1
  9056  0D8C  0872               	movf	?__Umul8_16,w
  9057  0D8D  00BC               	movwf	___flmul@temp
  9058  0D8E                     l2764:
  9059  0D8E  083C               	movf	___flmul@temp,w
  9060  0D8F  00AC               	movwf	??___flmul
  9061  0D90  01AD               	clrf	??___flmul+1
  9062  0D91  01AE               	clrf	??___flmul+2
  9063  0D92  01AF               	clrf	??___flmul+3
  9064  0D93  082C               	movf	??___flmul,w
  9065  0D94  07B2               	addwf	___flmul@grs,f
  9066  0D95  082D               	movf	??___flmul+1,w
  9067  0D96  1103               	clrz
  9068  0D97  1803               	skipnc
  9069  0D98  3E01               	addlw	1
  9070  0D99  1903               	skipnz
  9071  0D9A  2D9C               	goto	u4011
  9072  0D9B  07B3               	addwf	___flmul@grs+1,f
  9073  0D9C                     u4011:
  9074  0D9C  082E               	movf	??___flmul+2,w
  9075  0D9D  1103               	clrz
  9076  0D9E  1803               	skipnc
  9077  0D9F  3E01               	addlw	1
  9078  0DA0  1903               	skipnz
  9079  0DA1  2DA3               	goto	u4012
  9080  0DA2  07B4               	addwf	___flmul@grs+2,f
  9081  0DA3                     u4012:
  9082  0DA3  082F               	movf	??___flmul+3,w
  9083  0DA4  1103               	clrz
  9084  0DA5  1803               	skipnc
  9085  0DA6  3E01               	addlw	1
  9086  0DA7  1903               	skipnz
  9087  0DA8  2DAA               	goto	u4013
  9088  0DA9  07B5               	addwf	___flmul@grs+3,f
  9089  0DAA                     u4013:
  9090  0DAA                     l2766:
  9091  0DAA  083D               	movf	___flmul@temp+1,w
  9092  0DAB  00AC               	movwf	??___flmul
  9093  0DAC  01AD               	clrf	??___flmul+1
  9094  0DAD  01AE               	clrf	??___flmul+2
  9095  0DAE  01AF               	clrf	??___flmul+3
  9096  0DAF  082C               	movf	??___flmul,w
  9097  0DB0  07B8               	addwf	___flmul@prod,f
  9098  0DB1  082D               	movf	??___flmul+1,w
  9099  0DB2  1103               	clrz
  9100  0DB3  1803               	skipnc
  9101  0DB4  3E01               	addlw	1
  9102  0DB5  1903               	skipnz
  9103  0DB6  2DB8               	goto	u4021
  9104  0DB7  07B9               	addwf	___flmul@prod+1,f
  9105  0DB8                     u4021:
  9106  0DB8  082E               	movf	??___flmul+2,w
  9107  0DB9  1103               	clrz
  9108  0DBA  1803               	skipnc
  9109  0DBB  3E01               	addlw	1
  9110  0DBC  1903               	skipnz
  9111  0DBD  2DBF               	goto	u4022
  9112  0DBE  07BA               	addwf	___flmul@prod+2,f
  9113  0DBF                     u4022:
  9114  0DBF  082F               	movf	??___flmul+3,w
  9115  0DC0  1103               	clrz
  9116  0DC1  1803               	skipnc
  9117  0DC2  3E01               	addlw	1
  9118  0DC3  1903               	skipnz
  9119  0DC4  2DC6               	goto	u4023
  9120  0DC5  07BB               	addwf	___flmul@prod+3,f
  9121  0DC6                     u4023:
  9122  0DC6                     l2768:
  9123  0DC6  3008               	movlw	8
  9124  0DC7  00AC               	movwf	??___flmul
  9125  0DC8                     u4035:
  9126  0DC8  1003               	clrc
  9127  0DC9  0DB2               	rlf	___flmul@grs,f
  9128  0DCA  0DB3               	rlf	___flmul@grs+1,f
  9129  0DCB  0DB4               	rlf	___flmul@grs+2,f
  9130  0DCC  0DB5               	rlf	___flmul@grs+3,f
  9131  0DCD  0BAC               	decfsz	??___flmul,f
  9132  0DCE  2DC8               	goto	u4035
  9133  0DCF                     l2770:
  9134  0DCF  0825               	movf	___flmul@b+1,w
  9135  0DD0  00FF               	movwf	btemp+1
  9136  0DD1  087F               	movf	btemp+1,w
  9137  0DD2  00F2               	movwf	__Umul8_16@multiplicand
  9138  0DD3  0828               	movf	___flmul@a,w
  9139  0DD4  160A  158A  2384  120A  158A  	fcall	__Umul8_16
  9140  0DD9  0873               	movf	?__Umul8_16+1,w
  9141  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  9142  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  9143  0DDC  00BD               	movwf	___flmul@temp+1
  9144  0DDD  0872               	movf	?__Umul8_16,w
  9145  0DDE  00BC               	movwf	___flmul@temp
  9146  0DDF                     l2772:
  9147  0DDF  083C               	movf	___flmul@temp,w
  9148  0DE0  00AC               	movwf	??___flmul
  9149  0DE1  083D               	movf	___flmul@temp+1,w
  9150  0DE2  00AD               	movwf	??___flmul+1
  9151  0DE3  01AE               	clrf	??___flmul+2
  9152  0DE4  01AF               	clrf	??___flmul+3
  9153  0DE5  082C               	movf	??___flmul,w
  9154  0DE6  07B2               	addwf	___flmul@grs,f
  9155  0DE7  082D               	movf	??___flmul+1,w
  9156  0DE8  1103               	clrz
  9157  0DE9  1803               	skipnc
  9158  0DEA  3E01               	addlw	1
  9159  0DEB  1903               	skipnz
  9160  0DEC  2DEE               	goto	u4041
  9161  0DED  07B3               	addwf	___flmul@grs+1,f
  9162  0DEE                     u4041:
  9163  0DEE  082E               	movf	??___flmul+2,w
  9164  0DEF  1103               	clrz
  9165  0DF0  1803               	skipnc
  9166  0DF1  3E01               	addlw	1
  9167  0DF2  1903               	skipnz
  9168  0DF3  2DF5               	goto	u4042
  9169  0DF4  07B4               	addwf	___flmul@grs+2,f
  9170  0DF5                     u4042:
  9171  0DF5  082F               	movf	??___flmul+3,w
  9172  0DF6  1103               	clrz
  9173  0DF7  1803               	skipnc
  9174  0DF8  3E01               	addlw	1
  9175  0DF9  1903               	skipnz
  9176  0DFA  2DFC               	goto	u4043
  9177  0DFB  07B5               	addwf	___flmul@grs+3,f
  9178  0DFC                     u4043:
  9179  0DFC                     l2774:
  9180  0DFC  0824               	movf	___flmul@b,w
  9181  0DFD  00FF               	movwf	btemp+1
  9182  0DFE  087F               	movf	btemp+1,w
  9183  0DFF  00F2               	movwf	__Umul8_16@multiplicand
  9184  0E00  0829               	movf	___flmul@a+1,w
  9185  0E01  160A  158A  2384  120A  158A  	fcall	__Umul8_16
  9186  0E06  0873               	movf	?__Umul8_16+1,w
  9187  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  9188  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  9189  0E09  00BD               	movwf	___flmul@temp+1
  9190  0E0A  0872               	movf	?__Umul8_16,w
  9191  0E0B  00BC               	movwf	___flmul@temp
  9192  0E0C                     l2776:
  9193  0E0C  083C               	movf	___flmul@temp,w
  9194  0E0D  00AC               	movwf	??___flmul
  9195  0E0E  083D               	movf	___flmul@temp+1,w
  9196  0E0F  00AD               	movwf	??___flmul+1
  9197  0E10  01AE               	clrf	??___flmul+2
  9198  0E11  01AF               	clrf	??___flmul+3
  9199  0E12  082C               	movf	??___flmul,w
  9200  0E13  07B2               	addwf	___flmul@grs,f
  9201  0E14  082D               	movf	??___flmul+1,w
  9202  0E15  1103               	clrz
  9203  0E16  1803               	skipnc
  9204  0E17  3E01               	addlw	1
  9205  0E18  1903               	skipnz
  9206  0E19  2E1B               	goto	u4051
  9207  0E1A  07B3               	addwf	___flmul@grs+1,f
  9208  0E1B                     u4051:
  9209  0E1B  082E               	movf	??___flmul+2,w
  9210  0E1C  1103               	clrz
  9211  0E1D  1803               	skipnc
  9212  0E1E  3E01               	addlw	1
  9213  0E1F  1903               	skipnz
  9214  0E20  2E22               	goto	u4052
  9215  0E21  07B4               	addwf	___flmul@grs+2,f
  9216  0E22                     u4052:
  9217  0E22  082F               	movf	??___flmul+3,w
  9218  0E23  1103               	clrz
  9219  0E24  1803               	skipnc
  9220  0E25  3E01               	addlw	1
  9221  0E26  1903               	skipnz
  9222  0E27  2E29               	goto	u4053
  9223  0E28  07B5               	addwf	___flmul@grs+3,f
  9224  0E29                     u4053:
  9225  0E29                     l2778:
  9226  0E29  3008               	movlw	8
  9227  0E2A  00AC               	movwf	??___flmul
  9228  0E2B                     u4065:
  9229  0E2B  1003               	clrc
  9230  0E2C  0DB2               	rlf	___flmul@grs,f
  9231  0E2D  0DB3               	rlf	___flmul@grs+1,f
  9232  0E2E  0DB4               	rlf	___flmul@grs+2,f
  9233  0E2F  0DB5               	rlf	___flmul@grs+3,f
  9234  0E30  0BAC               	decfsz	??___flmul,f
  9235  0E31  2E2B               	goto	u4065
  9236  0E32  0824               	movf	___flmul@b,w
  9237  0E33  00FF               	movwf	btemp+1
  9238  0E34  087F               	movf	btemp+1,w
  9239  0E35  00F2               	movwf	__Umul8_16@multiplicand
  9240  0E36  0828               	movf	___flmul@a,w
  9241  0E37  160A  158A  2384  120A  158A  	fcall	__Umul8_16
  9242  0E3C  0873               	movf	?__Umul8_16+1,w
  9243  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  9244  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  9245  0E3F  00BD               	movwf	___flmul@temp+1
  9246  0E40  0872               	movf	?__Umul8_16,w
  9247  0E41  00BC               	movwf	___flmul@temp
  9248  0E42                     l2780:
  9249  0E42  083C               	movf	___flmul@temp,w
  9250  0E43  00AC               	movwf	??___flmul
  9251  0E44  083D               	movf	___flmul@temp+1,w
  9252  0E45  00AD               	movwf	??___flmul+1
  9253  0E46  01AE               	clrf	??___flmul+2
  9254  0E47  01AF               	clrf	??___flmul+3
  9255  0E48  082C               	movf	??___flmul,w
  9256  0E49  07B2               	addwf	___flmul@grs,f
  9257  0E4A  082D               	movf	??___flmul+1,w
  9258  0E4B  1103               	clrz
  9259  0E4C  1803               	skipnc
  9260  0E4D  3E01               	addlw	1
  9261  0E4E  1903               	skipnz
  9262  0E4F  2E51               	goto	u4071
  9263  0E50  07B3               	addwf	___flmul@grs+1,f
  9264  0E51                     u4071:
  9265  0E51  082E               	movf	??___flmul+2,w
  9266  0E52  1103               	clrz
  9267  0E53  1803               	skipnc
  9268  0E54  3E01               	addlw	1
  9269  0E55  1903               	skipnz
  9270  0E56  2E58               	goto	u4072
  9271  0E57  07B4               	addwf	___flmul@grs+2,f
  9272  0E58                     u4072:
  9273  0E58  082F               	movf	??___flmul+3,w
  9274  0E59  1103               	clrz
  9275  0E5A  1803               	skipnc
  9276  0E5B  3E01               	addlw	1
  9277  0E5C  1903               	skipnz
  9278  0E5D  2E5F               	goto	u4073
  9279  0E5E  07B5               	addwf	___flmul@grs+3,f
  9280  0E5F                     u4073:
  9281  0E5F                     l2782:
  9282  0E5F  0825               	movf	___flmul@b+1,w
  9283  0E60  00FF               	movwf	btemp+1
  9284  0E61  087F               	movf	btemp+1,w
  9285  0E62  00F2               	movwf	__Umul8_16@multiplicand
  9286  0E63  082A               	movf	___flmul@a+2,w
  9287  0E64  160A  158A  2384  120A  158A  	fcall	__Umul8_16
  9288  0E69  0873               	movf	?__Umul8_16+1,w
  9289  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  9290  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  9291  0E6C  00BD               	movwf	___flmul@temp+1
  9292  0E6D  0872               	movf	?__Umul8_16,w
  9293  0E6E  00BC               	movwf	___flmul@temp
  9294  0E6F  083C               	movf	___flmul@temp,w
  9295  0E70  00AC               	movwf	??___flmul
  9296  0E71  083D               	movf	___flmul@temp+1,w
  9297  0E72  00AD               	movwf	??___flmul+1
  9298  0E73  01AE               	clrf	??___flmul+2
  9299  0E74  01AF               	clrf	??___flmul+3
  9300  0E75  082C               	movf	??___flmul,w
  9301  0E76  07B8               	addwf	___flmul@prod,f
  9302  0E77  082D               	movf	??___flmul+1,w
  9303  0E78  1103               	clrz
  9304  0E79  1803               	skipnc
  9305  0E7A  3E01               	addlw	1
  9306  0E7B  1903               	skipnz
  9307  0E7C  2E7E               	goto	u4081
  9308  0E7D  07B9               	addwf	___flmul@prod+1,f
  9309  0E7E                     u4081:
  9310  0E7E  082E               	movf	??___flmul+2,w
  9311  0E7F  1103               	clrz
  9312  0E80  1803               	skipnc
  9313  0E81  3E01               	addlw	1
  9314  0E82  1903               	skipnz
  9315  0E83  2E85               	goto	u4082
  9316  0E84  07BA               	addwf	___flmul@prod+2,f
  9317  0E85                     u4082:
  9318  0E85  082F               	movf	??___flmul+3,w
  9319  0E86  1103               	clrz
  9320  0E87  1803               	skipnc
  9321  0E88  3E01               	addlw	1
  9322  0E89  1903               	skipnz
  9323  0E8A  2E8C               	goto	u4083
  9324  0E8B  07BB               	addwf	___flmul@prod+3,f
  9325  0E8C                     u4083:
  9326  0E8C                     l2784:
  9327  0E8C  0826               	movf	___flmul@b+2,w
  9328  0E8D  00FF               	movwf	btemp+1
  9329  0E8E  087F               	movf	btemp+1,w
  9330  0E8F  00F2               	movwf	__Umul8_16@multiplicand
  9331  0E90  0829               	movf	___flmul@a+1,w
  9332  0E91  160A  158A  2384  120A  158A  	fcall	__Umul8_16
  9333  0E96  0873               	movf	?__Umul8_16+1,w
  9334  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  9335  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  9336  0E99  00BD               	movwf	___flmul@temp+1
  9337  0E9A  0872               	movf	?__Umul8_16,w
  9338  0E9B  00BC               	movwf	___flmul@temp
  9339  0E9C                     l2786:
  9340  0E9C  083C               	movf	___flmul@temp,w
  9341  0E9D  00AC               	movwf	??___flmul
  9342  0E9E  083D               	movf	___flmul@temp+1,w
  9343  0E9F  00AD               	movwf	??___flmul+1
  9344  0EA0  01AE               	clrf	??___flmul+2
  9345  0EA1  01AF               	clrf	??___flmul+3
  9346  0EA2  082C               	movf	??___flmul,w
  9347  0EA3  07B8               	addwf	___flmul@prod,f
  9348  0EA4  082D               	movf	??___flmul+1,w
  9349  0EA5  1103               	clrz
  9350  0EA6  1803               	skipnc
  9351  0EA7  3E01               	addlw	1
  9352  0EA8  1903               	skipnz
  9353  0EA9  2EAB               	goto	u4091
  9354  0EAA  07B9               	addwf	___flmul@prod+1,f
  9355  0EAB                     u4091:
  9356  0EAB  082E               	movf	??___flmul+2,w
  9357  0EAC  1103               	clrz
  9358  0EAD  1803               	skipnc
  9359  0EAE  3E01               	addlw	1
  9360  0EAF  1903               	skipnz
  9361  0EB0  2EB2               	goto	u4092
  9362  0EB1  07BA               	addwf	___flmul@prod+2,f
  9363  0EB2                     u4092:
  9364  0EB2  082F               	movf	??___flmul+3,w
  9365  0EB3  1103               	clrz
  9366  0EB4  1803               	skipnc
  9367  0EB5  3E01               	addlw	1
  9368  0EB6  1903               	skipnz
  9369  0EB7  2EB9               	goto	u4093
  9370  0EB8  07BB               	addwf	___flmul@prod+3,f
  9371  0EB9                     u4093:
  9372  0EB9  0826               	movf	___flmul@b+2,w
  9373  0EBA  00FF               	movwf	btemp+1
  9374  0EBB  087F               	movf	btemp+1,w
  9375  0EBC  00F2               	movwf	__Umul8_16@multiplicand
  9376  0EBD  082A               	movf	___flmul@a+2,w
  9377  0EBE  160A  158A  2384  120A  158A  	fcall	__Umul8_16
  9378  0EC3  0873               	movf	?__Umul8_16+1,w
  9379  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  9380  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  9381  0EC6  00BD               	movwf	___flmul@temp+1
  9382  0EC7  0872               	movf	?__Umul8_16,w
  9383  0EC8  00BC               	movwf	___flmul@temp
  9384  0EC9                     l2788:
  9385  0EC9  083C               	movf	___flmul@temp,w
  9386  0ECA  00AC               	movwf	??___flmul
  9387  0ECB  083D               	movf	___flmul@temp+1,w
  9388  0ECC  00AD               	movwf	??___flmul+1
  9389  0ECD  01AE               	clrf	??___flmul+2
  9390  0ECE  01AF               	clrf	??___flmul+3
  9391  0ECF  3008               	movlw	8
  9392  0ED0                     u4105:
  9393  0ED0  1003               	clrc
  9394  0ED1  0DAC               	rlf	??___flmul,f
  9395  0ED2  0DAD               	rlf	??___flmul+1,f
  9396  0ED3  0DAE               	rlf	??___flmul+2,f
  9397  0ED4  0DAF               	rlf	??___flmul+3,f
  9398  0ED5                     u4100:
  9399  0ED5  3EFF               	addlw	-1
  9400  0ED6  1D03               	skipz
  9401  0ED7  2ED0               	goto	u4105
  9402  0ED8  082C               	movf	??___flmul,w
  9403  0ED9  07B8               	addwf	___flmul@prod,f
  9404  0EDA  082D               	movf	??___flmul+1,w
  9405  0EDB  1103               	clrz
  9406  0EDC  1803               	skipnc
  9407  0EDD  3E01               	addlw	1
  9408  0EDE  1903               	skipnz
  9409  0EDF  2EE1               	goto	u4111
  9410  0EE0  07B9               	addwf	___flmul@prod+1,f
  9411  0EE1                     u4111:
  9412  0EE1  082E               	movf	??___flmul+2,w
  9413  0EE2  1103               	clrz
  9414  0EE3  1803               	skipnc
  9415  0EE4  3E01               	addlw	1
  9416  0EE5  1903               	skipnz
  9417  0EE6  2EE8               	goto	u4112
  9418  0EE7  07BA               	addwf	___flmul@prod+2,f
  9419  0EE8                     u4112:
  9420  0EE8  082F               	movf	??___flmul+3,w
  9421  0EE9  1103               	clrz
  9422  0EEA  1803               	skipnc
  9423  0EEB  3E01               	addlw	1
  9424  0EEC  1903               	skipnz
  9425  0EED  2EEF               	goto	u4113
  9426  0EEE  07BB               	addwf	___flmul@prod+3,f
  9427  0EEF                     u4113:
  9428  0EEF                     l2790:
  9429  0EEF  0832               	movf	___flmul@grs,w
  9430  0EF0  00AC               	movwf	??___flmul
  9431  0EF1  0833               	movf	___flmul@grs+1,w
  9432  0EF2  00AD               	movwf	??___flmul+1
  9433  0EF3  0834               	movf	___flmul@grs+2,w
  9434  0EF4  00AE               	movwf	??___flmul+2
  9435  0EF5  0835               	movf	___flmul@grs+3,w
  9436  0EF6  00AF               	movwf	??___flmul+3
  9437  0EF7  3018               	movlw	24
  9438  0EF8                     u4125:
  9439  0EF8  1003               	clrc
  9440  0EF9  0CAF               	rrf	??___flmul+3,f
  9441  0EFA  0CAE               	rrf	??___flmul+2,f
  9442  0EFB  0CAD               	rrf	??___flmul+1,f
  9443  0EFC  0CAC               	rrf	??___flmul,f
  9444  0EFD                     u4120:
  9445  0EFD  3EFF               	addlw	-1
  9446  0EFE  1D03               	skipz
  9447  0EFF  2EF8               	goto	u4125
  9448  0F00  082C               	movf	??___flmul,w
  9449  0F01  07B8               	addwf	___flmul@prod,f
  9450  0F02  082D               	movf	??___flmul+1,w
  9451  0F03  1103               	clrz
  9452  0F04  1803               	skipnc
  9453  0F05  3E01               	addlw	1
  9454  0F06  1903               	skipnz
  9455  0F07  2F09               	goto	u4131
  9456  0F08  07B9               	addwf	___flmul@prod+1,f
  9457  0F09                     u4131:
  9458  0F09  082E               	movf	??___flmul+2,w
  9459  0F0A  1103               	clrz
  9460  0F0B  1803               	skipnc
  9461  0F0C  3E01               	addlw	1
  9462  0F0D  1903               	skipnz
  9463  0F0E  2F10               	goto	u4132
  9464  0F0F  07BA               	addwf	___flmul@prod+2,f
  9465  0F10                     u4132:
  9466  0F10  082F               	movf	??___flmul+3,w
  9467  0F11  1103               	clrz
  9468  0F12  1803               	skipnc
  9469  0F13  3E01               	addlw	1
  9470  0F14  1903               	skipnz
  9471  0F15  2F17               	goto	u4133
  9472  0F16  07BB               	addwf	___flmul@prod+3,f
  9473  0F17                     u4133:
  9474  0F17                     l2792:
  9475  0F17  3008               	movlw	8
  9476  0F18  00AC               	movwf	??___flmul
  9477  0F19                     u4145:
  9478  0F19  1003               	clrc
  9479  0F1A  0DB2               	rlf	___flmul@grs,f
  9480  0F1B  0DB3               	rlf	___flmul@grs+1,f
  9481  0F1C  0DB4               	rlf	___flmul@grs+2,f
  9482  0F1D  0DB5               	rlf	___flmul@grs+3,f
  9483  0F1E  0BAC               	decfsz	??___flmul,f
  9484  0F1F  2F19               	goto	u4145
  9485  0F20                     l2794:
  9486  0F20  0837               	movf	___flmul@bexp,w
  9487  0F21  0736               	addwf	___flmul@aexp,w
  9488  0F22  00AC               	movwf	??___flmul
  9489  0F23  01AD               	clrf	??___flmul+1
  9490  0F24  0DAD               	rlf	??___flmul+1,f
  9491  0F25  082C               	movf	??___flmul,w
  9492  0F26  3E82               	addlw	130
  9493  0F27  00BC               	movwf	___flmul@temp
  9494  0F28  082D               	movf	??___flmul+1,w
  9495  0F29  1803               	skipnc
  9496  0F2A  3E01               	addlw	1
  9497  0F2B  3EFF               	addlw	255
  9498  0F2C  00BD               	movwf	___flmul@temp+1
  9499  0F2D  2F4B               	goto	l2806
  9500  0F2E                     l2796:
  9501  0F2E  3001               	movlw	1
  9502  0F2F  00AC               	movwf	??___flmul
  9503  0F30                     u4155:
  9504  0F30  1003               	clrc
  9505  0F31  0DB8               	rlf	___flmul@prod,f
  9506  0F32  0DB9               	rlf	___flmul@prod+1,f
  9507  0F33  0DBA               	rlf	___flmul@prod+2,f
  9508  0F34  0DBB               	rlf	___flmul@prod+3,f
  9509  0F35  0BAC               	decfsz	??___flmul,f
  9510  0F36  2F30               	goto	u4155
  9511  0F37                     l2798:
  9512  0F37  1FB5               	btfss	___flmul@grs+3,7
  9513  0F38  2F3A               	goto	u4161
  9514  0F39  2F3B               	goto	u4160
  9515  0F3A                     u4161:
  9516  0F3A  2F3C               	goto	l2802
  9517  0F3B                     u4160:
  9518  0F3B                     l2800:
  9519  0F3B  1438               	bsf	___flmul@prod,0
  9520  0F3C                     l2802:
  9521  0F3C  3001               	movlw	1
  9522  0F3D  00AC               	movwf	??___flmul
  9523  0F3E                     u4175:
  9524  0F3E  1003               	clrc
  9525  0F3F  0DB2               	rlf	___flmul@grs,f
  9526  0F40  0DB3               	rlf	___flmul@grs+1,f
  9527  0F41  0DB4               	rlf	___flmul@grs+2,f
  9528  0F42  0DB5               	rlf	___flmul@grs+3,f
  9529  0F43  0BAC               	decfsz	??___flmul,f
  9530  0F44  2F3E               	goto	u4175
  9531  0F45                     l2804:
  9532  0F45  30FF               	movlw	255
  9533  0F46  07BC               	addwf	___flmul@temp,f
  9534  0F47  1803               	skipnc
  9535  0F48  0ABD               	incf	___flmul@temp+1,f
  9536  0F49  30FF               	movlw	255
  9537  0F4A  07BD               	addwf	___flmul@temp+1,f
  9538  0F4B                     l2806:
  9539  0F4B  1FBA               	btfss	___flmul@prod+2,7
  9540  0F4C  2F4E               	goto	u4181
  9541  0F4D  2F4F               	goto	u4180
  9542  0F4E                     u4181:
  9543  0F4E  2F2E               	goto	l2796
  9544  0F4F                     u4180:
  9545  0F4F                     l2808:
  9546  0F4F  01B6               	clrf	___flmul@aexp
  9547  0F50                     l2810:
  9548  0F50  1FB5               	btfss	___flmul@grs+3,7
  9549  0F51  2F53               	goto	u4191
  9550  0F52  2F54               	goto	u4190
  9551  0F53                     u4191:
  9552  0F53  2F70               	goto	l2818
  9553  0F54                     u4190:
  9554  0F54                     l2812:
  9555  0F54  30FF               	movlw	255
  9556  0F55  0532               	andwf	___flmul@grs,w
  9557  0F56  00AC               	movwf	??___flmul
  9558  0F57  30FF               	movlw	255
  9559  0F58  0533               	andwf	___flmul@grs+1,w
  9560  0F59  00AD               	movwf	??___flmul+1
  9561  0F5A  30FF               	movlw	255
  9562  0F5B  0534               	andwf	___flmul@grs+2,w
  9563  0F5C  00AE               	movwf	??___flmul+2
  9564  0F5D  307F               	movlw	127
  9565  0F5E  0535               	andwf	___flmul@grs+3,w
  9566  0F5F  00AF               	movwf	??___flmul+3
  9567  0F60  082F               	movf	??___flmul+3,w
  9568  0F61  042E               	iorwf	??___flmul+2,w
  9569  0F62  042D               	iorwf	??___flmul+1,w
  9570  0F63  042C               	iorwf	??___flmul,w
  9571  0F64  1903               	skipnz
  9572  0F65  2F67               	goto	u4201
  9573  0F66  2F68               	goto	u4200
  9574  0F67                     u4201:
  9575  0F67  2F6B               	goto	l726
  9576  0F68                     u4200:
  9577  0F68                     l2814:
  9578  0F68  01B6               	clrf	___flmul@aexp
  9579  0F69  0AB6               	incf	___flmul@aexp,f
  9580  0F6A  2F70               	goto	l2818
  9581  0F6B                     l726:
  9582  0F6B  1C38               	btfss	___flmul@prod,0
  9583  0F6C  2F6E               	goto	u4211
  9584  0F6D  2F6F               	goto	u4210
  9585  0F6E                     u4211:
  9586  0F6E  2F70               	goto	l2818
  9587  0F6F                     u4210:
  9588  0F6F  2F68               	goto	l2814
  9589  0F70                     l2818:
  9590  0F70  0836               	movf	___flmul@aexp,w
  9591  0F71  1903               	btfsc	3,2
  9592  0F72  2F74               	goto	u4221
  9593  0F73  2F75               	goto	u4220
  9594  0F74                     u4221:
  9595  0F74  2FA6               	goto	l2828
  9596  0F75                     u4220:
  9597  0F75                     l2820:
  9598  0F75  3001               	movlw	1
  9599  0F76  07B8               	addwf	___flmul@prod,f
  9600  0F77  3000               	movlw	0
  9601  0F78  1803               	skipnc
  9602  0F79  3001               	movlw	1
  9603  0F7A  07B9               	addwf	___flmul@prod+1,f
  9604  0F7B  3000               	movlw	0
  9605  0F7C  1803               	skipnc
  9606  0F7D  3001               	movlw	1
  9607  0F7E  07BA               	addwf	___flmul@prod+2,f
  9608  0F7F  3000               	movlw	0
  9609  0F80  1803               	skipnc
  9610  0F81  3001               	movlw	1
  9611  0F82  07BB               	addwf	___flmul@prod+3,f
  9612  0F83                     l2822:
  9613  0F83  1C3B               	btfss	___flmul@prod+3,0
  9614  0F84  2F86               	goto	u4231
  9615  0F85  2F87               	goto	u4230
  9616  0F86                     u4231:
  9617  0F86  2FA6               	goto	l2828
  9618  0F87                     u4230:
  9619  0F87                     l2824:
  9620  0F87  0838               	movf	___flmul@prod,w
  9621  0F88  00AC               	movwf	??___flmul
  9622  0F89  0839               	movf	___flmul@prod+1,w
  9623  0F8A  00AD               	movwf	??___flmul+1
  9624  0F8B  083A               	movf	___flmul@prod+2,w
  9625  0F8C  00AE               	movwf	??___flmul+2
  9626  0F8D  083B               	movf	___flmul@prod+3,w
  9627  0F8E  00AF               	movwf	??___flmul+3
  9628  0F8F  3001               	movlw	1
  9629  0F90  00B0               	movwf	??___flmul+4
  9630  0F91                     u4245:
  9631  0F91  0D2F               	rlf	??___flmul+3,w
  9632  0F92  0CAF               	rrf	??___flmul+3,f
  9633  0F93  0CAE               	rrf	??___flmul+2,f
  9634  0F94  0CAD               	rrf	??___flmul+1,f
  9635  0F95  0CAC               	rrf	??___flmul,f
  9636  0F96                     u4240:
  9637  0F96  0BB0               	decfsz	??___flmul+4,f
  9638  0F97  2F91               	goto	u4245
  9639  0F98  082F               	movf	??___flmul+3,w
  9640  0F99  00BB               	movwf	___flmul@prod+3
  9641  0F9A  082E               	movf	??___flmul+2,w
  9642  0F9B  00BA               	movwf	___flmul@prod+2
  9643  0F9C  082D               	movf	??___flmul+1,w
  9644  0F9D  00B9               	movwf	___flmul@prod+1
  9645  0F9E  082C               	movf	??___flmul,w
  9646  0F9F  00B8               	movwf	___flmul@prod
  9647  0FA0                     l2826:
  9648  0FA0  3001               	movlw	1
  9649  0FA1  07BC               	addwf	___flmul@temp,f
  9650  0FA2  1803               	skipnc
  9651  0FA3  0ABD               	incf	___flmul@temp+1,f
  9652  0FA4  3000               	movlw	0
  9653  0FA5  07BD               	addwf	___flmul@temp+1,f
  9654  0FA6                     l2828:
  9655  0FA6  083D               	movf	___flmul@temp+1,w
  9656  0FA7  3A80               	xorlw	128
  9657  0FA8  00FF               	movwf	btemp+1
  9658  0FA9  3080               	movlw	128
  9659  0FAA  027F               	subwf	btemp+1,w
  9660  0FAB  1D03               	skipz
  9661  0FAC  2FAF               	goto	u4255
  9662  0FAD  30FF               	movlw	255
  9663  0FAE  023C               	subwf	___flmul@temp,w
  9664  0FAF                     u4255:
  9665  0FAF  1C03               	skipc
  9666  0FB0  2FB2               	goto	u4251
  9667  0FB1  2FB3               	goto	u4250
  9668  0FB2                     u4251:
  9669  0FB2  2FBE               	goto	l2832
  9670  0FB3                     u4250:
  9671  0FB3                     l2830:
  9672  0FB3  307F               	movlw	127
  9673  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  9674  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  9675  0FB6  00BB               	movwf	___flmul@prod+3
  9676  0FB7  3080               	movlw	128
  9677  0FB8  00BA               	movwf	___flmul@prod+2
  9678  0FB9  3000               	movlw	0
  9679  0FBA  00B9               	movwf	___flmul@prod+1
  9680  0FBB  3000               	movlw	0
  9681  0FBC  00B8               	movwf	___flmul@prod
  9682  0FBD  2FF3               	goto	l732
  9683  0FBE                     l2832:
  9684  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  9685  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  9686  0FC0  083D               	movf	___flmul@temp+1,w
  9687  0FC1  3A80               	xorlw	128
  9688  0FC2  00FF               	movwf	btemp+1
  9689  0FC3  3080               	movlw	128
  9690  0FC4  027F               	subwf	btemp+1,w
  9691  0FC5  1D03               	skipz
  9692  0FC6  2FC9               	goto	u4265
  9693  0FC7  3001               	movlw	1
  9694  0FC8  023C               	subwf	___flmul@temp,w
  9695  0FC9                     u4265:
  9696  0FC9  1803               	skipnc
  9697  0FCA  2FCC               	goto	u4261
  9698  0FCB  2FCD               	goto	u4260
  9699  0FCC                     u4261:
  9700  0FCC  2FD9               	goto	l2838
  9701  0FCD                     u4260:
  9702  0FCD                     l2834:
  9703  0FCD  3000               	movlw	0
  9704  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  9705  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  9706  0FD0  00BB               	movwf	___flmul@prod+3
  9707  0FD1  3000               	movlw	0
  9708  0FD2  00BA               	movwf	___flmul@prod+2
  9709  0FD3  3000               	movlw	0
  9710  0FD4  00B9               	movwf	___flmul@prod+1
  9711  0FD5  3000               	movlw	0
  9712  0FD6  00B8               	movwf	___flmul@prod
  9713  0FD7                     l2836:
  9714  0FD7  01B1               	clrf	___flmul@sign
  9715  0FD8  2FF3               	goto	l732
  9716  0FD9                     l2838:
  9717  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  9718  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  9719  0FDB  083C               	movf	___flmul@temp,w
  9720  0FDC  00FF               	movwf	btemp+1
  9721  0FDD  087F               	movf	btemp+1,w
  9722  0FDE  00B7               	movwf	___flmul@bexp
  9723  0FDF                     l2840:
  9724  0FDF  30FF               	movlw	255
  9725  0FE0  05B8               	andwf	___flmul@prod,f
  9726  0FE1  30FF               	movlw	255
  9727  0FE2  05B9               	andwf	___flmul@prod+1,f
  9728  0FE3  307F               	movlw	127
  9729  0FE4  05BA               	andwf	___flmul@prod+2,f
  9730  0FE5  3000               	movlw	0
  9731  0FE6  05BB               	andwf	___flmul@prod+3,f
  9732  0FE7                     l2842:
  9733  0FE7  1C37               	btfss	___flmul@bexp,0
  9734  0FE8  2FEA               	goto	u4271
  9735  0FE9  2FEB               	goto	u4270
  9736  0FEA                     u4271:
  9737  0FEA  2FEC               	goto	l2846
  9738  0FEB                     u4270:
  9739  0FEB                     l2844:
  9740  0FEB  17BA               	bsf	___flmul@prod+2,7
  9741  0FEC                     l2846:
  9742  0FEC  0837               	movf	___flmul@bexp,w
  9743  0FED  00AC               	movwf	??___flmul
  9744  0FEE  1003               	clrc
  9745  0FEF  0C2C               	rrf	??___flmul,w
  9746  0FF0  00FF               	movwf	btemp+1
  9747  0FF1  087F               	movf	btemp+1,w
  9748  0FF2  00BB               	movwf	___flmul@prod+3
  9749  0FF3                     l732:
  9750  0FF3  0831               	movf	___flmul@sign,w
  9751  0FF4  00FF               	movwf	btemp+1
  9752  0FF5  087F               	movf	btemp+1,w
  9753  0FF6  04BB               	iorwf	___flmul@prod+3,f
  9754  0FF7                     l2848:
  9755  0FF7  083B               	movf	___flmul@prod+3,w
  9756  0FF8  00A7               	movwf	?___flmul+3
  9757  0FF9  083A               	movf	___flmul@prod+2,w
  9758  0FFA  00A6               	movwf	?___flmul+2
  9759  0FFB  0839               	movf	___flmul@prod+1,w
  9760  0FFC  00A5               	movwf	?___flmul+1
  9761  0FFD  0838               	movf	___flmul@prod,w
  9762  0FFE  00A4               	movwf	?___flmul
  9763  0FFF                     l720:
  9764  0FFF  0008               	return
  9765  1000                     __end_of___flmul:
  9766                           
  9767                           	psect	text25
  9768  1B84                     __ptext25:	
  9769 ;; *************** function __Umul8_16 *****************
  9770 ;; Defined at:
  9771 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8_16.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;  multiplier      1    wreg     unsigned char 
  9774 ;;  multiplicand    1    2[COMMON] unsigned char 
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;  multiplier      1   10[COMMON] unsigned char 
  9777 ;;  word_mpld       2    8[COMMON] unsigned int 
  9778 ;;  product         2    6[COMMON] unsigned int 
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  2    2[COMMON] unsigned int 
  9781 ;; Registers used:
  9782 ;;		wreg, status,2, status,0
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9788 ;;      Params:         2       0       0       0       0
  9789 ;;      Locals:         5       0       0       0       0
  9790 ;;      Temps:          2       0       0       0       0
  9791 ;;      Totals:         9       0       0       0       0
  9792 ;;Total ram usage:        9 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; Hardware stack levels required when called:    1
  9795 ;; This function calls:
  9796 ;;		Nothing
  9797 ;; This function is called by:
  9798 ;;		___flmul
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           
  9803                           ;psect for function __Umul8_16
  9804  1B84                     __Umul8_16:
  9805                           
  9806                           ;incstack = 0
  9807                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9808                           ;__Umul8_16@multiplier stored from wreg
  9809  1B84  00FA               	movwf	__Umul8_16@multiplier
  9810  1B85                     l2364:
  9811  1B85  01F6               	clrf	__Umul8_16@product
  9812  1B86  01F7               	clrf	__Umul8_16@product+1
  9813  1B87                     l2366:
  9814  1B87  0872               	movf	__Umul8_16@multiplicand,w
  9815  1B88  00F4               	movwf	??__Umul8_16
  9816  1B89  01F5               	clrf	??__Umul8_16+1
  9817  1B8A  0874               	movf	??__Umul8_16,w
  9818  1B8B  00F8               	movwf	__Umul8_16@word_mpld
  9819  1B8C  0875               	movf	??__Umul8_16+1,w
  9820  1B8D  00F9               	movwf	__Umul8_16@word_mpld+1
  9821  1B8E                     l2368:
  9822  1B8E  1C7A               	btfss	__Umul8_16@multiplier,0
  9823  1B8F  2B91               	goto	u3101
  9824  1B90  2B92               	goto	u3100
  9825  1B91                     u3101:
  9826  1B91  2B98               	goto	l739
  9827  1B92                     u3100:
  9828  1B92                     l2370:
  9829  1B92  0878               	movf	__Umul8_16@word_mpld,w
  9830  1B93  07F6               	addwf	__Umul8_16@product,f
  9831  1B94  1803               	skipnc
  9832  1B95  0AF7               	incf	__Umul8_16@product+1,f
  9833  1B96  0879               	movf	__Umul8_16@word_mpld+1,w
  9834  1B97  07F7               	addwf	__Umul8_16@product+1,f
  9835  1B98                     l739:
  9836  1B98  3001               	movlw	1
  9837  1B99                     u3115:
  9838  1B99  1003               	clrc
  9839  1B9A  0DF8               	rlf	__Umul8_16@word_mpld,f
  9840  1B9B  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  9841  1B9C  3EFF               	addlw	-1
  9842  1B9D  1D03               	skipz
  9843  1B9E  2B99               	goto	u3115
  9844  1B9F  1003               	clrc
  9845  1BA0  0CFA               	rrf	__Umul8_16@multiplier,f
  9846  1BA1                     l2372:
  9847  1BA1  087A               	movf	__Umul8_16@multiplier,w
  9848  1BA2  1D03               	btfss	3,2
  9849  1BA3  2BA5               	goto	u3121
  9850  1BA4  2BA6               	goto	u3120
  9851  1BA5                     u3121:
  9852  1BA5  2B8E               	goto	l2368
  9853  1BA6                     u3120:
  9854  1BA6                     l2374:
  9855  1BA6  0877               	movf	__Umul8_16@product+1,w
  9856  1BA7  00F3               	movwf	?__Umul8_16+1
  9857  1BA8  0876               	movf	__Umul8_16@product,w
  9858  1BA9  00F2               	movwf	?__Umul8_16
  9859  1BAA                     l741:
  9860  1BAA  0008               	return
  9861  1BAB                     __end_of__Umul8_16:
  9862                           
  9863                           	psect	text26
  9864  1190                     __ptext26:	
  9865 ;; *************** function ___fldiv *****************
  9866 ;; Defined at:
  9867 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;  a               4    0[BANK1 ] unsigned int 
  9870 ;;  b               4    4[BANK1 ] unsigned int 
  9871 ;; Auto vars:     Size  Location     Type
  9872 ;;  grs             4   20[BANK1 ] unsigned long 
  9873 ;;  rem             4   13[BANK1 ] unsigned long 
  9874 ;;  new_exp         2   18[BANK1 ] int 
  9875 ;;  aexp            1   25[BANK1 ] unsigned char 
  9876 ;;  bexp            1   24[BANK1 ] unsigned char 
  9877 ;;  sign            1   17[BANK1 ] unsigned char 
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  4    0[BANK1 ] unsigned char 
  9880 ;; Registers used:
  9881 ;;		wreg, status,2, status,0, btemp+1
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9887 ;;      Params:         0       0       8       0       0
  9888 ;;      Locals:         0       0      13       0       0
  9889 ;;      Temps:          0       0       5       0       0
  9890 ;;      Totals:         0       0      26       0       0
  9891 ;;Total ram usage:       26 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    1
  9894 ;; This function calls:
  9895 ;;		Nothing
  9896 ;; This function is called by:
  9897 ;;		_Voltage_Value
  9898 ;;		_Resistance_Value
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           
  9903                           ;psect for function ___fldiv
  9904  1190                     ___fldiv:
  9905  1190                     l3216:	
  9906                           ;incstack = 0
  9907                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9908                           
  9909  1190  1683               	bsf	3,5	;RP0=1, select bank1
  9910  1191  1303               	bcf	3,6	;RP1=0, select bank1
  9911  1192  0827               	movf	(___fldiv@b^(0+128)+3),w
  9912  1193  3980               	andlw	128
  9913  1194  00FF               	movwf	btemp+1
  9914  1195  087F               	movf	btemp+1,w
  9915  1196  00B1               	movwf	___fldiv@sign^(0+128)
  9916  1197                     l3218:
  9917  1197  0827               	movf	(___fldiv@b^(0+128)+3),w
  9918  1198  00A8               	movwf	??___fldiv^(0+128)
  9919  1199  0728               	addwf	??___fldiv^(0+128),w
  9920  119A  00FF               	movwf	btemp+1
  9921  119B  087F               	movf	btemp+1,w
  9922  119C  00B8               	movwf	___fldiv@bexp^(0+128)
  9923  119D                     l3220:
  9924  119D  1FA6               	btfss	(___fldiv@b^(0+128)+2),7
  9925  119E  29A0               	goto	u5221
  9926  119F  29A1               	goto	u5220
  9927  11A0                     u5221:
  9928  11A0  29A2               	goto	l3224
  9929  11A1                     u5220:
  9930  11A1                     l3222:
  9931  11A1  1438               	bsf	___fldiv@bexp^(0+128),0
  9932  11A2                     l3224:
  9933  11A2  0838               	movf	___fldiv@bexp^(0+128),w
  9934  11A3  1903               	btfsc	3,2
  9935  11A4  29A6               	goto	u5231
  9936  11A5  29A7               	goto	u5230
  9937  11A6                     u5231:
  9938  11A6  29B7               	goto	l3234
  9939  11A7                     u5230:
  9940  11A7                     l3226:
  9941  11A7  0A38               	incf	___fldiv@bexp^(0+128),w
  9942  11A8  1D03               	btfss	3,2
  9943  11A9  29AB               	goto	u5241
  9944  11AA  29AC               	goto	u5240
  9945  11AB                     u5241:
  9946  11AB  29B4               	goto	l3230
  9947  11AC                     u5240:
  9948  11AC                     l3228:
  9949  11AC  3000               	movlw	0
  9950  11AD  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9951  11AE  3000               	movlw	0
  9952  11AF  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9953  11B0  3000               	movlw	0
  9954  11B1  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9955  11B2  3000               	movlw	0
  9956  11B3  00A4               	movwf	___fldiv@b^(0+128)
  9957  11B4                     l3230:
  9958  11B4  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  9959  11B5                     l3232:
  9960  11B5  01A7               	clrf	(___fldiv@b^(0+128)+3)
  9961  11B6  29BF               	goto	l3236
  9962  11B7                     l3234:
  9963  11B7  3000               	movlw	0
  9964  11B8  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9965  11B9  3000               	movlw	0
  9966  11BA  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9967  11BB  3000               	movlw	0
  9968  11BC  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9969  11BD  3000               	movlw	0
  9970  11BE  00A4               	movwf	___fldiv@b^(0+128)
  9971  11BF                     l3236:
  9972  11BF  0823               	movf	(___fldiv@a^(0+128)+3),w
  9973  11C0  3980               	andlw	128
  9974  11C1  00FF               	movwf	btemp+1
  9975  11C2  087F               	movf	btemp+1,w
  9976  11C3  06B1               	xorwf	___fldiv@sign^(0+128),f
  9977  11C4                     l3238:
  9978  11C4  0823               	movf	(___fldiv@a^(0+128)+3),w
  9979  11C5  00A8               	movwf	??___fldiv^(0+128)
  9980  11C6  0728               	addwf	??___fldiv^(0+128),w
  9981  11C7  00FF               	movwf	btemp+1
  9982  11C8  087F               	movf	btemp+1,w
  9983  11C9  00B9               	movwf	___fldiv@aexp^(0+128)
  9984  11CA                     l3240:
  9985  11CA  1FA2               	btfss	(___fldiv@a^(0+128)+2),7
  9986  11CB  29CD               	goto	u5251
  9987  11CC  29CE               	goto	u5250
  9988  11CD                     u5251:
  9989  11CD  29CF               	goto	l3244
  9990  11CE                     u5250:
  9991  11CE                     l3242:
  9992  11CE  1439               	bsf	___fldiv@aexp^(0+128),0
  9993  11CF                     l3244:
  9994  11CF  0839               	movf	___fldiv@aexp^(0+128),w
  9995  11D0  1903               	btfsc	3,2
  9996  11D1  29D3               	goto	u5261
  9997  11D2  29D4               	goto	u5260
  9998  11D3                     u5261:
  9999  11D3  29E4               	goto	l3254
 10000  11D4                     u5260:
 10001  11D4                     l3246:
 10002  11D4  0A39               	incf	___fldiv@aexp^(0+128),w
 10003  11D5  1D03               	btfss	3,2
 10004  11D6  29D8               	goto	u5271
 10005  11D7  29D9               	goto	u5270
 10006  11D8                     u5271:
 10007  11D8  29E1               	goto	l3250
 10008  11D9                     u5270:
 10009  11D9                     l3248:
 10010  11D9  3000               	movlw	0
 10011  11DA  00A3               	movwf	(___fldiv@a+3)^(0+128)
 10012  11DB  3000               	movlw	0
 10013  11DC  00A2               	movwf	(___fldiv@a+2)^(0+128)
 10014  11DD  3000               	movlw	0
 10015  11DE  00A1               	movwf	(___fldiv@a+1)^(0+128)
 10016  11DF  3000               	movlw	0
 10017  11E0  00A0               	movwf	___fldiv@a^(0+128)
 10018  11E1                     l3250:
 10019  11E1  17A2               	bsf	(___fldiv@a^(0+128)+2),7
 10020  11E2                     l3252:
 10021  11E2  01A3               	clrf	(___fldiv@a^(0+128)+3)
 10022  11E3  29EC               	goto	l680
 10023  11E4                     l3254:
 10024  11E4  3000               	movlw	0
 10025  11E5  00A3               	movwf	(___fldiv@a+3)^(0+128)
 10026  11E6  3000               	movlw	0
 10027  11E7  00A2               	movwf	(___fldiv@a+2)^(0+128)
 10028  11E8  3000               	movlw	0
 10029  11E9  00A1               	movwf	(___fldiv@a+1)^(0+128)
 10030  11EA  3000               	movlw	0
 10031  11EB  00A0               	movwf	___fldiv@a^(0+128)
 10032  11EC                     l680:
 10033  11EC  0823               	movf	(___fldiv@a+3)^(0+128),w
 10034  11ED  0422               	iorwf	(___fldiv@a+2)^(0+128),w
 10035  11EE  0421               	iorwf	(___fldiv@a+1)^(0+128),w
 10036  11EF  0420               	iorwf	___fldiv@a^(0+128),w
 10037  11F0  1D03               	skipz
 10038  11F1  29F3               	goto	u5281
 10039  11F2  29F4               	goto	u5280
 10040  11F3                     u5281:
 10041  11F3  2A0D               	goto	l3264
 10042  11F4                     u5280:
 10043  11F4                     l3256:
 10044  11F4  3000               	movlw	0
 10045  11F5  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10046  11F6  3000               	movlw	0
 10047  11F7  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10048  11F8  3000               	movlw	0
 10049  11F9  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10050  11FA  3000               	movlw	0
 10051  11FB  00A4               	movwf	___fldiv@b^(0+128)
 10052  11FC  3080               	movlw	128
 10053  11FD  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
 10054  11FE  307F               	movlw	127
 10055  11FF  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
 10056  1200                     l3258:
 10057  1200  0831               	movf	___fldiv@sign^(0+128),w
 10058  1201  00FF               	movwf	btemp+1
 10059  1202  087F               	movf	btemp+1,w
 10060  1203  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
 10061  1204                     l3260:
 10062  1204  0827               	movf	(___fldiv@b+3)^(0+128),w
 10063  1205  00A3               	movwf	(?___fldiv+3)^(0+128)
 10064  1206  0826               	movf	(___fldiv@b+2)^(0+128),w
 10065  1207  00A2               	movwf	(?___fldiv+2)^(0+128)
 10066  1208  0825               	movf	(___fldiv@b+1)^(0+128),w
 10067  1209  00A1               	movwf	(?___fldiv+1)^(0+128)
 10068  120A  0824               	movf	___fldiv@b^(0+128),w
 10069  120B  00A0               	movwf	?___fldiv^(0+128)
 10070  120C  2B6C               	goto	l682
 10071  120D                     l3264:
 10072  120D  0838               	movf	___fldiv@bexp^(0+128),w
 10073  120E  1D03               	btfss	3,2
 10074  120F  2A11               	goto	u5291
 10075  1210  2A12               	goto	u5290
 10076  1211                     u5291:
 10077  1211  2A1B               	goto	l3270
 10078  1212                     u5290:
 10079  1212                     l3266:
 10080  1212  3000               	movlw	0
 10081  1213  00A3               	movwf	(?___fldiv+3)^(0+128)
 10082  1214  3000               	movlw	0
 10083  1215  00A2               	movwf	(?___fldiv+2)^(0+128)
 10084  1216  3000               	movlw	0
 10085  1217  00A1               	movwf	(?___fldiv+1)^(0+128)
 10086  1218  3000               	movlw	0
 10087  1219  00A0               	movwf	?___fldiv^(0+128)
 10088  121A  2B6C               	goto	l682
 10089  121B                     l3270:
 10090  121B  0838               	movf	___fldiv@bexp^(0+128),w
 10091  121C  00A8               	movwf	??___fldiv^(0+128)
 10092  121D  01A9               	clrf	(??___fldiv^(0+128)+1)
 10093  121E  0829               	movf	(??___fldiv+1)^(0+128),w
 10094  121F  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
 10095  1220  0839               	movf	___fldiv@aexp^(0+128),w
 10096  1221  0228               	subwf	??___fldiv^(0+128),w
 10097  1222  00AA               	movwf	(??___fldiv+2)^(0+128)
 10098  1223  1C03               	skipc
 10099  1224  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
 10100  1225  082A               	movf	(??___fldiv+2)^(0+128),w
 10101  1226  3E7F               	addlw	127
 10102  1227  00B2               	movwf	___fldiv@new_exp^(0+128)
 10103  1228  082B               	movf	(??___fldiv+3)^(0+128),w
 10104  1229  1803               	skipnc
 10105  122A  3E01               	addlw	1
 10106  122B  3E00               	addlw	0
 10107  122C  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
 10108  122D                     l3272:
 10109  122D  0827               	movf	(___fldiv@b+3)^(0+128),w
 10110  122E  00B0               	movwf	(___fldiv@rem+3)^(0+128)
 10111  122F  0826               	movf	(___fldiv@b+2)^(0+128),w
 10112  1230  00AF               	movwf	(___fldiv@rem+2)^(0+128)
 10113  1231  0825               	movf	(___fldiv@b+1)^(0+128),w
 10114  1232  00AE               	movwf	(___fldiv@rem+1)^(0+128)
 10115  1233  0824               	movf	___fldiv@b^(0+128),w
 10116  1234  00AD               	movwf	___fldiv@rem^(0+128)
 10117  1235                     l3274:
 10118  1235  3000               	movlw	0
 10119  1236  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10120  1237  3000               	movlw	0
 10121  1238  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10122  1239  3000               	movlw	0
 10123  123A  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10124  123B  3000               	movlw	0
 10125  123C  00A4               	movwf	___fldiv@b^(0+128)
 10126  123D                     l3276:
 10127  123D  3000               	movlw	0
 10128  123E  00B7               	movwf	(___fldiv@grs+3)^(0+128)
 10129  123F  3000               	movlw	0
 10130  1240  00B6               	movwf	(___fldiv@grs+2)^(0+128)
 10131  1241  3000               	movlw	0
 10132  1242  00B5               	movwf	(___fldiv@grs+1)^(0+128)
 10133  1243  3000               	movlw	0
 10134  1244  00B4               	movwf	___fldiv@grs^(0+128)
 10135  1245                     l3278:
 10136  1245  01B9               	clrf	___fldiv@aexp^(0+128)
 10137  1246  2A91               	goto	l3298
 10138  1247                     l3280:
 10139  1247  0839               	movf	___fldiv@aexp^(0+128),w
 10140  1248  1903               	btfsc	3,2
 10141  1249  2A4B               	goto	u5301
 10142  124A  2A4C               	goto	u5300
 10143  124B                     u5301:
 10144  124B  2A6C               	goto	l3290
 10145  124C                     u5300:
 10146  124C                     l3282:
 10147  124C  3001               	movlw	1
 10148  124D  00A8               	movwf	??___fldiv^(0+128)
 10149  124E                     u5315:
 10150  124E  1003               	clrc
 10151  124F  0DAD               	rlf	___fldiv@rem^(0+128),f
 10152  1250  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
 10153  1251  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
 10154  1252  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
 10155  1253  0BA8               	decfsz	??___fldiv^(0+128),f
 10156  1254  2A4E               	goto	u5315
 10157  1255  3001               	movlw	1
 10158  1256  00A8               	movwf	??___fldiv^(0+128)
 10159  1257                     u5325:
 10160  1257  1003               	clrc
 10161  1258  0DA4               	rlf	___fldiv@b^(0+128),f
 10162  1259  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
 10163  125A  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
 10164  125B  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
 10165  125C  0BA8               	decfsz	??___fldiv^(0+128),f
 10166  125D  2A57               	goto	u5325
 10167  125E                     l3284:
 10168  125E  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10169  125F  2A61               	goto	u5331
 10170  1260  2A62               	goto	u5330
 10171  1261                     u5331:
 10172  1261  2A63               	goto	l3288
 10173  1262                     u5330:
 10174  1262                     l3286:
 10175  1262  1424               	bsf	___fldiv@b^(0+128),0
 10176  1263                     l3288:
 10177  1263  3001               	movlw	1
 10178  1264  00A8               	movwf	??___fldiv^(0+128)
 10179  1265                     u5345:
 10180  1265  1003               	clrc
 10181  1266  0DB4               	rlf	___fldiv@grs^(0+128),f
 10182  1267  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
 10183  1268  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
 10184  1269  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
 10185  126A  0BA8               	decfsz	??___fldiv^(0+128),f
 10186  126B  2A65               	goto	u5345
 10187  126C                     l3290:
 10188  126C  0823               	movf	(___fldiv@a+3)^(0+128),w
 10189  126D  0230               	subwf	(___fldiv@rem+3)^(0+128),w
 10190  126E  1D03               	skipz
 10191  126F  2A7A               	goto	u5355
 10192  1270  0822               	movf	(___fldiv@a+2)^(0+128),w
 10193  1271  022F               	subwf	(___fldiv@rem+2)^(0+128),w
 10194  1272  1D03               	skipz
 10195  1273  2A7A               	goto	u5355
 10196  1274  0821               	movf	(___fldiv@a+1)^(0+128),w
 10197  1275  022E               	subwf	(___fldiv@rem+1)^(0+128),w
 10198  1276  1D03               	skipz
 10199  1277  2A7A               	goto	u5355
 10200  1278  0820               	movf	___fldiv@a^(0+128),w
 10201  1279  022D               	subwf	___fldiv@rem^(0+128),w
 10202  127A                     u5355:
 10203  127A  1C03               	skipc
 10204  127B  2A7D               	goto	u5351
 10205  127C  2A7E               	goto	u5350
 10206  127D                     u5351:
 10207  127D  2A8D               	goto	l3296
 10208  127E                     u5350:
 10209  127E                     l3292:
 10210  127E  1737               	bsf	(___fldiv@grs^(0+128)+3),6
 10211  127F                     l3294:
 10212  127F  0820               	movf	___fldiv@a^(0+128),w
 10213  1280  02AD               	subwf	___fldiv@rem^(0+128),f
 10214  1281  0821               	movf	(___fldiv@a+1)^(0+128),w
 10215  1282  1C03               	skipc
 10216  1283  0F21               	incfsz	(___fldiv@a+1)^(0+128),w
 10217  1284  02AE               	subwf	(___fldiv@rem+1)^(0+128),f
 10218  1285  0822               	movf	(___fldiv@a+2)^(0+128),w
 10219  1286  1C03               	skipc
 10220  1287  0F22               	incfsz	(___fldiv@a+2)^(0+128),w
 10221  1288  02AF               	subwf	(___fldiv@rem+2)^(0+128),f
 10222  1289  0823               	movf	(___fldiv@a+3)^(0+128),w
 10223  128A  1C03               	skipc
 10224  128B  0F23               	incfsz	(___fldiv@a+3)^(0+128),w
 10225  128C  02B0               	subwf	(___fldiv@rem+3)^(0+128),f
 10226  128D                     l3296:
 10227  128D  3001               	movlw	1
 10228  128E  00FF               	movwf	btemp+1
 10229  128F  087F               	movf	btemp+1,w
 10230  1290  07B9               	addwf	___fldiv@aexp^(0+128),f
 10231  1291                     l3298:
 10232  1291  301A               	movlw	26
 10233  1292  0239               	subwf	___fldiv@aexp^(0+128),w
 10234  1293  1C03               	skipc
 10235  1294  2A96               	goto	u5361
 10236  1295  2A97               	goto	u5360
 10237  1296                     u5361:
 10238  1296  2A47               	goto	l3280
 10239  1297                     u5360:
 10240  1297                     l3300:
 10241  1297  0830               	movf	(___fldiv@rem+3)^(0+128),w
 10242  1298  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
 10243  1299  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
 10244  129A  042D               	iorwf	___fldiv@rem^(0+128),w
 10245  129B  1903               	skipnz
 10246  129C  2A9E               	goto	u5371
 10247  129D  2A9F               	goto	u5370
 10248  129E                     u5371:
 10249  129E  2ABE               	goto	l3314
 10250  129F                     u5370:
 10251  129F                     l3302:
 10252  129F  1434               	bsf	___fldiv@grs^(0+128),0
 10253  12A0  2ABE               	goto	l3314
 10254  12A1                     l3304:
 10255  12A1  3001               	movlw	1
 10256  12A2  00A8               	movwf	??___fldiv^(0+128)
 10257  12A3                     u5385:
 10258  12A3  1003               	clrc
 10259  12A4  0DA4               	rlf	___fldiv@b^(0+128),f
 10260  12A5  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
 10261  12A6  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
 10262  12A7  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
 10263  12A8  0BA8               	decfsz	??___fldiv^(0+128),f
 10264  12A9  2AA3               	goto	u5385
 10265  12AA                     l3306:
 10266  12AA  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10267  12AB  2AAD               	goto	u5391
 10268  12AC  2AAE               	goto	u5390
 10269  12AD                     u5391:
 10270  12AD  2AAF               	goto	l3310
 10271  12AE                     u5390:
 10272  12AE                     l3308:
 10273  12AE  1424               	bsf	___fldiv@b^(0+128),0
 10274  12AF                     l3310:
 10275  12AF  3001               	movlw	1
 10276  12B0  00A8               	movwf	??___fldiv^(0+128)
 10277  12B1                     u5405:
 10278  12B1  1003               	clrc
 10279  12B2  0DB4               	rlf	___fldiv@grs^(0+128),f
 10280  12B3  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
 10281  12B4  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
 10282  12B5  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
 10283  12B6  0BA8               	decfsz	??___fldiv^(0+128),f
 10284  12B7  2AB1               	goto	u5405
 10285  12B8                     l3312:
 10286  12B8  30FF               	movlw	255
 10287  12B9  07B2               	addwf	___fldiv@new_exp^(0+128),f
 10288  12BA  1803               	skipnc
 10289  12BB  0AB3               	incf	(___fldiv@new_exp+1)^(0+128),f
 10290  12BC  30FF               	movlw	255
 10291  12BD  07B3               	addwf	(___fldiv@new_exp+1)^(0+128),f
 10292  12BE                     l3314:
 10293  12BE  1FA6               	btfss	(___fldiv@b+2)^(0+128),7
 10294  12BF  2AC1               	goto	u5411
 10295  12C0  2AC2               	goto	u5410
 10296  12C1                     u5411:
 10297  12C1  2AA1               	goto	l3304
 10298  12C2                     u5410:
 10299  12C2                     l3316:
 10300  12C2  01B9               	clrf	___fldiv@aexp^(0+128)
 10301  12C3                     l3318:
 10302  12C3  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10303  12C4  2AC6               	goto	u5421
 10304  12C5  2AC7               	goto	u5420
 10305  12C6                     u5421:
 10306  12C6  2AE3               	goto	l3326
 10307  12C7                     u5420:
 10308  12C7                     l3320:
 10309  12C7  30FF               	movlw	255
 10310  12C8  0534               	andwf	___fldiv@grs^(0+128),w
 10311  12C9  00A8               	movwf	??___fldiv^(0+128)
 10312  12CA  30FF               	movlw	255
 10313  12CB  0535               	andwf	(___fldiv@grs+1)^(0+128),w
 10314  12CC  00A9               	movwf	(??___fldiv^(0+128)+1)
 10315  12CD  30FF               	movlw	255
 10316  12CE  0536               	andwf	(___fldiv@grs+2)^(0+128),w
 10317  12CF  00AA               	movwf	(??___fldiv^(0+128)+2)
 10318  12D0  307F               	movlw	127
 10319  12D1  0537               	andwf	(___fldiv@grs+3)^(0+128),w
 10320  12D2  00AB               	movwf	(??___fldiv^(0+128)+3)
 10321  12D3  082B               	movf	(??___fldiv+3)^(0+128),w
 10322  12D4  042A               	iorwf	(??___fldiv+2)^(0+128),w
 10323  12D5  0429               	iorwf	(??___fldiv+1)^(0+128),w
 10324  12D6  0428               	iorwf	??___fldiv^(0+128),w
 10325  12D7  1903               	skipnz
 10326  12D8  2ADA               	goto	u5431
 10327  12D9  2ADB               	goto	u5430
 10328  12DA                     u5431:
 10329  12DA  2ADE               	goto	l696
 10330  12DB                     u5430:
 10331  12DB                     l3322:
 10332  12DB  01B9               	clrf	___fldiv@aexp^(0+128)
 10333  12DC  0AB9               	incf	___fldiv@aexp^(0+128),f
 10334  12DD  2AE3               	goto	l3326
 10335  12DE                     l696:
 10336  12DE  1C24               	btfss	___fldiv@b^(0+128),0
 10337  12DF  2AE1               	goto	u5441
 10338  12E0  2AE2               	goto	u5440
 10339  12E1                     u5441:
 10340  12E1  2AE3               	goto	l3326
 10341  12E2                     u5440:
 10342  12E2  2ADB               	goto	l3322
 10343  12E3                     l3326:
 10344  12E3  0839               	movf	___fldiv@aexp^(0+128),w
 10345  12E4  1903               	btfsc	3,2
 10346  12E5  2AE7               	goto	u5451
 10347  12E6  2AE8               	goto	u5450
 10348  12E7                     u5451:
 10349  12E7  2B19               	goto	l3336
 10350  12E8                     u5450:
 10351  12E8                     l3328:
 10352  12E8  3001               	movlw	1
 10353  12E9  07A4               	addwf	___fldiv@b^(0+128),f
 10354  12EA  3000               	movlw	0
 10355  12EB  1803               	skipnc
 10356  12EC  3001               	movlw	1
 10357  12ED  07A5               	addwf	(___fldiv@b+1)^(0+128),f
 10358  12EE  3000               	movlw	0
 10359  12EF  1803               	skipnc
 10360  12F0  3001               	movlw	1
 10361  12F1  07A6               	addwf	(___fldiv@b+2)^(0+128),f
 10362  12F2  3000               	movlw	0
 10363  12F3  1803               	skipnc
 10364  12F4  3001               	movlw	1
 10365  12F5  07A7               	addwf	(___fldiv@b+3)^(0+128),f
 10366  12F6                     l3330:
 10367  12F6  1C27               	btfss	(___fldiv@b+3)^(0+128),0
 10368  12F7  2AF9               	goto	u5461
 10369  12F8  2AFA               	goto	u5460
 10370  12F9                     u5461:
 10371  12F9  2B19               	goto	l3336
 10372  12FA                     u5460:
 10373  12FA                     l3332:
 10374  12FA  0824               	movf	___fldiv@b^(0+128),w
 10375  12FB  00A8               	movwf	??___fldiv^(0+128)
 10376  12FC  0825               	movf	(___fldiv@b+1)^(0+128),w
 10377  12FD  00A9               	movwf	(??___fldiv^(0+128)+1)
 10378  12FE  0826               	movf	(___fldiv@b+2)^(0+128),w
 10379  12FF  00AA               	movwf	(??___fldiv^(0+128)+2)
 10380  1300  0827               	movf	(___fldiv@b+3)^(0+128),w
 10381  1301  00AB               	movwf	(??___fldiv^(0+128)+3)
 10382  1302  3001               	movlw	1
 10383  1303  00AC               	movwf	(??___fldiv+4)^(0+128)
 10384  1304                     u5475:
 10385  1304  0D2B               	rlf	(??___fldiv^(0+128)+3),w
 10386  1305  0CAB               	rrf	(??___fldiv^(0+128)+3),f
 10387  1306  0CAA               	rrf	(??___fldiv^(0+128)+2),f
 10388  1307  0CA9               	rrf	(??___fldiv^(0+128)+1),f
 10389  1308  0CA8               	rrf	??___fldiv^(0+128),f
 10390  1309                     u5470:
 10391  1309  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
 10392  130A  2B04               	goto	u5475
 10393  130B  082B               	movf	(??___fldiv+3)^(0+128),w
 10394  130C  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10395  130D  082A               	movf	(??___fldiv+2)^(0+128),w
 10396  130E  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10397  130F  0829               	movf	(??___fldiv+1)^(0+128),w
 10398  1310  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10399  1311  0828               	movf	??___fldiv^(0+128),w
 10400  1312  00A4               	movwf	___fldiv@b^(0+128)
 10401  1313                     l3334:
 10402  1313  3001               	movlw	1
 10403  1314  07B2               	addwf	___fldiv@new_exp^(0+128),f
 10404  1315  1803               	skipnc
 10405  1316  0AB3               	incf	(___fldiv@new_exp+1)^(0+128),f
 10406  1317  3000               	movlw	0
 10407  1318  07B3               	addwf	(___fldiv@new_exp+1)^(0+128),f
 10408  1319                     l3336:
 10409  1319  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
 10410  131A  3A80               	xorlw	128
 10411  131B  00FF               	movwf	btemp+1
 10412  131C  3080               	movlw	128
 10413  131D  027F               	subwf	btemp+1,w
 10414  131E  1D03               	skipz
 10415  131F  2B22               	goto	u5485
 10416  1320  30FF               	movlw	255
 10417  1321  0232               	subwf	___fldiv@new_exp^(0+128),w
 10418  1322                     u5485:
 10419  1322  1C03               	skipc
 10420  1323  2B25               	goto	u5481
 10421  1324  2B26               	goto	u5480
 10422  1325                     u5481:
 10423  1325  2B34               	goto	l3340
 10424  1326                     u5480:
 10425  1326                     l3338:
 10426  1326  30FF               	movlw	255
 10427  1327  1683               	bsf	3,5	;RP0=1, select bank1
 10428  1328  1303               	bcf	3,6	;RP1=0, select bank1
 10429  1329  00B2               	movwf	___fldiv@new_exp^(0+128)
 10430  132A  3000               	movlw	0
 10431  132B  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
 10432  132C  3000               	movlw	0
 10433  132D  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10434  132E  3000               	movlw	0
 10435  132F  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10436  1330  3000               	movlw	0
 10437  1331  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10438  1332  3000               	movlw	0
 10439  1333  00A4               	movwf	___fldiv@b^(0+128)
 10440  1334                     l3340:
 10441  1334  1683               	bsf	3,5	;RP0=1, select bank1
 10442  1335  1303               	bcf	3,6	;RP1=0, select bank1
 10443  1336  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
 10444  1337  3A80               	xorlw	128
 10445  1338  00FF               	movwf	btemp+1
 10446  1339  3080               	movlw	128
 10447  133A  027F               	subwf	btemp+1,w
 10448  133B  1D03               	skipz
 10449  133C  2B3F               	goto	u5495
 10450  133D  3001               	movlw	1
 10451  133E  0232               	subwf	___fldiv@new_exp^(0+128),w
 10452  133F                     u5495:
 10453  133F  1803               	skipnc
 10454  1340  2B42               	goto	u5491
 10455  1341  2B43               	goto	u5490
 10456  1342                     u5491:
 10457  1342  2B50               	goto	l3348
 10458  1343                     u5490:
 10459  1343                     l3342:
 10460  1343  1683               	bsf	3,5	;RP0=1, select bank1
 10461  1344  1303               	bcf	3,6	;RP1=0, select bank1
 10462  1345  01B2               	clrf	___fldiv@new_exp^(0+128)
 10463  1346  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
 10464  1347                     l3344:
 10465  1347  3000               	movlw	0
 10466  1348  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10467  1349  3000               	movlw	0
 10468  134A  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10469  134B  3000               	movlw	0
 10470  134C  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10471  134D  3000               	movlw	0
 10472  134E  00A4               	movwf	___fldiv@b^(0+128)
 10473  134F                     l3346:
 10474  134F  01B1               	clrf	___fldiv@sign^(0+128)
 10475  1350                     l3348:
 10476  1350  1683               	bsf	3,5	;RP0=1, select bank1
 10477  1351  1303               	bcf	3,6	;RP1=0, select bank1
 10478  1352  0832               	movf	___fldiv@new_exp^(0+128),w
 10479  1353  00FF               	movwf	btemp+1
 10480  1354  087F               	movf	btemp+1,w
 10481  1355  00B8               	movwf	___fldiv@bexp^(0+128)
 10482  1356                     l3350:
 10483  1356  1C38               	btfss	___fldiv@bexp^(0+128),0
 10484  1357  2B59               	goto	u5501
 10485  1358  2B5A               	goto	u5500
 10486  1359                     u5501:
 10487  1359  2B5C               	goto	l3354
 10488  135A                     u5500:
 10489  135A                     l3352:
 10490  135A  17A6               	bsf	(___fldiv@b^(0+128)+2),7
 10491  135B  2B60               	goto	l704
 10492  135C                     l3354:
 10493  135C  307F               	movlw	127
 10494  135D  00FF               	movwf	btemp+1
 10495  135E  087F               	movf	btemp+1,w
 10496  135F  05A6               	andwf	(___fldiv@b^(0+128)+2),f
 10497  1360                     l704:
 10498  1360  0838               	movf	___fldiv@bexp^(0+128),w
 10499  1361  00A8               	movwf	??___fldiv^(0+128)
 10500  1362  1003               	clrc
 10501  1363  0C28               	rrf	??___fldiv^(0+128),w
 10502  1364  00FF               	movwf	btemp+1
 10503  1365  087F               	movf	btemp+1,w
 10504  1366  00A7               	movwf	(___fldiv@b^(0+128)+3)
 10505  1367  0831               	movf	___fldiv@sign^(0+128),w
 10506  1368  00FF               	movwf	btemp+1
 10507  1369  087F               	movf	btemp+1,w
 10508  136A  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
 10509  136B  2A04               	goto	l3260
 10510  136C                     l682:
 10511  136C  0008               	return
 10512  136D                     __end_of___fldiv:
 10513                           
 10514                           	psect	text27
 10515  1B1A                     __ptext27:	
 10516 ;; *************** function _PORT_putString *****************
 10517 ;; Defined at:
 10518 ;;		line 136 in file "port.c"
 10519 ;; Parameters:    Size  Location     Type
 10520 ;;  chaine          1    wreg     PTR unsigned char 
 10521 ;;		 -> main@tab(20), 
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;  chaine          1    6[COMMON] PTR unsigned char 
 10524 ;;		 -> main@tab(20), 
 10525 ;;  i               2    4[COMMON] int 
 10526 ;; Return value:  Size  Location     Type
 10527 ;;                  1    wreg      void 
 10528 ;; Registers used:
 10529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10530 ;; Tracked objects:
 10531 ;;		On entry : 0/0
 10532 ;;		On exit  : 0/0
 10533 ;;		Unchanged: 0/0
 10534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10535 ;;      Params:         0       0       0       0       0
 10536 ;;      Locals:         3       0       0       0       0
 10537 ;;      Temps:          1       0       0       0       0
 10538 ;;      Totals:         4       0       0       0       0
 10539 ;;Total ram usage:        4 bytes
 10540 ;; Hardware stack levels used:    1
 10541 ;; Hardware stack levels required when called:    2
 10542 ;; This function calls:
 10543 ;;		_PORT_putchar
 10544 ;; This function is called by:
 10545 ;;		_main
 10546 ;; This function uses a non-reentrant model
 10547 ;;
 10548                           
 10549                           
 10550                           ;psect for function _PORT_putString
 10551  1B1A                     _PORT_putString:
 10552                           
 10553                           ;incstack = 0
 10554                           ; Regs used in _PORT_putString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10555                           ;PORT_putString@chaine stored from wreg
 10556  1B1A  00F6               	movwf	PORT_putString@chaine
 10557  1B1B                     l3752:
 10558                           
 10559                           ;port.c: 138:     int i;;port.c: 140:     for(i=0 ; chaine[i]!=0 ; i++)
 10560  1B1B  01F4               	clrf	PORT_putString@i
 10561  1B1C  01F5               	clrf	PORT_putString@i+1
 10562  1B1D  2B2F               	goto	l3758
 10563  1B1E                     l3754:
 10564                           
 10565                           ;port.c: 141:     {;port.c: 142:         PORT_putchar(chaine[i]);
 10566  1B1E  0874               	movf	PORT_putString@i,w
 10567  1B1F  0776               	addwf	PORT_putString@chaine,w
 10568  1B20  00F3               	movwf	??_PORT_putString
 10569  1B21  0873               	movf	??_PORT_putString,w
 10570  1B22  0084               	movwf	4
 10571  1B23  0800               	movf	0,w
 10572  1B24  160A  158A  22AF  160A  158A  	fcall	_PORT_putchar
 10573  1B29                     l3756:
 10574                           
 10575                           ;port.c: 143:     }
 10576  1B29  3001               	movlw	1
 10577  1B2A  07F4               	addwf	PORT_putString@i,f
 10578  1B2B  1803               	skipnc
 10579  1B2C  0AF5               	incf	PORT_putString@i+1,f
 10580  1B2D  3000               	movlw	0
 10581  1B2E  07F5               	addwf	PORT_putString@i+1,f
 10582  1B2F                     l3758:
 10583  1B2F  0874               	movf	PORT_putString@i,w
 10584  1B30  0776               	addwf	PORT_putString@chaine,w
 10585  1B31  00F3               	movwf	??_PORT_putString
 10586  1B32  0873               	movf	??_PORT_putString,w
 10587  1B33  0084               	movwf	4
 10588  1B34  1383               	bcf	3,7	;select IRP bank0
 10589  1B35  0800               	movf	0,w
 10590  1B36  1D03               	btfss	3,2
 10591  1B37  2B39               	goto	u6151
 10592  1B38  2B3A               	goto	u6150
 10593  1B39                     u6151:
 10594  1B39  2B1E               	goto	l3754
 10595  1B3A                     u6150:
 10596  1B3A                     l138:
 10597  1B3A  0008               	return
 10598  1B3B                     __end_of_PORT_putString:
 10599                           
 10600                           	psect	text28
 10601  1AAF                     __ptext28:	
 10602 ;; *************** function _PORT_putchar *****************
 10603 ;; Defined at:
 10604 ;;		line 126 in file "port.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;  c               1    wreg     unsigned char 
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;  c               1    2[COMMON] unsigned char 
 10609 ;; Return value:  Size  Location     Type
 10610 ;;                  1    wreg      void 
 10611 ;; Registers used:
 10612 ;;		wreg
 10613 ;; Tracked objects:
 10614 ;;		On entry : 0/0
 10615 ;;		On exit  : 0/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10618 ;;      Params:         0       0       0       0       0
 10619 ;;      Locals:         1       0       0       0       0
 10620 ;;      Temps:          0       0       0       0       0
 10621 ;;      Totals:         1       0       0       0       0
 10622 ;;Total ram usage:        1 bytes
 10623 ;; Hardware stack levels used:    1
 10624 ;; Hardware stack levels required when called:    1
 10625 ;; This function calls:
 10626 ;;		Nothing
 10627 ;; This function is called by:
 10628 ;;		_PORT_putString
 10629 ;;		_puts_float
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633                           
 10634                           ;psect for function _PORT_putchar
 10635  1AAF                     _PORT_putchar:
 10636                           
 10637                           ;incstack = 0
 10638                           ; Regs used in _PORT_putchar: [wreg]
 10639                           ;PORT_putchar@c stored from wreg
 10640  1AAF  00F2               	movwf	PORT_putchar@c
 10641  1AB0                     l2852:
 10642  1AB0                     l129:	
 10643                           ;port.c: 128:     for(;(TXSTA&0x02)!=0x02;);
 10644                           
 10645  1AB0  1683               	bsf	3,5	;RP0=1, select bank1
 10646  1AB1  1303               	bcf	3,6	;RP1=0, select bank1
 10647  1AB2  1C98               	btfss	24,1	;volatile
 10648  1AB3  2AB5               	goto	u4281
 10649  1AB4  2AB6               	goto	u4280
 10650  1AB5                     u4281:
 10651  1AB5  2AB0               	goto	l129
 10652  1AB6                     u4280:
 10653  1AB6                     l2854:
 10654                           
 10655                           ;port.c: 129:     TXREG = c;
 10656  1AB6  0872               	movf	PORT_putchar@c,w
 10657  1AB7  1283               	bcf	3,5	;RP0=0, select bank0
 10658  1AB8  1303               	bcf	3,6	;RP1=0, select bank0
 10659  1AB9  0099               	movwf	25	;volatile
 10660  1ABA                     l132:
 10661  1ABA  0008               	return
 10662  1ABB                     __end_of_PORT_putchar:
 10663                           
 10664                           	psect	text29
 10665  1A9C                     __ptext29:	
 10666 ;; *************** function _PORT_Select_Mux0 *****************
 10667 ;; Defined at:
 10668 ;;		line 149 in file "port.c"
 10669 ;; Parameters:    Size  Location     Type
 10670 ;;		None
 10671 ;; Auto vars:     Size  Location     Type
 10672 ;;		None
 10673 ;; Return value:  Size  Location     Type
 10674 ;;                  1    wreg      void 
 10675 ;; Registers used:
 10676 ;;		wreg, status,2, status,0, btemp+1
 10677 ;; Tracked objects:
 10678 ;;		On entry : 0/0
 10679 ;;		On exit  : 0/0
 10680 ;;		Unchanged: 0/0
 10681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10682 ;;      Params:         0       0       0       0       0
 10683 ;;      Locals:         0       0       0       0       0
 10684 ;;      Temps:          0       0       0       0       0
 10685 ;;      Totals:         0       0       0       0       0
 10686 ;;Total ram usage:        0 bytes
 10687 ;; Hardware stack levels used:    1
 10688 ;; Hardware stack levels required when called:    1
 10689 ;; This function calls:
 10690 ;;		Nothing
 10691 ;; This function is called by:
 10692 ;;		_main
 10693 ;; This function uses a non-reentrant model
 10694 ;;
 10695                           
 10696                           
 10697                           ;psect for function _PORT_Select_Mux0
 10698  1A9C                     _PORT_Select_Mux0:
 10699  1A9C                     l3460:	
 10700                           ;incstack = 0
 10701                           ; Regs used in _PORT_Select_Mux0: [wreg+status,2+status,0+btemp+1]
 10702                           
 10703                           
 10704                           ;port.c: 150:     PORTD |= 0x20;
 10705  1A9C  1283               	bcf	3,5	;RP0=0, select bank0
 10706  1A9D  1303               	bcf	3,6	;RP1=0, select bank0
 10707  1A9E  1688               	bsf	8,5	;volatile
 10708  1A9F                     l3462:
 10709                           
 10710                           ;port.c: 151:     PORTD &= 0xEF;
 10711  1A9F  30EF               	movlw	239
 10712  1AA0  00FF               	movwf	btemp+1
 10713  1AA1  087F               	movf	btemp+1,w
 10714  1AA2  0588               	andwf	8,f	;volatile
 10715  1AA3                     l141:
 10716  1AA3  0008               	return
 10717  1AA4                     __end_of_PORT_Select_Mux0:
 10718                           
 10719                           	psect	text30
 10720  1000                     __ptext30:	
 10721 ;; *************** function _PORT_Init_Gain *****************
 10722 ;; Defined at:
 10723 ;;		line 166 in file "port.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;		None
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;		None
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  1    wreg      void 
 10730 ;; Registers used:
 10731 ;;		None
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10737 ;;      Params:         0       0       0       0       0
 10738 ;;      Locals:         0       0       0       0       0
 10739 ;;      Temps:          0       0       0       0       0
 10740 ;;      Totals:         0       0       0       0       0
 10741 ;;Total ram usage:        0 bytes
 10742 ;; Hardware stack levels used:    1
 10743 ;; Hardware stack levels required when called:    1
 10744 ;; This function calls:
 10745 ;;		Nothing
 10746 ;; This function is called by:
 10747 ;;		_main
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           
 10752                           ;psect for function _PORT_Init_Gain
 10753  1000                     _PORT_Init_Gain:
 10754  1000                     l3464:	
 10755                           ;incstack = 0
 10756                           ; Regs used in _PORT_Init_Gain: []
 10757                           
 10758                           
 10759                           ;port.c: 167:     PORTCbits.RC0 = 0;
 10760  1000  1283               	bcf	3,5	;RP0=0, select bank0
 10761  1001  1303               	bcf	3,6	;RP1=0, select bank0
 10762  1002  1007               	bcf	7,0	;volatile
 10763                           
 10764                           ;port.c: 168:     PORTCbits.RC1 = 1;
 10765  1003  1487               	bsf	7,1	;volatile
 10766  1004                     l147:
 10767  1004  0008               	return
 10768  1005                     __end_of_PORT_Init_Gain:
 10769                           
 10770                           	psect	text31
 10771  1BD6                     __ptext31:	
 10772 ;; *************** function _PORT_Init *****************
 10773 ;; Defined at:
 10774 ;;		line 44 in file "port.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;		None
 10777 ;; Auto vars:     Size  Location     Type
 10778 ;;		None
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  1    wreg      void 
 10781 ;; Registers used:
 10782 ;;		wreg, status,2, status,0, pclath, cstack
 10783 ;; Tracked objects:
 10784 ;;		On entry : 0/0
 10785 ;;		On exit  : 0/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10788 ;;      Params:         0       0       0       0       0
 10789 ;;      Locals:         0       0       0       0       0
 10790 ;;      Temps:          1       0       0       0       0
 10791 ;;      Totals:         1       0       0       0       0
 10792 ;;Total ram usage:        1 bytes
 10793 ;; Hardware stack levels used:    1
 10794 ;; Hardware stack levels required when called:    2
 10795 ;; This function calls:
 10796 ;;		_PORT_Init_Serial
 10797 ;; This function is called by:
 10798 ;;		_main
 10799 ;; This function uses a non-reentrant model
 10800 ;;
 10801                           
 10802                           
 10803                           ;psect for function _PORT_Init
 10804  1BD6                     _PORT_Init:
 10805  1BD6                     l3408:	
 10806                           ;incstack = 0
 10807                           ; Regs used in _PORT_Init: [wreg+status,2+status,0+pclath+cstack]
 10808                           
 10809                           
 10810                           ;port.c: 47:     WPUB=0;
 10811  1BD6  1683               	bsf	3,5	;RP0=1, select bank1
 10812  1BD7  1303               	bcf	3,6	;RP1=0, select bank1
 10813  1BD8  0195               	clrf	21	;volatile
 10814                           
 10815                           ;port.c: 48:     ANSELB = 0;
 10816  1BD9  1683               	bsf	3,5	;RP0=1, select bank3
 10817  1BDA  1703               	bsf	3,6	;RP1=1, select bank3
 10818  1BDB  0186               	clrf	6	;volatile
 10819  1BDC                     l3410:
 10820                           
 10821                           ;port.c: 51:     TRISB = 0xFE;
 10822  1BDC  30FE               	movlw	254
 10823  1BDD  1683               	bsf	3,5	;RP0=1, select bank1
 10824  1BDE  1303               	bcf	3,6	;RP1=0, select bank1
 10825  1BDF  0086               	movwf	6	;volatile
 10826  1BE0                     l3412:
 10827                           
 10828                           ;port.c: 54:     OSCCON = 0x30;
 10829  1BE0  3030               	movlw	48
 10830  1BE1  0090               	movwf	16	;volatile
 10831  1BE2                     l3414:	
 10832                           ;port.c: 55:     for( ; (OSCCON & 0xC) != 0xC ; );
 10833                           
 10834  1BE2  300C               	movlw	12
 10835  1BE3  0510               	andwf	16,w	;volatile
 10836  1BE4  00F2               	movwf	??_PORT_Init
 10837  1BE5  300C               	movlw	12
 10838  1BE6  0672               	xorwf	??_PORT_Init,w
 10839  1BE7  1D03               	btfss	3,2
 10840  1BE8  2BEA               	goto	u5651
 10841  1BE9  2BEB               	goto	u5650
 10842  1BEA                     u5651:
 10843  1BEA  2BE2               	goto	l3414
 10844  1BEB                     u5650:
 10845  1BEB                     l3416:
 10846                           
 10847                           ;port.c: 59:     ANSELD = 0x00;
 10848  1BEB  1683               	bsf	3,5	;RP0=1, select bank3
 10849  1BEC  1703               	bsf	3,6	;RP1=1, select bank3
 10850  1BED  0188               	clrf	8	;volatile
 10851  1BEE                     l3418:
 10852                           
 10853                           ;port.c: 62:     TRISA = 0xFF;
 10854  1BEE  30FF               	movlw	255
 10855  1BEF  1683               	bsf	3,5	;RP0=1, select bank1
 10856  1BF0  1303               	bcf	3,6	;RP1=0, select bank1
 10857  1BF1  0085               	movwf	5	;volatile
 10858  1BF2                     l3420:
 10859                           
 10860                           ;port.c: 64:     TRISD = 0xC0;
 10861  1BF2  30C0               	movlw	192
 10862  1BF3  0088               	movwf	8	;volatile
 10863  1BF4                     l3422:
 10864                           
 10865                           ;port.c: 66:     PORT_Init_Serial();
 10866  1BF4  160A  158A  23AB  160A  158A  	fcall	_PORT_Init_Serial
 10867  1BF9                     l3424:
 10868                           
 10869                           ;port.c: 68:     ANSELA = 0x01;
 10870  1BF9  3001               	movlw	1
 10871  1BFA  1683               	bsf	3,5	;RP0=1, select bank3
 10872  1BFB  1703               	bsf	3,6	;RP1=1, select bank3
 10873  1BFC  0085               	movwf	5	;volatile
 10874  1BFD                     l3426:
 10875                           
 10876                           ;port.c: 70:     ADCON0=0x01;
 10877  1BFD  3001               	movlw	1
 10878  1BFE  1283               	bcf	3,5	;RP0=0, select bank0
 10879  1BFF  1303               	bcf	3,6	;RP1=0, select bank0
 10880  1C00  009F               	movwf	31	;volatile
 10881  1C01                     l3428:
 10882                           
 10883                           ;port.c: 71:     ADCON1=0x60;
 10884  1C01  3060               	movlw	96
 10885  1C02  1683               	bsf	3,5	;RP0=1, select bank1
 10886  1C03  1303               	bcf	3,6	;RP1=0, select bank1
 10887  1C04  009F               	movwf	31	;volatile
 10888  1C05                     l3430:
 10889                           
 10890                           ;port.c: 73:     FVRCON=0;
 10891  1C05  019D               	clrf	29	;volatile
 10892  1C06                     l3432:
 10893                           
 10894                           ;port.c: 74:     DACCON0=0x0;
 10895  1C06  1283               	bcf	3,5	;RP0=0, select bank2
 10896  1C07  1703               	bsf	3,6	;RP1=1, select bank2
 10897  1C08  0193               	clrf	19	;volatile
 10898  1C09                     l3434:
 10899                           
 10900                           ;port.c: 75:     DACCON0=0x60;
 10901  1C09  3060               	movlw	96
 10902  1C0A  0093               	movwf	19	;volatile
 10903  1C0B                     l3436:
 10904                           
 10905                           ;port.c: 76:     DACCON0|=0x80;
 10906  1C0B  1793               	bsf	19,7	;volatile
 10907  1C0C                     l3438:
 10908                           
 10909                           ;port.c: 78:     DACCON1=0x18;
 10910  1C0C  3018               	movlw	24
 10911  1C0D  0094               	movwf	20	;volatile
 10912  1C0E                     l110:
 10913  1C0E  0008               	return
 10914  1C0F                     __end_of_PORT_Init:
 10915                           
 10916                           	psect	text32
 10917  1BAB                     __ptext32:	
 10918 ;; *************** function _PORT_Init_Serial *****************
 10919 ;; Defined at:
 10920 ;;		line 15 in file "port.c"
 10921 ;; Parameters:    Size  Location     Type
 10922 ;;		None
 10923 ;; Auto vars:     Size  Location     Type
 10924 ;;		None
 10925 ;; Return value:  Size  Location     Type
 10926 ;;                  1    wreg      void 
 10927 ;; Registers used:
 10928 ;;		wreg, status,2
 10929 ;; Tracked objects:
 10930 ;;		On entry : 0/0
 10931 ;;		On exit  : 0/0
 10932 ;;		Unchanged: 0/0
 10933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10934 ;;      Params:         0       0       0       0       0
 10935 ;;      Locals:         0       0       0       0       0
 10936 ;;      Temps:          0       0       0       0       0
 10937 ;;      Totals:         0       0       0       0       0
 10938 ;;Total ram usage:        0 bytes
 10939 ;; Hardware stack levels used:    1
 10940 ;; Hardware stack levels required when called:    1
 10941 ;; This function calls:
 10942 ;;		Nothing
 10943 ;; This function is called by:
 10944 ;;		_PORT_Init
 10945 ;; This function uses a non-reentrant model
 10946 ;;
 10947                           
 10948                           
 10949                           ;psect for function _PORT_Init_Serial
 10950  1BAB                     _PORT_Init_Serial:
 10951  1BAB                     l2866:	
 10952                           ;incstack = 0
 10953                           ; Regs used in _PORT_Init_Serial: [wreg+status,2]
 10954                           
 10955                           
 10956                           ;port.c: 18:     TRISC = 0xFF;
 10957  1BAB  30FF               	movlw	255
 10958  1BAC  1683               	bsf	3,5	;RP0=1, select bank1
 10959  1BAD  1303               	bcf	3,6	;RP1=0, select bank1
 10960  1BAE  0087               	movwf	7	;volatile
 10961                           
 10962                           ;port.c: 21:     SPBRG = 25;
 10963  1BAF  3019               	movlw	25
 10964  1BB0  0099               	movwf	25	;volatile
 10965  1BB1                     l2868:
 10966                           
 10967                           ;port.c: 25:     TXSTA = TXSTA & 0xDF;
 10968  1BB1  0818               	movf	24,w	;volatile
 10969  1BB2  39DF               	andlw	223
 10970  1BB3  0098               	movwf	24	;volatile
 10971  1BB4                     l2870:
 10972                           
 10973                           ;port.c: 26:     TXSTA = TXSTA | 1;
 10974  1BB4  0818               	movf	24,w	;volatile
 10975  1BB5  3801               	iorlw	1
 10976  1BB6  0098               	movwf	24	;volatile
 10977  1BB7                     l2872:
 10978                           
 10979                           ;port.c: 27:     TXSTA = TXSTA & 0xFB;
 10980  1BB7  0818               	movf	24,w	;volatile
 10981  1BB8  39FB               	andlw	251
 10982  1BB9  0098               	movwf	24	;volatile
 10983  1BBA                     l2874:
 10984                           
 10985                           ;port.c: 30:     RCSTA = RCSTA | 0x20;
 10986  1BBA  1283               	bcf	3,5	;RP0=0, select bank0
 10987  1BBB  1303               	bcf	3,6	;RP1=0, select bank0
 10988  1BBC  0818               	movf	24,w	;volatile
 10989  1BBD  3820               	iorlw	32
 10990  1BBE  0098               	movwf	24	;volatile
 10991  1BBF                     l2876:
 10992                           
 10993                           ;port.c: 31:     RCSTA = RCSTA & 0xDF;
 10994  1BBF  0818               	movf	24,w	;volatile
 10995  1BC0  39DF               	andlw	223
 10996  1BC1  0098               	movwf	24	;volatile
 10997  1BC2                     l2878:
 10998                           
 10999                           ;port.c: 32:     RCSTA = RCSTA | 0x04;
 11000  1BC2  0818               	movf	24,w	;volatile
 11001  1BC3  3804               	iorlw	4
 11002  1BC4  0098               	movwf	24	;volatile
 11003  1BC5                     l2880:
 11004                           
 11005                           ;port.c: 33:     RCSTA = RCSTA | 0x02;
 11006  1BC5  0818               	movf	24,w	;volatile
 11007  1BC6  3802               	iorlw	2
 11008  1BC7  0098               	movwf	24	;volatile
 11009  1BC8                     l2882:
 11010                           
 11011                           ;port.c: 35:     TXSTA = TXSTA & 0xEF;
 11012  1BC8  1683               	bsf	3,5	;RP0=1, select bank1
 11013  1BC9  1303               	bcf	3,6	;RP1=0, select bank1
 11014  1BCA  0818               	movf	24,w	;volatile
 11015  1BCB  39EF               	andlw	239
 11016  1BCC  0098               	movwf	24	;volatile
 11017  1BCD                     l2884:
 11018                           
 11019                           ;port.c: 36:     TXSTA = TXSTA | 0x20;
 11020  1BCD  0818               	movf	24,w	;volatile
 11021  1BCE  3820               	iorlw	32
 11022  1BCF  0098               	movwf	24	;volatile
 11023  1BD0                     l2886:
 11024                           
 11025                           ;port.c: 37:     RCSTA = RCSTA | 0x80;
 11026  1BD0  1283               	bcf	3,5	;RP0=0, select bank0
 11027  1BD1  1303               	bcf	3,6	;RP1=0, select bank0
 11028  1BD2  0818               	movf	24,w	;volatile
 11029  1BD3  3880               	iorlw	128
 11030  1BD4  0098               	movwf	24	;volatile
 11031  1BD5                     l104:
 11032  1BD5  0008               	return
 11033  1BD6                     __end_of_PORT_Init_Serial:
 11034                           
 11035                           	psect	text33
 11036  1ABB                     __ptext33:	
 11037 ;; *************** function _PORT_Blink_LED *****************
 11038 ;; Defined at:
 11039 ;;		line 84 in file "port.c"
 11040 ;; Parameters:    Size  Location     Type
 11041 ;;		None
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;		None
 11044 ;; Return value:  Size  Location     Type
 11045 ;;                  1    wreg      void 
 11046 ;; Registers used:
 11047 ;;		status,0
 11048 ;; Tracked objects:
 11049 ;;		On entry : 0/0
 11050 ;;		On exit  : 0/0
 11051 ;;		Unchanged: 0/0
 11052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11053 ;;      Params:         0       0       0       0       0
 11054 ;;      Locals:         0       0       0       0       0
 11055 ;;      Temps:          0       0       0       0       0
 11056 ;;      Totals:         0       0       0       0       0
 11057 ;;Total ram usage:        0 bytes
 11058 ;; Hardware stack levels used:    1
 11059 ;; Hardware stack levels required when called:    1
 11060 ;; This function calls:
 11061 ;;		Nothing
 11062 ;; This function is called by:
 11063 ;;		_main
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           
 11068                           ;psect for function _PORT_Blink_LED
 11069  1ABB                     _PORT_Blink_LED:
 11070  1ABB                     l3466:	
 11071                           ;incstack = 0
 11072                           ; Regs used in _PORT_Blink_LED: [status,0]
 11073                           
 11074                           
 11075                           ;port.c: 85:     PORTBbits.RB0 = !PORTBbits.RB0;
 11076  1ABB  1003               	clrc
 11077  1ABC  1283               	bcf	3,5	;RP0=0, select bank0
 11078  1ABD  1303               	bcf	3,6	;RP1=0, select bank0
 11079  1ABE  1C06               	btfss	6,0	;volatile
 11080  1ABF  1403               	setc
 11081  1AC0  1803               	btfsc	3,0
 11082  1AC1  2AC3               	goto	u5661
 11083  1AC2  2AC7               	goto	u5660
 11084  1AC3                     u5661:
 11085  1AC3  1283               	bcf	3,5	;RP0=0, select bank0
 11086  1AC4  1303               	bcf	3,6	;RP1=0, select bank0
 11087  1AC5  1406               	bsf	6,0	;volatile
 11088  1AC6  2ACA               	goto	u5674
 11089  1AC7                     u5660:
 11090  1AC7  1283               	bcf	3,5	;RP0=0, select bank0
 11091  1AC8  1303               	bcf	3,6	;RP1=0, select bank0
 11092  1AC9  1006               	bcf	6,0	;volatile
 11093  1ACA                     u5674:
 11094  1ACA                     l113:
 11095  1ACA  0008               	return
 11096  1ACB                     __end_of_PORT_Blink_LED:
 11097                           
 11098                           	psect	text34
 11099  1ADD                     __ptext34:	
 11100 ;; *************** function _ADC_GetValue *****************
 11101 ;; Defined at:
 11102 ;;		line 16 in file "adc.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  channel         1    wreg     unsigned char 
 11105 ;; Auto vars:     Size  Location     Type
 11106 ;;  channel         1    3[COMMON] unsigned char 
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  1    wreg      unsigned char 
 11109 ;; Registers used:
 11110 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11116 ;;      Params:         0       0       0       0       0
 11117 ;;      Locals:         1       0       0       0       0
 11118 ;;      Temps:          0       0       0       0       0
 11119 ;;      Totals:         1       0       0       0       0
 11120 ;;Total ram usage:        1 bytes
 11121 ;; Hardware stack levels used:    1
 11122 ;; Hardware stack levels required when called:    2
 11123 ;; This function calls:
 11124 ;;		_PORT_Choose_Mux
 11125 ;;		_PORT_Get_Value_Adc
 11126 ;;		_PORT_Start_ADC
 11127 ;; This function is called by:
 11128 ;;		_main
 11129 ;; This function uses a non-reentrant model
 11130 ;;
 11131                           
 11132                           
 11133                           ;psect for function _ADC_GetValue
 11134  1ADD                     _ADC_GetValue:
 11135                           
 11136                           ;incstack = 0
 11137                           ; Regs used in _ADC_GetValue: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 11138                           ;ADC_GetValue@channel stored from wreg
 11139  1ADD  00F3               	movwf	ADC_GetValue@channel
 11140  1ADE                     l3468:
 11141                           
 11142                           ;adc.c: 18:     PORT_Choose_Mux(channel);
 11143  1ADE  0873               	movf	ADC_GetValue@channel,w
 11144  1ADF  160A  158A  22CB  160A  158A  	fcall	_PORT_Choose_Mux
 11145  1AE4                     l3470:
 11146                           
 11147                           ;adc.c: 19:     PORT_Start_ADC();
 11148  1AE4  160A  158A  2294  160A  158A  	fcall	_PORT_Start_ADC
 11149  1AE9                     l3472:
 11150                           
 11151                           ;adc.c: 20:     return PORT_Get_Value_Adc();
 11152  1AE9  160A  158A  2290  160A  158A  	fcall	_PORT_Get_Value_Adc
 11153  1AEE                     l53:
 11154  1AEE  0008               	return
 11155  1AEF                     __end_of_ADC_GetValue:
 11156                           
 11157                           	psect	text35
 11158  1A94                     __ptext35:	
 11159 ;; *************** function _PORT_Start_ADC *****************
 11160 ;; Defined at:
 11161 ;;		line 104 in file "port.c"
 11162 ;; Parameters:    Size  Location     Type
 11163 ;;		None
 11164 ;; Auto vars:     Size  Location     Type
 11165 ;;		None
 11166 ;; Return value:  Size  Location     Type
 11167 ;;                  1    wreg      void 
 11168 ;; Registers used:
 11169 ;;		None
 11170 ;; Tracked objects:
 11171 ;;		On entry : 0/0
 11172 ;;		On exit  : 0/0
 11173 ;;		Unchanged: 0/0
 11174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11175 ;;      Params:         0       0       0       0       0
 11176 ;;      Locals:         0       0       0       0       0
 11177 ;;      Temps:          0       0       0       0       0
 11178 ;;      Totals:         0       0       0       0       0
 11179 ;;Total ram usage:        0 bytes
 11180 ;; Hardware stack levels used:    1
 11181 ;; Hardware stack levels required when called:    1
 11182 ;; This function calls:
 11183 ;;		Nothing
 11184 ;; This function is called by:
 11185 ;;		_ADC_GetValue
 11186 ;; This function uses a non-reentrant model
 11187 ;;
 11188                           
 11189                           
 11190                           ;psect for function _PORT_Start_ADC
 11191  1A94                     _PORT_Start_ADC:
 11192  1A94                     l2860:	
 11193                           ;incstack = 0
 11194                           ; Regs used in _PORT_Start_ADC: []
 11195                           
 11196                           
 11197                           ;port.c: 105:     GO_nDONE=1;
 11198  1A94  1283               	bcf	3,5	;RP0=0, select bank0
 11199  1A95  1303               	bcf	3,6	;RP1=0, select bank0
 11200  1A96  149F               	bsf	31,1	;volatile
 11201  1A97                     l120:	
 11202                           ;port.c: 106:     while(GO_nDONE);
 11203                           
 11204  1A97  189F               	btfsc	31,1	;volatile
 11205  1A98  2A9A               	goto	u4301
 11206  1A99  2A9B               	goto	u4300
 11207  1A9A                     u4301:
 11208  1A9A  2A97               	goto	l120
 11209  1A9B                     u4300:
 11210  1A9B                     l123:
 11211  1A9B  0008               	return
 11212  1A9C                     __end_of_PORT_Start_ADC:
 11213                           
 11214                           	psect	text36
 11215  1A90                     __ptext36:	
 11216 ;; *************** function _PORT_Get_Value_Adc *****************
 11217 ;; Defined at:
 11218 ;;		line 118 in file "port.c"
 11219 ;; Parameters:    Size  Location     Type
 11220 ;;		None
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;		None
 11223 ;; Return value:  Size  Location     Type
 11224 ;;                  1    wreg      unsigned char 
 11225 ;; Registers used:
 11226 ;;		wreg
 11227 ;; Tracked objects:
 11228 ;;		On entry : 0/0
 11229 ;;		On exit  : 0/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11232 ;;      Params:         0       0       0       0       0
 11233 ;;      Locals:         0       0       0       0       0
 11234 ;;      Temps:          0       0       0       0       0
 11235 ;;      Totals:         0       0       0       0       0
 11236 ;;Total ram usage:        0 bytes
 11237 ;; Hardware stack levels used:    1
 11238 ;; Hardware stack levels required when called:    1
 11239 ;; This function calls:
 11240 ;;		Nothing
 11241 ;; This function is called by:
 11242 ;;		_ADC_GetValue
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246                           
 11247                           ;psect for function _PORT_Get_Value_Adc
 11248  1A90                     _PORT_Get_Value_Adc:
 11249  1A90                     l2862:	
 11250                           ;incstack = 0
 11251                           ; Regs used in _PORT_Get_Value_Adc: [wreg]
 11252                           
 11253                           
 11254                           ;port.c: 119:     return ADRES;
 11255  1A90  1283               	bcf	3,5	;RP0=0, select bank0
 11256  1A91  1303               	bcf	3,6	;RP1=0, select bank0
 11257  1A92  081E               	movf	30,w	;volatile
 11258  1A93                     l126:
 11259  1A93  0008               	return
 11260  1A94                     __end_of_PORT_Get_Value_Adc:
 11261                           
 11262                           	psect	text37
 11263  1ACB                     __ptext37:	
 11264 ;; *************** function _PORT_Choose_Mux *****************
 11265 ;; Defined at:
 11266 ;;		line 94 in file "port.c"
 11267 ;; Parameters:    Size  Location     Type
 11268 ;;  _value          1    wreg     unsigned char 
 11269 ;; Auto vars:     Size  Location     Type
 11270 ;;  _value          1    2[COMMON] unsigned char 
 11271 ;; Return value:  Size  Location     Type
 11272 ;;                  1    wreg      void 
 11273 ;; Registers used:
 11274 ;;		wreg, status,2, status,0, btemp+1
 11275 ;; Tracked objects:
 11276 ;;		On entry : 0/0
 11277 ;;		On exit  : 0/0
 11278 ;;		Unchanged: 0/0
 11279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11280 ;;      Params:         0       0       0       0       0
 11281 ;;      Locals:         1       0       0       0       0
 11282 ;;      Temps:          0       0       0       0       0
 11283 ;;      Totals:         1       0       0       0       0
 11284 ;;Total ram usage:        1 bytes
 11285 ;; Hardware stack levels used:    1
 11286 ;; Hardware stack levels required when called:    1
 11287 ;; This function calls:
 11288 ;;		Nothing
 11289 ;; This function is called by:
 11290 ;;		_ADC_GetValue
 11291 ;; This function uses a non-reentrant model
 11292 ;;
 11293                           
 11294                           
 11295                           ;psect for function _PORT_Choose_Mux
 11296  1ACB                     _PORT_Choose_Mux:
 11297                           
 11298                           ;incstack = 0
 11299                           ; Regs used in _PORT_Choose_Mux: [wreg+status,2+status,0+btemp+1]
 11300                           ;PORT_Choose_Mux@_value stored from wreg
 11301  1ACB  00F2               	movwf	PORT_Choose_Mux@_value
 11302  1ACC                     l2856:
 11303                           
 11304                           ;port.c: 95:     if (_value <= 0x0F) {
 11305  1ACC  3010               	movlw	16
 11306  1ACD  0272               	subwf	PORT_Choose_Mux@_value,w
 11307  1ACE  1803               	skipnc
 11308  1ACF  2AD1               	goto	u4291
 11309  1AD0  2AD2               	goto	u4290
 11310  1AD1                     u4291:
 11311  1AD1  2ADC               	goto	l117
 11312  1AD2                     u4290:
 11313  1AD2                     l2858:
 11314                           
 11315                           ;port.c: 96:         PORTD &= 0xF0;
 11316  1AD2  30F0               	movlw	240
 11317  1AD3  00FF               	movwf	btemp+1
 11318  1AD4  087F               	movf	btemp+1,w
 11319  1AD5  1283               	bcf	3,5	;RP0=0, select bank0
 11320  1AD6  1303               	bcf	3,6	;RP1=0, select bank0
 11321  1AD7  0588               	andwf	8,f	;volatile
 11322                           
 11323                           ;port.c: 97:         PORTD |= _value;
 11324  1AD8  0872               	movf	PORT_Choose_Mux@_value,w	;volatile
 11325  1AD9  00FF               	movwf	btemp+1
 11326  1ADA  087F               	movf	btemp+1,w
 11327  1ADB  0488               	iorwf	8,f	;volatile
 11328  1ADC                     l117:
 11329  1ADC  0008               	return
 11330  1ADD                     __end_of_PORT_Choose_Mux:
 11331                           
 11332                           	psect	text38
 11333  1B01                     __ptext38:	
 11334 ;; *************** function _isr *****************
 11335 ;; Defined at:
 11336 ;;		line 78 in file "timer.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;		None
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;		None
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  1    wreg      void 
 11343 ;; Registers used:
 11344 ;;		None
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11350 ;;      Params:         0       0       0       0       0
 11351 ;;      Locals:         0       0       0       0       0
 11352 ;;      Temps:          2       0       0       0       0
 11353 ;;      Totals:         2       0       0       0       0
 11354 ;;Total ram usage:        2 bytes
 11355 ;; Hardware stack levels used:    1
 11356 ;; This function calls:
 11357 ;;		Nothing
 11358 ;; This function is called by:
 11359 ;;		Interrupt level 1
 11360 ;; This function uses a non-reentrant model
 11361 ;;
 11362                           
 11363                           
 11364                           ;psect for function _isr
 11365  1B01                     _isr:
 11366  1B01                     i1l3810:
 11367                           
 11368                           ;timer.c: 85: if (TMR1IF)
 11369  1B01  1283               	bcf	3,5	;RP0=0, select bank0
 11370  1B02  1303               	bcf	3,6	;RP1=0, select bank0
 11371  1B03  1C0C               	btfss	12,0	;volatile
 11372  1B04  2B06               	goto	u617_21
 11373  1B05  2B07               	goto	u617_20
 11374  1B06                     u617_21:
 11375  1B06  2B0E               	goto	i1l181
 11376  1B07                     u617_20:
 11377  1B07                     i1l3812:
 11378                           
 11379                           ;timer.c: 86:      {;timer.c: 88:      Fincompt1 = 1;
 11380  1B07  1683               	bsf	3,5	;RP0=1, select bank1
 11381  1B08  1303               	bcf	3,6	;RP1=0, select bank1
 11382  1B09  01EB               	clrf	_Fincompt1^(0+128)
 11383  1B0A  0AEB               	incf	_Fincompt1^(0+128),f
 11384                           
 11385                           ;timer.c: 91:      TMR1IF=0;
 11386  1B0B  1283               	bcf	3,5	;RP0=0, select bank0
 11387  1B0C  1303               	bcf	3,6	;RP1=0, select bank0
 11388  1B0D  100C               	bcf	12,0	;volatile
 11389  1B0E                     i1l181:	
 11390                           ;timer.c: 92:      }
 11391                           
 11392                           
 11393                           ;timer.c: 94: if (TMRAIF)
 11394  1B0E  1E0D               	btfss	13,4	;volatile
 11395  1B0F  2B11               	goto	u618_21
 11396  1B10  2B12               	goto	u618_20
 11397  1B11                     u618_21:
 11398  1B11  2B13               	goto	i1l183
 11399  1B12                     u618_20:
 11400  1B12                     i1l3814:
 11401                           
 11402                           ;timer.c: 95:      {;timer.c: 100:      TMRAIF=0;
 11403  1B12  120D               	bcf	13,4	;volatile
 11404  1B13                     i1l183:
 11405  1B13  0871               	movf	??_isr+1,w
 11406  1B14  008A               	movwf	10
 11407  1B15  0E70               	swapf	??_isr^(0+4294967168),w
 11408  1B16  0083               	movwf	3
 11409  1B17  0EFE               	swapf	btemp,f
 11410  1B18  0E7E               	swapf	btemp,w
 11411  1B19  0009               	retfie
 11412  1B1A                     __end_of_isr:
 11413  007E                     btemp	set	126	;btemp
 11414  007E                     wtemp0	set	126
 11415                           
 11416                           	psect	intentry
 11417  0004                     __pintentry:	
 11418                           ;incstack = 0
 11419                           ; Regs used in _isr: []
 11420                           
 11421  0004                     interrupt_function:
 11422  007E                     saved_w	set	btemp
 11423  0004  00FE               	movwf	btemp
 11424  0005  0E03               	swapf	3,w
 11425  0006  00F0               	movwf	??_isr
 11426  0007  080A               	movf	10,w
 11427  0008  00F1               	movwf	??_isr+1
 11428  0009  160A  158A  2B01   	ljmp	_isr
 11429                           
 11430                           	psect	config
 11431                           
 11432                           ;Config register CONFIG @ 0x2007
 11433                           ;	Oscillator Selection bits
 11434                           ;	FOSC = INTOSC, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O function
      +                            on RA7/OSC1/CLKIN
 11435                           ;	Watchdog Timer Enable bit
 11436                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11437                           ;	Power-up Timer Enable bit
 11438                           ;	PWRTE = OFF, PWRT disabled
 11439                           ;	RE3/MCLR Pin Function Select bit
 11440                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
 11441                           ;	Code Protection bit
 11442                           ;	CP = OFF, Program memory code protection is disabled
 11443                           ;	Brown-out Reset Selection bits
 11444                           ;	BOREN = ON, BOR enabled
 11445                           ;	Brown-out Reset Voltage Selection bit
 11446                           ;	BORV = 19, Brown-out Reset Voltage (VBOR) set to 1.9 V nominal
 11447                           ;	INTOSC PLLEN Enable Bit
 11448                           ;	PLLEN = ON, INTOSC Frequency is 16 MHz (32x)
 11449  2007                     	org	8199
 11450  2007  3FF5               	dw	16373
 11451                           
 11452                           ;Config register CONFIG2 @ 0x2008
 11453                           ;	Voltage Regulator Capacitor Enable bits
 11454                           ;	VCAPEN = OFF, All VCAP pin functions are disabled
 11455  2008                     	org	8200
 11456  2008  FFFF               	dw	65535

Data Sizes:
    Strings     23
    Constant    144
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     78      78
    BANK1            80     75      76
    BANK3            96      0       0
    BANK2            91      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@tab(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    PORT_putString@chaine	PTR unsigned char  size(1) Largest target is 20
		 -> main@tab(BANK1[20]), 


Critical Paths under _main in COMMON

    _sprintf->___awdiv
    _sprintf->___llmod
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    _PORT_putString->_PORT_putchar
    _ADC_GetValue->_PORT_Choose_Mux

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    _Resistance_Value->___flsub
    ___flsub->___fladd
    ___fladd->_fround
    ___flmul->___awdiv
    ___fldiv->___flsub

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Voltage_Value
    _Voltage_Value->___fldiv
    _Resistance_Value->___fldiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   50160
                                             43 BANK1     32    32      0
                       _ADC_GetValue
                     _PORT_Blink_LED
                          _PORT_Init
                     _PORT_Init_Gain
                   _PORT_Select_Mux0
                     _PORT_putString
                   _Resistance_Value
                  _TIMER_init_timer1
                      _Voltage_Value
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   33984
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7864
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7543
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1223
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1226
                                              7 COMMON     4     0      4
                                              0 BANK0      3     3      0
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              2 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             49 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Voltage_Value                                       17    13      4    6816
                                             26 BANK1     17    13      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _TIMER_init_timer1                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Resistance_Value                                     4     0      4    9009
                                             26 BANK1      4     0      4
                            ___fldiv
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2637
                                             70 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4849
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                              0 BANK1     26    18      8
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _PORT_putString                                       4     4      0     145
                                              3 COMMON     4     4      0
                       _PORT_putchar
 ---------------------------------------------------------------------------------
 (2) _PORT_putchar                                         1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PORT_Select_Mux0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PORT_Init_Gain                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            1     1      0       0
                                              2 COMMON     1     1      0
                   _PORT_Init_Serial
 ---------------------------------------------------------------------------------
 (2) _PORT_Init_Serial                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PORT_Blink_LED                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetValue                                         1     1      0      66
                                              3 COMMON     1     1      0
                    _PORT_Choose_Mux
                 _PORT_Get_Value_Adc
                     _PORT_Start_ADC
 ---------------------------------------------------------------------------------
 (2) _PORT_Start_ADC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORT_Get_Value_Adc                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORT_Choose_Mux                                      1     1      0      44
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetValue
     _PORT_Choose_Mux
     _PORT_Get_Value_Adc
     _PORT_Start_ADC
   _PORT_Blink_LED
   _PORT_Init
     _PORT_Init_Serial
   _PORT_Init_Gain
   _PORT_Select_Mux0
   _PORT_putString
     _PORT_putchar
   _Resistance_Value
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flsub (ARG)
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___xxtofl (ARG)
   _TIMER_init_timer1
   _Voltage_Value
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flsub (ARG)
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
DATA                 0      0      A6       6        0.0%
BITBANK1            50      0       0       7        0.0%
BANK1               50     4B      4C       8       95.0%
BITBANK3            60      0       0       9        0.0%
BANK3               60      0       0      10        0.0%
BITBANK2            5B      0       0      11        0.0%
BANK2               5B      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue May 30 12:26:49 2023

               ___fldiv@aexp 00B9                 ___fldiv@bexp 00B8                            pc 0002  
               ___fldiv@sign 00B1                           l41 0881                           l44 07FE  
                         l53 1AEE                 ___awdiv@sign 0021                           fsr 0004  
        ___wmul@multiplicand 0074          __Umul8_16@word_mpld 0078             ??_PORT_Blink_LED 0072  
                        l110 1C0E                          l120 1A97                          l104 1BD5  
                        l113 1ACA                          l210 0C9E                          l123 1A9B  
                        l203 1577                          l132 1ABA                          l117 1ADC  
                        l141 1AA3                          l126 1A93                          l232 00DB  
                        l129 1AB0                          l138 1B3A                          l147 1004  
                        l500 1ED8                          l333 1DF3                          l510 1ED8  
                        l176 1B00                          l514 118F                          l450 1E5C  
                        l507 1EC3                          l515 1101                          l603 1C8E  
                        l525 1182                          l613 1C48                          l293 0790  
                        l630 1659                          l518 1152                          l278 06CB  
                        l471 0902                          l463 1D8B                          l704 1360  
                        l720 0FFF                          l624 15DB                          l553 1D32  
                        l297 1B6B                          l483 1CAD                          l491 1FE6  
                        l299 1B83                          l467 093F                          l732 0FF3  
                        l628 1682                          l484 1CC9                          l492 1FFF  
                        l468 08A4                          l741 1BAA                          l645 174D  
                        l637 17FF                          l485 1CDE                          l726 0F6B  
                        l670 1B5E                          l478 0932                          l655 1793  
                        l680 11EC                          l488 1F7A                          l496 1AAE  
                        l649 1771                          l682 136C                          l666 17F3  
                        l739 1B98                          l667 17FF                          l764 103B  
                        l766 10D2                          l696 12DE                          l784 1016  
                        l777 109C                          l778 10A8    __end_of_TIMER_init_timer1 1B01  
                        _isr 1B01                          fsr0 0004                          indf 0000  
               ___awmod@sign 0077                 ___flmul@aexp 0036                 ___flmul@bexp 0037  
                _sprintf$831 00AA                 ___flmul@sign 0031                 ___flmul@temp 003C  
               ___flmul@prod 0038     __end_of_PORT_Select_Mux0 1AA4                 ___fltol@exp1 005A  
                       l3000 1167                         l3010 1187                         l3002 1170  
                       l3100 1DDB                         l3020 0898                         l3110 1C8F  
                       l3102 1DDC                         l3030 08BE                         l3014 0882  
                       l3112 1CA5                         l3104 1DE5                         l3200 1D0D  
                       l3040 08E4                         l3032 08C0                         l3016 088F  
                       l3008 1177                         l2400 1E21                         l3210 1B3B  
                       l3114 1CC1                         l3130 1F9A                         l3122 1F5C  
                       l3106 1DEB                         l3202 1D1B                         l3042 08F2  
                       l3034 08C5                         l3026 08A5                         l2410 1E41  
                       l2402 1E25                         l3300 1297                         l3220 119D  
                       l3212 1B3F                         l3116 1CDB                         l3132 1FBE  
                       l3124 1F72                         l3204 1D24                         l3044 08F3  
                       l3036 08C9                         l3028 08AD                         l2500 1C37  
                       l2412 1E48                         l2404 1E29                         l3310 12AF  
                       l3302 129F                         l3230 11B4                         l3222 11A1  
                       l2510 157F                         l3118 1CDD                         l3134 1FC2  
                       l3126 1F8E                         l3142 1AA4                         l3150 1E5D  
                       l3206 1D2A                         l3070 1B5F                         l3054 090E  
                       l3046 08FC                         l3038 08D2                         l2502 1C3E  
                       l2406 1E3A                         l2414 1E4E                         l2430 1D3F  
                       l2422 1D33                         l3320 12C7                         l3312 12B8  
                       l3304 12A1                         l3240 11CA                         l3232 11B5  
                       l3224 11A2                         l3216 1190                         l2600 1668  
                       l2520 1594                         l2512 1585                         l3400 10C5  
                       l3136 1FFC                         l3128 1F96                         l3144 1AAC  
                       l3160 1E89                         l3152 1E6A                         l3080 1B7F  
                       l3072 1B61                         l3064 0927                         l3056 0917  
                       l3048 0906                         l2504 1C44                         l2416 1E53  
                       l2408 1E40                         l2440 1D58                         l2432 1D43  
                       l2424 1D34                         l3410 1BDC                         l3330 12F6  
                       l3322 12DB                         l3306 12AA                         l3314 12BE  
                       l3250 11E1                         l3242 11CE                         l3226 11A7  
                       l3234 11B7                         l3218 1197                         l2370 1B92  
                       l2610 1686                         l2602 166C                         l2530 15AC  
                       l2522 159C                         l2514 1589                         l3402 10C9  
                       l3138 1FFE                         l3146 1AAE                         l3162 1E91  
                       l3090 1DAA                         l3074 1B65                         l3066 0937  
                       l3058 0920                         l2418 1E58                         l2450 1D77  
                       l2442 1D5C                         l2434 1D48                         l2426 1D38  
                       l3420 1BF2                         l3412 1BE0                         l3340 1334  
                       l3332 12FA                         l3316 12C2                         l3308 12AE  
                       l3260 1204                         l3252 11E2                         l3244 11CF  
                       l3236 11BF                         l3228 11AC                         l2372 1BA1  
                       l2364 1B85                         l2700 17E9                         l2620 16AF  
                       l2612 168B                         l2604 166D                         l2540 15BE  
                       l2532 15B2                         l2524 159D                         l2516 158A  
                       l2508 1578                         l3404 10CA                         l3172 1E9F  
                       l3164 1E93                         l3156 1E73                         l3092 1DAE  
                       l3084 1D8C                         l3076 1B72                         l2460 1C49  
                       l2380 1DF7                         l2444 1D60                         l2436 1D4E  
                       l2452 1D7D                         l2428 1D3D                         l3500 0048  
                       l3430 1C05                         l3422 1BF4                         l3414 1BE2  
                       l3350 1356                         l3342 1343                         l3334 1313  
                       l3326 12E3                         l3318 12C3                         l3270 121B  
                       l3246 11D4                         l3254 11E4                         l3238 11C4  
                       l2374 1BA6                         l2366 1B87                         l2710 0C9F  
                       l2702 17ED                         l2630 16C3                         l2622 16B3  
                       l2606 1676                         l2542 15C3                         l2550 15D3  
                       l2534 15B3                         l2518 158F                         l2526 159F  
                       l3182 1EB8                         l3174 1EA8                         l3166 1E97  
                       l3158 1E88                         l3094 1DB2                         l3086 1D9E  
                       l3190 1CE7                         l3078 1B79                         l2470 1C61  
                       l2462 1C4D                         l2390 1E0B                         l2382 1DFB  
                       l2454 1D82                         l2446 1D6A                         l2438 1D51  
                       l3510 0092                         l3502 005D                         l3432 1C06  
                       l3424 1BF9                         l3416 1BEB                         l3408 1BD6  
                       l3352 135A                         l3344 1347                         l3328 12E8  
                       l3336 1319                         l3280 1247                         l3272 122D  
                       l3256 11F4                         l3264 120D                         l3248 11D9  
                       l2368 1B8E                         l2800 0F3B                         l2720 0CB6  
                       l2712 0CA6                         l2704 17EF                         l2640 1729  
                       l2632 16CC                         l2624 16BC                         l2616 1694  
                       l2608 167A                         l2560 15F1                         l2552 15E1  
                       l2544 15C8                         l2536 15B9                         l2528 15A7  
                       l3440 1AEF                         l3360 101A                         l3184 1EC8  
                       l3176 1EB1                         l3096 1DBB                         l3088 1DA1  
                       l3192 1CEA                         l2480 1C84                         l2472 1C65  
                       l2464 1C53                         l2392 1E0F                         l2384 1E00  
                       l2456 1D87                         l2448 1D70                         l3600 0381  
                       l3520 00C2                         l3512 0093                         l3504 0070  
                       l3434 1C09                         l3426 1BFD                         l3418 1BEE  
                       l3354 135C                         l3346 134F                         l3338 1326  
                       l3282 124C                         l3290 126C                         l3274 1235  
                       l3266 1212                         l3258 1200                         l2810 0F50  
                       l2802 0F3C                         l2730 0CD2                         l2722 0CBB  
                       l2714 0CAC                         l2706 17FA                         l2650 175A  
                       l2642 172B                         l2626 16BE                         l2618 16AB  
                       l2634 16D1                         l2570 1605                         l2562 15F5  
                       l2554 15E5                         l2546 15D0                         l2538 15BD  
                       l3450 1AF9                         l3442 1AF3                         l3362 101F  
                       l3186 1ECD                         l3098 1DCD                         l3194 1CF3  
                       l2474 1C76                         l2466 1C56                         l2482 1C8A  
                       l2490 1C18                         l2394 1E11                         l2386 1E02  
                       l2378 1DF4                         l3602 038A                         l3530 00DD  
                       l3522 00C6                         l3514 0097                         l3506 0074  
                       l3436 1C0B                         l3428 1C01                         l3460 1A9C  
                       l3348 1350                         l3292 127E                         l3284 125E  
                       l3276 123D                         l2820 0F75                         l2812 0F54  
                       l2804 0F45                         l2740 0CE7                         l2732 0CD8  
                       l2724 0CC3                         l2716 0CB0                         l2708 17FE  
                       l2660 1775                         l2644 1730                         l2636 16E7  
                       l2628 16C2                         l2580 1619                         l2572 1609  
                       l2564 15F9                         l2556 15E9                         l2548 15D1  
                       l3452 1AFA                         l3444 1AF6                         l3380 1065  
                       l3372 104C                         l3364 1023                         l3196 1CF7  
                       l3188 1CDF                         l2476 1C7C                         l2468 1C5D  
                       l2492 1C1F                         l2396 1E17                         l2388 1E06  
                       l3700 06D6                         l3620 0451                         l3612 0410  
                       l3604 040C                         l3540 011B                         l3532 00F9  
                       l3516 009A                         l3524 00D7                         l3508 0084  
                       l3470 1AE4                         l3438 1C0C                         l3462 1A9F  
                       l3294 127F                         l3286 1262                         l3278 1245  
                       l2830 0FB3                         l2822 0F83                         l2814 0F68  
                       l2806 0F4B                         l2750 0D03                         l2742 0CEF  
                       l2734 0CDC                         l2726 0CC5                         l2718 0CB1  
                       l2662 1778                         l2654 1763                         l2638 1725  
                       l2646 173F                         l2670 1785                         l2590 163D  
                       l2582 161D                         l2574 160D                         l2566 15FD  
                       l2558 15ED                         l3454 1AFB                         l3446 1AF7  
                       l3390 1092                         l3382 1069                         l3374 1051  
                       l3366 1033                         l3198 1CFB                         l2478 1C7D  
                       l2494 1C23                         l2486 1C0F                         l2902 1534  
                       l2398 1E1A                         l2910 0949                         l3710 0709  
                       l3702 06DD                         l3630 048E                         l3622 046C  
                       l3606 040E                         l3550 0159                         l3542 011F  
                       l3534 0105                         l3526 00D9                         l3518 00AF  
                       l3472 1AE9                         l3464 1000                         l3296 128D  
                       l3288 1263                         l2840 0FDF                         l2832 0FBE  
                       l2824 0F87                         l2808 0F4F                         l2760 0D46  
                       l2744 0CF1                         l2736 0CDD                         l2728 0CCD  
                       l2680 1798                         l2672 1786                         l2664 177A  
                       l2656 176C                         l2648 1755                         l2592 164C  
                       l2584 1621                         l2576 1611                         l2568 1601  
                       l3456 1AFC                         l3448 1AF8                         l3392 1096  
                       l3384 1077                         l3376 1055                         l3368 1043  
                       l2496 1C27                         l2488 1C15                         l2920 0A3F  
                       l2912 0950                         l3720 072E                         l3712 070F  
                       l3704 06EC                         l3640 04B5                         l3624 0472  
                       l3616 0447                         l3560 01A9                         l3552 0172  
                       l3544 0138                         l3536 0109                         l3466 1ABB  
                       l3298 1291                         l2842 0FE7                         l2834 0FCD  
                       l2826 0FA0                         l2818 0F70                         l2770 0DCF  
                       l2762 0D62                         l2754 0D0C                         l2746 0CF9  
                       l2738 0CE2                         l2682 179D                         l2690 17D1  
                       l2674 178A                         l2666 177F                         l2658 1770  
                       l2594 1654                         l2578 1615                         l2586 1625  
                       l3482 0791                         l3458 1AFF                         l3394 10A0  
                       l3386 1080                         l3378 105E                         l2498 1C31  
                       l2930 0AFB                         l2906 0943                         l3730 0756  
                       l3722 0739                         l3714 0713                         l3706 06F5  
                       l3650 0528                         l3642 04BA                         l3626 047E  
                       l3634 0493                         l3618 044B                         l3570 0236  
                       l3562 01AD                         l3554 017D                         l3546 0151  
                       l3538 010D                         l3490 0024                         l2860 1A94  
                       l3468 1ADE                         l2852 1AB0                         l2844 0FEB  
                       l2836 0FD7                         l2828 0FA6                         l2780 0E42  
                       l2772 0DDF                         l2764 0D8E                         l2756 0D1C  
                       l2748 0CFE                         l2692 17D6                         l2684 17AB  
                       l2676 1790                         l2668 1781                         l2596 165D  
                       l2588 1626                         l3396 10AA                         l3388 1087  
                       l3476 0806                         l2924 0AC7                         l2908 0947  
                       l3732 075A                         l3724 0745                         l3716 0721  
                       l3708 06FD                         l3660 0557                         l3652 0531  
                       l3644 04F5                         l3636 04A0                         l3628 0485  
                       l3580 02B8                         l3572 023F                         l3564 01B3  
                       l3556 0183                         l3548 0155                         l3492 002B  
                       l3740 077A                         l2862 1A90                         l2870 1BB4  
                       l2854 1AB6                         l2846 0FEC                         l2838 0FD9  
                       l2790 0EEF                         l2782 0E5F                         l2774 0DFC  
                       l2766 0DAA                         l2758 0D29                         l2694 17DB  
                       l2686 17AF                         l2598 1666                         l3398 10C0  
                       l3478 0879                         l2950 100D                         l2942 0C72  
                       l2918 0A38                         l3734 0766                         l3726 0749  
                       l3718 072A                         l3670 0579                         l3662 055E  
                       l3654 0535                         l3646 0514                         l3638 04AE  
                       l3590 0333                         l3582 02C7                         l3574 025A  
                       l3566 01D2                         l3558 0196                         l3742 078C  
                       l3494 0030                         l3486 0019                         l2856 1ACC  
                       l2880 1BC5                         l2872 1BB7                         l3752 1B1B  
                       l2848 0FF7                         l2792 0F17                         l2784 0E8C  
                       l2776 0E0C                         l2768 0DC6                         l2696 17E3  
                       l2688 17CD                         l2960 10E6                         l2952 1013  
                       l2936 0BE3                         l2928 0AF4                         l3736 0772  
                       l3728 074F                         l3680 0650                         l3672 057D  
                       l3664 0564                         l3656 053B                         l3648 0520  
                       l3592 033C                         l3584 02E2                         l3568 021D  
                       l3576 0262                         l3496 0034                         l3488 001E  
                       l3760 1ED9                         l2858 1AD2                         l2882 1BC8  
                       l2874 1BBA                         l2866 1BAB                         l3754 1B1E  
                       l2794 0F20                         l2786 0E9C                         l2778 0E29  
                       l2698 17E8                         l2970 1102                         l2890 1376  
                       l2954 1015                         l2946 1006                         l2938 0BEA  
                       l3690 06AA                         l3682 065C                         l3674 059B  
                       l3666 056D                         l3658 0548                         l3594 0344  
                       l3586 0309                         l3578 0271                         l3498 0044  
                       l3770 1EF5                         l3762 1EE3                         l2884 1BCD  
                       l2876 1BBF                         l2868 1BB1                         l3756 1B29  
                       l2796 0F2E                         l2788 0EC9                         l2980 1122  
                       l2972 1108                         l2964 10EF                         l2948 1007  
                       l3692 06B0                         l3676 05F6                         l3684 0697  
                       l3668 0572                         l3596 0362                         l3588 0318  
                       l3780 1F17                         l3772 1EFA                         l3764 1EE8  
                       l2886 1BD0                         l2878 1BC2                         l3758 1B2F  
                       l2798 0F37                         l2990 114C                         l2982 112B  
                       l2974 1117                         l2958 10D3                         l3686 069F  
                       l3678 0631                         l3694 06B7                         l3846 00F1  
                       l3782 1F29                         l3774 1F05                         l3766 1EED  
                       l2992 1156                         l2984 1139                         l2976 1119  
                       l2896 1483                         l2888 1370                         l3696 06BD  
                       l3688 06A6                         l3784 1F40                         l3776 1F0B  
                       l3768 1EF4                         l2986 1143                         l2978 111E  
                       l2898 1489                         l3698 06C5                         l3786 1F52  
                       l3778 1F11                         l2988 1144                         l2998 115E  
                       ?_isr 0070                         STR_1 1896                         u3100 1B92  
                       u3101 1B91                         u3120 1BA6                         u3121 1BA5  
                       u4001 0D70                         u4002 0D77                         u3210 1E4E  
                       u3130 1DFB                         u3115 1B99                         u4011 0D9C  
                       u4003 0D7E                         u3211 1E4D                         u3131 1DFA  
                       u4100 0ED5                         u4012 0DA3                         u3220 1E53  
                       u3140 1E06                         u3300 1D7D                         u4021 0DB8  
                       u4013 0DAA                         u3221 1E52                         u3205 1E42  
                       u3141 1E05                         u3301 1D7C                         u4022 0DBF  
                       u3150 1E17                         u3310 1D82                         u3230 1D38  
                       u4111 0EE1                         u4023 0DC6                         u3151 1E16  
                       u3311 1D81                         u3231 1D37                         u4200 0F68  
                       u4120 0EFD                         u4112 0EE8                         u5000 1F9A  
                       u3320 1C53                         u3240 1D43                         u4201 0F67  
                       u4113 0EEF                         u4105 0ED0                         u4041 0DEE  
                       u5001 1F99                         u3321 1C52                         u3241 1D42  
                       u4210 0F6F                         u4042 0DF5                         u3410 1C27  
                       u3170 1E29                         u3250 1D4E                         u4211 0F6E  
                       u4131 0F09                         u4051 0E1B                         u4043 0DFC  
                       u4035 0DC8                         u5011 1FA9                         u3411 1C26  
                       u3171 1E28                         u3251 1D4D                         u4300 1A9B  
                       u4220 0F75                         u4132 0F10                         u4052 0E22  
                       u3500 15C3                         u5020 1FC2                         u5012 1FAA  
                       u3340 1C65                         u3420 1C31                         u4301 1A9A  
                       u4221 0F74                         u4133 0F17                         u4125 0EF8  
                       u4053 0E29                         u3501 15C2                         u5021 1FC1  
                       u5013 1FAF                         u3341 1C64                         u3421 1C30  
                       u3405 1C19                         u3165 1E1B                         u4230 0F87  
                       u3510 15C8                         u5014 1FB0                         u5110 1EB0  
                       u4310 1376                         u3190 1E3A                         u3270 1D60  
                       u4231 0F86                         u4071 0E51                         u3511 15C7  
                       u5031 1FD1                         u5015 1FB5                         u5111 1EAF  
                       u3335 1C57                         u4311 1375                         u3191 1E39  
                       u3271 1D5F                         u4240 0F96                         u4160 0F3B  
                       u4072 0E58                         u3600 1682                         u3520 15E1  
                       u5040 1FFC                         u5032 1FD2                         u5016 1FB6  
                       u5120 1EB7                         u3360 1C76                         u3440 1C44  
                       u3280 1D6A                         u4400 0950                         u6000 069E  
                       u4161 0F3A                         u4145 0F19                         u4081 0E7E  
                       u4073 0E5F                         u4065 0E2B                         u3601 1681  
                       u3521 15E0                         u5041 1FFB                         u5033 1FD7  
                       u5121 1EB6                         u5105 1EA0                         u3361 1C75  
                       u3441 1C43                         u3425 1C2D                         u3185 1E2A  
                       u3281 1D69                         u3265 1D52                         u4401 094F  
                       u6001 069D                         u4250 0FB3                         u4082 0E85  
                       u3610 1686                         u3530 15E5                         u3450 1589  
                       u5034 1FD8                         u5050 1AAC                         u5210 1D2A  
                       u6010 06B6                         u4251 0FB2                         u4155 0F30  
                       u4091 0EAB                         u4083 0E8C                         u3611 1685  
                       u3531 15E4                         u3451 1588                         u5035 1FDD  
                       u5051 1AAB                         u5211 1D29                         u3355 1C66  
                       u3435 1C38                         u3195 1E36                         u6011 06B5  
                       u5300 124C                         u5220 11A1                         u4260 0FCD  
                       u4180 0F4F                         u4092 0EB2                         u3700 1712  
                       u3620 168B                         u3540 163D                         u3460 158F  
                       u5036 1FDE                         u5140 1EC8                         u5060 1E6A  
                       u3380 1C8A                         u6100 0739                         u6020 06BD  
                       u5301 124B                         u5221 11A0                         u4261 0FCC  
                       u4245 0F91                         u4181 0F4E                         u4093 0EB9  
                       u3701 1713                         u3621 168A                         u3541 163C  
                       u3461 158E                         u5045 1FF8                         u5141 1EC7  
                       u5061 1E69                         u5205 1D1C                         u3381 1C89  
                       u3365 1C72                         u4325 1393                         u3285 1D66  
                       u6101 0738                         u6021 06BC                         u5230 11A7  
                       u4270 0FEB                         u4190 0F54                         u3710 1730  
                       u3702 1718                         u3550 1648                         u3470 1594  
                       u5150 1ECD                         u5070 1E81                         u3390 1C15  
                       u4350 1489                         u6110 074F                         u6030 06C5  
                       u5231 11A6                         u4271 0FEA                         u4255 0FAF  
                       u4191 0F53                         u4175 0F3E                         u3711 172F  
                       u3703 1719                         u3631 169D                         u3551 1646  
                       u3471 1593                         u5151 1ECC                         u5135 1EBA  
                       u3375 1C7E                         u3391 1C14                         u4351 1488  
                       u4335 13ED                         u3295 1D71                         u4415 0970  
                       u6111 074E                         u6031 06C4                         u4280 1AB6  
                       u5240 11AC                         u3800 1790                         u3720 1755  
                       u3640 16AF                         u3632 16A4                         u3560 1649  
                       u3480 15B2                         u5080 1E97                         u5160 1CE7  
                       u4520 0BEA                         u4440 0A3F                         u6120 0766  
                       u6040 06D6                         u4281 1AB5                         u5241 11AB  
                       u4265 0FC9                         u3801 178F                         u3721 1754  
                       u3641 16AE                         u3633 16AB                         u3545 1639  
                       u3481 15B1                         u5081 1E96                         u5161 1CE6  
                       u4345 1442                         u4521 0BE9                         u4505 0B57  
                       u4441 0A3E                         u4425 09AC                         u6121 0765  
                       u6105 0735                         u6041 06D5                         u4290 1AD2  
                       u5410 12C2                         u5330 1262                         u5250 11CE  
                       u3810 1797                         u3730 175A                         u3650 16B3  
                       u3570 165D                         u3490 15BD                         u5090 1E9E  
                       u4610 1139                         u6130 0772                         u6050 06EC  
                       u4291 1AD1                         u5411 12C1                         u5331 1261  
                       u5315 124E                         u5251 11CD                         u3811 1796  
                       u3731 1759                         u3651 16B2                         u3571 165C  
                       u3491 15BC                         u5091 1E9D                         u5075 1E7C  
                       u4611 1138                         u4515 0BA2                         u4435 09F7  
                       u6131 0771                         u6051 06EB                         u5500 135A  
                       u5420 12C7                         u5260 11D4                         u3900 17FE  
                       u3820 179D                         u3660 16C2                         u3580 166C  
                       u5180 1CFB                         u4700 1187                         u6140 078C  
                       u6060 06FD                         u5501 1359                         u5421 12C6  
                       u5405 12B1                         u5325 1257                         u5261 11D3  
                       u3901 17FD                         u3821 179C                         u3661 16C1  
                       u3581 166B                         u5181 1CFA                         u4701 1186  
                       u4605 1124                         u4365 14A6                         u6141 078B  
                       u6061 06FC                         u6045 06D2                         u6150 1B3A  
                       u5430 12DB                         u5350 127E                         u5270 11D9  
                       u3910 0CB0                         u3830 17AF                         u3750 1770  
                       u5510 101F                         u5190 1D0D                         u4710 088F  
                       u4630 1152                         u4390 0947                         u6070 0709  
                       u6151 1B39                         u5431 12DA                         u5351 127D  
                       u5271 11D8                         u3911 0CAF                         u3831 17AE  
                       u3751 176F                         u5511 101E                         u5191 1D0C  
                       u5175 1CEC                         u4711 088E                         u4631 1151  
                       u4615 1135                         u4375 14F3                         u4535 0BFD  
                       u4455 0A52                         u4391 0946                         u6071 0708  
                       u6055 06E8                         u5440 12E2                         u5360 1297  
                       u5280 11F4                         u3920 0CB6                         u3840 17BE  
                       u3760 1775                         u3680 16E7                         u5600 109C  
                       u5520 1023                         u4800 091F                         u4720 08A3  
                       u4640 1156                         u4560 100D                         u4480 0AFB  
                       u6080 0713                         u6160 1EF4                         u5441 12E1  
                       u5361 1296                         u5345 1265                         u5281 11F3  
                       u3921 0CB5                         u3761 1774                         u3745 1765  
                       u3681 16E6                         u5601 109B                         u5521 1022  
                       u4801 091E                         u4721 08A2                         u4641 1155  
                       u4625 1145                         u4385 153F                         u4561 100C  
                       u4545 0C39                         u4481 0AFA                         u4465 0A8E  
                       u6081 0712                         u6161 1EF3                         u5450 12E8  
                       u5370 129F                         u5290 1212                         u3930 0CBB  
                       u3850 17CD                         u3770 177F                         u5610 10A0  
                       u5530 1043                         u4810 0926                         u4650 115D  
                       u4570 1013                         u6090 0721                         u5451 12E7  
                       u5371 129E                         u5355 127A                         u5291 1211  
                       u3931 0CBA                         u3851 17CC                         u3771 177E  
                       u3691 16FE                         u3683 16E3                         u3675 16C5  
                       u3595 166F                         u5611 109F                         u5531 1042  
                       u5195 1D09                         u4811 0925                         u4651 115C  
                       u4571 1012                         u4555 0C75                         u4475 0ACA  
                       u6091 0720                         u5460 12FA                         u3940 0CDC  
                       u3860 17D6                         u3780 1785                         u3692 16FF  
                       u5620 10B5                         u4900 1DB2                         u4740 08E4  
                       u4580 10E6                         u5700 0084                         u5461 12F9  
                       u3941 0CDB                         u3861 17D5                         u3845 17B9  
                       u3781 1784                         u3693 1704                         u4901 1DB1  
                       u4741 08E3                         u4581 10E5                         u5701 0083  
                       u5470 1309                         u5390 12AE                         u3950 0CE2  
                       u3870 17DB                         u3790 178A                         u3694 1705  
                       u5630 10C5                         u5550 1064                         u4830 0937  
                       u4670 116F                         u4590 1100                         u5710 0092  
                       u5391 12AD                         u3951 0CE1                         u3871 17DA  
                       u3791 1789                         u3695 170A                         u5631 10C4  
                       u5551 1063                         u4831 0936                         u4735 08CB  
                       u4671 116E                         u4591 10FF                         u4495 0B1B  
                       u6095 071D                         u5711 0091                         u5480 1326  
                       u3960 0CE7                         u3880 17E8                         u3696 170B  
                       u5640 10C9                         u4920 1DCD                         u4840 1B65  
                       u4760 0902                         u4680 1176                         u5800 0271  
                       u5720 00D6                         u5481 1325                         u5385 12A3  
                       u3961 0CE6                         u3881 17E7                         u5641 10C8  
                       u5625 10B0                         u5545 1056                         u4921 1DCC  
                       u4841 1B64                         u4825 0929                         u4761 0901  
                       u4745 08E0                         u4681 1175                         u4665 115F  
                       u5801 0270                         u5721 00D5                         u5650 1BEB  
                       u5490 1343                         u3970 0CFE                         u3890 17ED  
                       u5570 1086                         u4770 0906                         u5810 02C7  
                       u5730 0105                         u5651 1BEA                         u5491 1342  
                       u5475 1304                         u3971 0CFD                         u3891 17EC  
                       u5571 1085                         u4915 1DB4                         u4771 0905  
                       u4755 08F5                         u5811 02C6                         u5731 0104  
                       u5660 1AC7                         u3980 0D03                         u4940 1DEB  
                       u4780 090D                         u5900 047E                         u5820 02E2  
                       u5740 0109                         u5661 1AC3                         u5485 1322  
                       u3981 0D02                         u5565 1078                         u4941 1DEA  
                       u4925 1DC9                         u4781 090C                         u5901 047D  
                       u5821 02E1                         u5805 026D                         u5741 0108  
                       u5590 1096                         u4950 1CA5                         u4870 1B7F  
                       u5910 04A0                         u5830 0309                         u5750 0138  
                       u5495 133F                         u3991 0D54                         u5591 1095  
                       u4951 1CA4                         u4935 1DDD                         u4871 1B7E  
                       u4855 1B6C                         u4695 1179                         u5911 049F  
                       u5831 0308                         u5815 02C3                         u5751 0137  
                       u3992 0D5B                         u4960 1CC1                         u4880 1D9E  
                       u5920 04AE                         u5840 0318                         u5760 0172  
                       u5680 0024                         u3993 0D62                         u5585 108B  
                       u4961 1CC0                         u4881 1D9D                         u4865 1B73  
                       u5921 04AD                         u5841 0317                         u5761 0171  
                       u5681 0023                         u5674 1ACA                         u4970 1CDB  
                       u5850 0333                         u5770 01AD                         u5690 0044  
                       u4971 1CDA                         u4795 090F                         u5915 049C  
                       u5851 0332                         u5771 01AC                         u5691 0043  
                       u4980 1F72                         u5940 0527                         u5780 0236  
                       u4981 1F71                         u5941 0526                         u5845 0314  
                       u5781 0235                         u4990 1F8E                         u5950 0548  
                       u5870 0446                         u5790 025A                         u4975 1CD7  
                       u4991 1F8D                         u4895 1DA3                         u5951 0547  
                       u5935 04BD                         u5871 0445                         u5791 0259  
                       u5960 0557                         u5880 0451                         u5961 0556  
                       u5881 0450                         u5865 0413                         u5970 0572  
                       u5890 046C                         u5971 0571                         u5955 0544  
                       u5891 046B                         u5875 0442                         u5965 0553  
                       u5985 05F9                         u5995 065F                         _TMRA 0110  
                       _WPUB 0095                         _main 1ED9             ??_PORT_Init_Gain 0072  
                main@sensor1 00EA                         btemp 007E            ??_PORT_Choose_Mux 0072  
                       start 000C              ___fldiv@new_exp 00B2        __size_of_ADC_GetValue 0012  
                      ??_isr 0070                ___fltol@sign1 0059              __end_of___fladd 1800  
                      ?_main 0070              __end_of___fldiv 136D              __end_of___awdiv 1E5D  
            __end_of___flneg 1AAF                        _ADRES 001E              __end_of___awmod 1D8C  
            __end_of___flmul 1000              __end_of___flsub 1B5F              __end_of___fltol 1ED9  
            __end_of___lldiv 1DF4              ___awdiv@divisor 0078              __end_of___llmod 1D33  
            __end_of___lwdiv 1C8F                        i1l181 1B0E                        i1l183 1B13  
            __end_of___lwmod 1C49              ___awdiv@counter 0020                _Voltage_Value 0803  
                      _RCSTA 0018                        _SPBRG 0099                        _PORTD 0008  
                      _TRISA 0085                        _TRISB 0086                        _TRISC 0087  
                      _TRISD 0088                        _TXREG 0019                        _TXSTA 0098  
           ??_PORT_Start_ADC 0072              __end_of_dpowers 1896                        _scale 0940  
            __end_of_isdigit 1017           __size_of_PORT_Init 0039                        pclath 000A  
                      status 0003                        wtemp0 007E              __end_of_sprintf 0791  
               _ADC_GetValue 1ADD   __end_of_PORT_Get_Value_Adc 1A94              __initialization 000F  
              PORT_putchar@c 0072                 __end_of_main 1F5C                       ??_main 007C  
             ?_Voltage_Value 00BA   __size_of_TIMER_init_timer1 0012         __size_of__tdiv_to_l_ 00BD  
   __end_of_Resistance_Value 07FF                       _ADCON0 001F                       _ADCON1 009F  
           ___llmod@dividend 0076                       ?_scale 003E             ___awdiv@dividend 007A  
                     _ANSELA 0185                       _ANSELB 0186                       _ANSELD 0188  
                     i1l3810 1B01                       _T1SYNC 0082                       i1l3812 1B07  
                     i1l3814 1B12                       _FVRCON 009D                       u617_20 1B07  
                     u617_21 1B06                       u618_20 1B12                       _OSCCON 0090  
                     u618_21 1B11                       _TMR1GE 047F                       _TMR1IE 0460  
                     _TMR1IF 0060                       _TMR1ON 0080                       _TMRAIF 006C  
                     _TMRCS0 0086                       _TMRCS1 0087             __end_of___xxtofl 10D3  
           __end_of__powers_ 183A                       ___flge 1F5C                       ___fleq 1C8F  
                  ??___fladd 005A                       ___wmul 1B5F                    ??___fldiv 00A8  
                  ??___awdiv 007C                    ??___flneg 0076                    ??___awmod 0076  
                  ??___flmul 002C                    ??___flsub 007C                    ??___fltol 0055  
                  ??___lldiv 007A                    ??___llmod 007A                    ??___lwdiv 007B  
                  ??___lwmod 0076            __end_of_PORT_Init 1C0F                       _fround 136D  
           ___awdiv@quotient 0022              ___awmod@divisor 0072              ___awmod@counter 0076  
                     main@Rc 00E2            ?_PORT_Init_Serial 0070                       main@Vs 00E6  
                  ??_isdigit 0072           ??_PORT_Init_Serial 0072           __size_of__Umul8_16 0027  
                     saved_w 007E                    ??_sprintf 00A5             ??_PORT_putString 0073  
                 ___flge@ff1 0072                   ___flge@ff2 0076                 ___xxtofl@arg 0022  
               ___xxtofl@exp 0021                 ___xxtofl@val 0072                   ___fleq@ff1 0072  
                 ___fleq@ff2 0076      __end_of__initialization 0012                   ___flneg@f1 0072  
                 ___fltol@f1 0051               __pcstackCOMMON 0070                __end_of_scale 0C9F  
            ??_Voltage_Value 00BE                   __div_to_l_ 0882              _PORT_Choose_Mux 1ACB  
            __div_to_l_@exp1 0025              __div_to_l_@cntr 0024                      ??_scale 0042  
            __div_to_l_@quot 0020                 sprintf@width 00B5            ?_PORT_Select_Mux0 0070  
                 __pbssBANK1 00EB           ??_PORT_Select_Mux0 0072                __div_to_l_@f1 0072  
              __div_to_l_@f2 0076            __end_of__Umul8_16 1BAB                   __pmaintext 1ED9  
                    ?___flge 0072                      ?___fleq 0072                      ?___wmul 0072  
        ADC_GetValue@channel 0073                   __pintentry 0004                      _DACCON0 0113  
                    _DACCON1 0114                      ?_fround 003E                      _T1CKPS0 0084  
                    _T1CKPS1 0085                      _T1OSCEN 0083                    ?___xxtofl 0072  
                 __stringtab 1800            __end_of__npowers_ 186E              __size_of___flge 00A4  
            __size_of___fleq 0050                      ___fladd 1578                      ___fldiv 1190  
                    ___awdiv 1DF4                      ___flneg 1AA4                      ___awmod 1D33  
                    ___flmul 0C9F                      ___flsub 1B3B                      ___fltol 1E5D  
                    ___lldiv 1D8C              __size_of___wmul 0025                      ___llmod 1CDF  
                    ___lwdiv 1C49                   _fround$828 004D                   _fround$829 0049  
                    ___lwmod 1C0F              __size_of_fround 020B      __end_of_PORT_Choose_Mux 1ADD  
                    __ptext1 0016                      __ptext2 0940                      __ptext3 1D33  
                    __ptext4 1DF4                      __ptext5 1005                      __ptext6 136D  
                    __ptext7 1C0F                      __ptext8 1C49                      __ptext9 10D3  
                ?__div_to_l_ 0072                      _dpowers 186E           _PORT_Get_Value_Adc 1A90  
                    _isdigit 1005                 __size_of_isr 0019                   ??___xxtofl 0076  
           ___awmod@dividend 0074            ?_Resistance_Value 00BA                      _sprintf 0016  
                    main@tab 00CB          ?_PORT_Get_Value_Adc 0070         end_of_initialization 0012  
    __size_of_PORT_Blink_LED 0010           ??_Resistance_Value 007C              ___lldiv@divisor 0072  
            ___lldiv@counter 0024         ??_PORT_Get_Value_Adc 0072               __tdiv_to_l_@f1 0072  
             __tdiv_to_l_@f2 0076      __size_of_PORT_Init_Gain 0005                ??__tdiv_to_l_ 0020  
                  _PORTBbits 0006                    _PORTCbits 0007                    _PORT_Init 1BD6  
                ___fladd@grs 0065                ___xxtofl@sign 0020                ?_PORT_putchar 0070  
                ___fldiv@grs 00B4                  ___fldiv@rem 00AD    __size_of_PORT_Init_Serial 002B  
                ___flmul@grs 0032          __size_of__div_to_l_ 00BE      __size_of_PORT_Start_ADC 0008  
            PORT_putString@i 0074               __end_of___flge 2000               __end_of___fleq 1CDF  
             __end_of___wmul 1B84                    _Fincompt1 00EB             ?_PORT_Choose_Mux 0070  
             __end_of_fround 1578                   ?_PORT_Init 0070               ??_PORT_putchar 0072  
        start_initialization 000F          __end_of__tdiv_to_l_ 1190                  __end_of_isr 1B1A  
            ___llmod@divisor 0072              ___llmod@counter 007B                     ??___flge 0020  
                   ??___fleq 0020    __size_of_PORT_Select_Mux0 0008                     ??___wmul 0076  
                  __Umul8_16 1B84                     ??_fround 0042                sprintf@tmpval 00B7  
      __end_of_Voltage_Value 0882                    ___fladd@a 0056                    ___fladd@b 0052  
                 fround@prec 0051                    ___fldiv@a 00A0                    ___fldiv@b 00A4  
                  ___flmul@a 0028                    ___flmul@b 0024                    ___flsub@a 0066  
                  ___flsub@b 006A                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0            __size_of___xxtofl 00BC               _PORT_Blink_LED 1ABB  
                sprintf@flag 00B3                  sprintf@eexp 00BB                  sprintf@fval 00BD  
              ?_ADC_GetValue 0070                  sprintf@prec 00C2             ___lwdiv@dividend 0079  
    __size_of_PORT_putString 0021                     ?___fladd 0052                     ?___fldiv 00A0  
                   ?___awdiv 0078                     ?___flneg 0072                     ?___awmod 0072  
                   ?___flmul 0024                     ?___flsub 0066                     ?___fltol 0051  
                   ?___lldiv 0072                     ?___llmod 0072                    __npowers_ 183A  
                 ?__Umul8_16 0072                     ?___lwdiv 0077               _PORT_Init_Gain 1000  
                   ?___lwmod 0072                    __pstrings 1800                  __tdiv_to_l_ 10D3  
                ??_PORT_Init 0072                 ??__div_to_l_ 007A                     ?_isdigit 0070  
                  _scale$830 004C       __end_of_PORT_Blink_LED 1ACB             ___lwdiv@quotient 0020  
                   ?_sprintf 00A0               __size_of_scale 035F             _PORT_Init_Serial 1BAB  
             ??_ADC_GetValue 0073            interrupt_function 0004               ___wmul@product 0076  
             _PORT_Start_ADC 1A94         __end_of_PORT_putchar 1ABB        PORT_Choose_Mux@_value 0072  
         __end_of__div_to_l_ 0940                     _GO_nDONE 00F9       __end_of_PORT_Init_Gain 1005  
  __size_of_Resistance_Value 006E                  __stringbase 1805            ___wmul@multiplier 0072  
            ?_PORT_Blink_LED 0070       __end_of_PORT_Start_ADC 1A9C              ?_PORT_Init_Gain 0070  
           _PORT_Select_Mux0 1A9C                  ??__Umul8_16 0074  __size_of_PORT_Get_Value_Adc 0004  
           __size_of___fladd 0288             __size_of___fldiv 01DD             __size_of___awdiv 0069  
           __size_of___flneg 000B             __size_of___awmod 0059             __size_of___flmul 0361  
           __size_of___flsub 0024             __size_of___fltol 007C             __size_of___lldiv 0068  
           __size_of___llmod 0054             __size_of___lwdiv 0046             __size_of___lwmod 003A  
         __end_of__stringtab 1806                  _isdigit$697 0072                   sprintf@val 00AF  
                   ___xxtofl 1017             __size_of_isdigit 0012              ___lwdiv@divisor 0077  
            ___lwdiv@counter 0022                     __ptext10 0882                     __ptext11 1B5F  
                   __ptext20 1AEF                     __ptext12 1CDF                     __ptext21 0791  
                   __ptext13 1D8C                     __ptext30 1000                     __ptext22 1B3B  
                   __ptext14 1E5D                     __ptext31 1BD6                     __ptext23 1578  
                   __ptext15 1AA4                     __ptext32 1BAB                     __ptext24 0C9F  
                   __ptext16 1F5C                     __ptext33 1ABB                     __ptext25 1B84  
                   __ptext17 1C8F                     __ptext34 1ADD                     __ptext26 1190  
                   __ptext18 0803                     __ptext35 1A94                     __ptext27 1B1A  
                   __ptext19 1017                     __ptext36 1A90                     __ptext28 1AAF  
                   __ptext37 1ACB                     __ptext29 1A9C                     __ptext38 1B01  
                   __powers_ 1806             __size_of_sprintf 077B              ?_PORT_Start_ADC 0070  
              __size_of_main 0083               _PORT_putString 1B1A         __end_of_ADC_GetValue 1AEF  
       Voltage_Value@fSensor 00C6                     isdigit@c 0073                     scale@scl 0050  
   __size_of_PORT_Choose_Mux 0012                     intlevel1 0000                    sprintf@ap 00AE  
           __tdiv_to_l_@exp1 0028             __tdiv_to_l_@cntr 0027                    sprintf@sp 00C1  
           __tdiv_to_l_@quot 0023        __size_of_PORT_putchar 000C             ___lwmod@dividend 0074  
           ___lldiv@dividend 0076       __end_of_PORT_putString 1B3B                    stringcode 1800  
           _Resistance_Value 0791     __end_of_PORT_Init_Serial 1BD6                 ?__tdiv_to_l_ 0072  
       PORT_putString@chaine 0076       __Umul8_16@multiplicand 0072                     sprintf@c 00C4  
                   sprintf@f 00A0          Voltage_Value@sensor 00CA          Voltage_Value@result 00C2  
           ___lldiv@quotient 0020              ___lwmod@divisor 0072              ___lwmod@counter 0076  
                   stringdir 1800                     stringtab 1800                 _PORT_putchar 1AAF  
          _TIMER_init_timer1 1AEF      Resistance_Value@Voltage 00BA                ___fladd@signs 0062  
         ?_TIMER_init_timer1 0070                 ___fladd@aexp 0063                 ___fladd@bexp 0064  
            ?_PORT_putString 0070         __Umul8_16@multiplier 007A          ??_TIMER_init_timer1 0072  
     __size_of_Voltage_Value 007F            __Umul8_16@product 0076  
