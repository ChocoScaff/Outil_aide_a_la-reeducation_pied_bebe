

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon May 15 10:28:01 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F707
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F707 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0106                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0110                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0185                     	;# 
   132  0186                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0106                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0110                     	;# 
   210  0111                     	;# 
   211  0112                     	;# 
   212  0113                     	;# 
   213  0114                     	;# 
   214  0185                     	;# 
   215  0186                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0106                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0110                     	;# 
   293  0111                     	;# 
   294  0112                     	;# 
   295  0113                     	;# 
   296  0114                     	;# 
   297  0185                     	;# 
   298  0186                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  0019                     _TXREG	set	25
   304  001E                     _ADRES	set	30
   305  0008                     _PORTD	set	8
   306  0006                     _PORTBbits	set	6
   307  001F                     _ADCON0	set	31
   308  0018                     _RCSTA	set	24
   309  006C                     _TMRAIF	set	108
   310  0060                     _TMR1IF	set	96
   311  0080                     _TMR1ON	set	128
   312  0082                     _T1SYNC	set	130
   313  0085                     _T1CKPS1	set	133
   314  0084                     _T1CKPS0	set	132
   315  0086                     _TMRCS0	set	134
   316  0087                     _TMRCS1	set	135
   317  0083                     _T1OSCEN	set	131
   318  00F9                     _GO_nDONE	set	249
   319  009D                     _FVRCON	set	157
   320  009F                     _ADCON1	set	159
   321  0088                     _TRISD	set	136
   322  0085                     _TRISA	set	133
   323  0090                     _OSCCON	set	144
   324  0086                     _TRISB	set	134
   325  0095                     _WPUB	set	149
   326  0098                     _TXSTA	set	152
   327  0099                     _SPBRG	set	153
   328  0087                     _TRISC	set	135
   329  0460                     _TMR1IE	set	1120
   330  047F                     _TMR1GE	set	1151
   331  0110                     _TMRA	set	272
   332  0114                     _DACCON1	set	276
   333  0113                     _DACCON0	set	275
   334  0185                     _ANSELA	set	389
   335  0188                     _ANSELD	set	392
   336  0186                     _ANSELB	set	390
   337                           
   338                           	psect	strings
   339  00CB                     __pstrings:
   340  00CB                     stringtab:
   341  00CB                     __stringtab:
   342  00CB                     stringcode:	
   343                           ;	String table - string pointers are 1 byte each
   344                           
   345  00CB                     stringdir:
   346  00CB  3000               	movlw	high stringdir
   347  00CC  008A               	movwf	10
   348  00CD  0804               	movf	4,w
   349  00CE  0A84               	incf	4,f
   350  00CF  0782               	addwf	2,f
   351  00D0                     __stringbase:
   352  00D0  3400               	retlw	0
   353  00D1                     __end_of__stringtab:
   354  00D1                     STR_1:
   355  00D1  3448               	retlw	72	;'H'
   356  00D2  3465               	retlw	101	;'e'
   357  00D3  346C               	retlw	108	;'l'
   358  00D4  346C               	retlw	108	;'l'
   359  00D5  346F               	retlw	111	;'o'
   360  00D6  3420               	retlw	32	;' '
   361  00D7  3457               	retlw	87	;'W'
   362  00D8  346F               	retlw	111	;'o'
   363  00D9  3472               	retlw	114	;'r'
   364  00DA  346C               	retlw	108	;'l'
   365  00DB  3464               	retlw	100	;'d'
   366  00DC  340A               	retlw	10
   367  00DD  3400               	retlw	0
   368                           
   369                           	psect	cinit
   370  000F                     start_initialization:	
   371                           ; #config settings
   372                           
   373  000F                     __initialization:
   374                           
   375                           ; Clear objects allocated to COMMON
   376  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   377  0010                     end_of_initialization:	
   378                           ;End of C runtime variable initialization code
   379                           
   380  0010                     __end_of__initialization:
   381  0010  0183               	clrf	3
   382  0011  120A  118A  289D   	ljmp	_main	;jump to C main() function
   383                           
   384                           	psect	bssCOMMON
   385  0076                     __pbssCOMMON:
   386  0076                     _Fincompt1:
   387  0076                     	ds	1
   388                           
   389                           	psect	cstackCOMMON
   390  0070                     __pcstackCOMMON:
   391  0070                     ?_PORT_Init:
   392  0070                     ?_TIMER_init_timer1:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_PORT_Blink_LED:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_PORT_putString:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_PORT_putchar:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_main:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_PORT_Init_Serial:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_isr:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ??_isr:	
   414                           ; 1 bytes @ 0x0
   415                           
   416                           
   417                           ; 1 bytes @ 0x0
   418  0070                     	ds	2
   419  0072                     ??_PORT_Init:
   420  0072                     ??_TIMER_init_timer1:	
   421                           ; 1 bytes @ 0x2
   422                           
   423  0072                     ??_PORT_Blink_LED:	
   424                           ; 1 bytes @ 0x2
   425                           
   426  0072                     ??_PORT_putchar:	
   427                           ; 1 bytes @ 0x2
   428                           
   429  0072                     ??_PORT_Init_Serial:	
   430                           ; 1 bytes @ 0x2
   431                           
   432  0072                     PORT_putchar@c:	
   433                           ; 1 bytes @ 0x2
   434                           
   435                           
   436                           ; 1 bytes @ 0x2
   437  0072                     	ds	1
   438  0073                     ??_PORT_putString:
   439  0073                     PORT_putString@i:	
   440                           ; 1 bytes @ 0x3
   441                           
   442                           
   443                           ; 2 bytes @ 0x3
   444  0073                     	ds	2
   445  0075                     PORT_putString@chaine:
   446                           
   447                           ; 1 bytes @ 0x5
   448  0075                     	ds	1
   449  0076                     ??_main:
   450                           
   451                           	psect	maintext
   452  009D                     __pmaintext:	
   453                           ; 1 bytes @ 0x6
   454 ;;
   455 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   456 ;;
   457 ;; *************** function _main *****************
   458 ;; Defined at:
   459 ;;		line 16 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : B00/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0
   475 ;;      Temps:          0       0       0       0       0
   476 ;;      Totals:         0       0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels required when called:    3
   479 ;; This function calls:
   480 ;;		_PORT_Blink_LED
   481 ;;		_PORT_Init
   482 ;;		_PORT_putString
   483 ;;		_TIMER_init_timer1
   484 ;; This function is called by:
   485 ;;		Startup code after reset
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           
   490                           ;psect for function _main
   491  009D                     _main:
   492  009D                     l798:	
   493                           ;incstack = 0
   494                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   495                           
   496                           
   497                           ;main.c: 20:     PORT_Init();
   498  009D  120A  118A  2014  120A  118A  	fcall	_PORT_Init
   499                           
   500                           ;main.c: 21:     TIMER_init_timer1();
   501  00A2  120A  118A  20DE  120A  118A  	fcall	_TIMER_init_timer1
   502  00A7                     l800:
   503                           
   504                           ;main.c: 24:         PORT_Blink_LED();
   505  00A7  120A  118A  20F0  120A  118A  	fcall	_PORT_Blink_LED
   506  00AC                     l802:
   507                           
   508                           ;main.c: 25:         PORT_putString("Hello World\n");
   509  00AC  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   510  00AD  120A  118A  2078  120A  118A  	fcall	_PORT_putString
   511  00B2  28A7               	goto	l800
   512  00B3  120A  118A  280C   	ljmp	start
   513  00B6                     __end_of_main:
   514                           
   515                           	psect	text1
   516  00DE                     __ptext1:	
   517 ;; *************** function _TIMER_init_timer1 *****************
   518 ;; Defined at:
   519 ;;		line 10 in file "timer.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   533 ;;      Params:         0       0       0       0       0
   534 ;;      Locals:         0       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0
   536 ;;      Totals:         0       0       0       0       0
   537 ;;Total ram usage:        0 bytes
   538 ;; Hardware stack levels used:    1
   539 ;; Hardware stack levels required when called:    1
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           
   548                           ;psect for function _TIMER_init_timer1
   549  00DE                     _TIMER_init_timer1:
   550  00DE                     l714:	
   551                           ;incstack = 0
   552                           ; Regs used in _TIMER_init_timer1: [wreg]
   553                           
   554                           
   555                           ;timer.c: 12:     TMRA = 65535-5000;
   556  00DE  3077               	movlw	119
   557  00DF  1283               	bcf	3,5	;RP0=0, select bank2
   558  00E0  1703               	bsf	3,6	;RP1=1, select bank2
   559  00E1  0090               	movwf	16	;volatile
   560  00E2                     l716:
   561                           
   562                           ;timer.c: 26:     T1OSCEN=0;
   563  00E2  1283               	bcf	3,5	;RP0=0, select bank0
   564  00E3  1303               	bcf	3,6	;RP1=0, select bank0
   565  00E4  1190               	bcf	16,3	;volatile
   566  00E5                     l718:
   567                           
   568                           ;timer.c: 38:     TMRCS1=0;
   569  00E5  1390               	bcf	16,7	;volatile
   570  00E6                     l720:
   571                           
   572                           ;timer.c: 39:     TMRCS0=0;
   573  00E6  1310               	bcf	16,6	;volatile
   574  00E7                     l722:
   575                           
   576                           ;timer.c: 48:     T1CKPS0=1;
   577  00E7  1610               	bsf	16,4	;volatile
   578  00E8                     l724:
   579                           
   580                           ;timer.c: 49:     T1CKPS1=1;
   581  00E8  1690               	bsf	16,5	;volatile
   582  00E9                     l726:
   583                           
   584                           ;timer.c: 58:     T1SYNC=1;
   585  00E9  1510               	bsf	16,2	;volatile
   586  00EA                     l728:
   587                           
   588                           ;timer.c: 64:     TMR1ON=1;
   589  00EA  1410               	bsf	16,0	;volatile
   590  00EB                     l730:
   591                           
   592                           ;timer.c: 73:     TMR1GE=0;
   593  00EB  1683               	bsf	3,5	;RP0=1, select bank1
   594  00EC  1303               	bcf	3,6	;RP1=0, select bank1
   595  00ED  138F               	bcf	15,7	;volatile
   596  00EE                     l732:
   597                           
   598                           ;timer.c: 77:     TMR1IE=1;
   599  00EE  140C               	bsf	12,0	;volatile
   600  00EF                     l139:
   601  00EF  0008               	return
   602  00F0                     __end_of_TIMER_init_timer1:
   603                           
   604                           	psect	text2
   605  0078                     __ptext2:	
   606 ;; *************** function _PORT_putString *****************
   607 ;; Defined at:
   608 ;;		line 130 in file "port.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  chaine          1    wreg     PTR unsigned char 
   611 ;;		 -> STR_1(13), 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  chaine          1    5[COMMON] PTR unsigned char 
   614 ;;		 -> STR_1(13), 
   615 ;;  i               2    3[COMMON] int 
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   625 ;;      Params:         0       0       0       0       0
   626 ;;      Locals:         3       0       0       0       0
   627 ;;      Temps:          0       0       0       0       0
   628 ;;      Totals:         3       0       0       0       0
   629 ;;Total ram usage:        3 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; Hardware stack levels required when called:    2
   632 ;; This function calls:
   633 ;;		_PORT_putchar
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           
   640                           ;psect for function _PORT_putString
   641  0078                     _PORT_putString:
   642                           
   643                           ;incstack = 0
   644                           ; Regs used in _PORT_putString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   645                           ;PORT_putString@chaine stored from wreg
   646  0078  00F5               	movwf	PORT_putString@chaine
   647  0079                     l790:
   648                           
   649                           ;port.c: 132:     int i;;port.c: 134:     for(i=0 ; chaine[i]!=0 ; i++)
   650  0079  01F3               	clrf	PORT_putString@i
   651  007A  01F4               	clrf	PORT_putString@i+1
   652  007B  288F               	goto	l796
   653  007C                     l792:
   654                           
   655                           ;port.c: 135:     {;port.c: 136:         PORT_putchar(chaine[i]);
   656  007C  0873               	movf	PORT_putString@i,w
   657  007D  0775               	addwf	PORT_putString@chaine,w
   658  007E  0084               	movwf	4
   659  007F  120A  118A  20CB  120A  118A  	fcall	stringdir
   660  0084  120A  118A  2100  120A  118A  	fcall	_PORT_putchar
   661  0089                     l794:
   662                           
   663                           ;port.c: 137:     }
   664  0089  3001               	movlw	1
   665  008A  07F3               	addwf	PORT_putString@i,f
   666  008B  1803               	skipnc
   667  008C  0AF4               	incf	PORT_putString@i+1,f
   668  008D  3000               	movlw	0
   669  008E  07F4               	addwf	PORT_putString@i+1,f
   670  008F                     l796:
   671  008F  0873               	movf	PORT_putString@i,w
   672  0090  0775               	addwf	PORT_putString@chaine,w
   673  0091  0084               	movwf	4
   674  0092  120A  118A  20CB  120A  118A  	fcall	stringdir
   675  0097  3A00               	xorlw	0
   676  0098  1D03               	skipz
   677  0099  289B               	goto	u91
   678  009A  289C               	goto	u90
   679  009B                     u91:
   680  009B  287C               	goto	l792
   681  009C                     u90:
   682  009C                     l110:
   683  009C  0008               	return
   684  009D                     __end_of_PORT_putString:
   685                           
   686                           	psect	text3
   687  0100                     __ptext3:	
   688 ;; *************** function _PORT_putchar *****************
   689 ;; Defined at:
   690 ;;		line 120 in file "port.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  c               1    wreg     unsigned char 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  c               1    2[COMMON] unsigned char 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         0       0       0       0       0
   705 ;;      Locals:         1       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0
   707 ;;      Totals:         1       0       0       0       0
   708 ;;Total ram usage:        1 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; Hardware stack levels required when called:    1
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_PORT_putString
   715 ;;		_puts_float
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           
   720                           ;psect for function _PORT_putchar
   721  0100                     _PORT_putchar:
   722                           
   723                           ;incstack = 0
   724                           ; Regs used in _PORT_putchar: [wreg]
   725                           ;PORT_putchar@c stored from wreg
   726  0100  00F2               	movwf	PORT_putchar@c
   727  0101                     l656:
   728  0101                     l101:	
   729                           ;port.c: 122:     for(;(TXSTA&0x02)!=0x02;);
   730                           
   731  0101  1683               	bsf	3,5	;RP0=1, select bank1
   732  0102  1303               	bcf	3,6	;RP1=0, select bank1
   733  0103  1C98               	btfss	24,1	;volatile
   734  0104  2906               	goto	u11
   735  0105  2907               	goto	u10
   736  0106                     u11:
   737  0106  2901               	goto	l101
   738  0107                     u10:
   739  0107                     l658:
   740                           
   741                           ;port.c: 123:     TXREG = c;
   742  0107  0872               	movf	PORT_putchar@c,w
   743  0108  1283               	bcf	3,5	;RP0=0, select bank0
   744  0109  1303               	bcf	3,6	;RP1=0, select bank0
   745  010A  0099               	movwf	25	;volatile
   746  010B                     l104:
   747  010B  0008               	return
   748  010C                     __end_of_PORT_putchar:
   749                           
   750                           	psect	text4
   751  0014                     __ptext4:	
   752 ;; *************** function _PORT_Init *****************
   753 ;; Defined at:
   754 ;;		line 44 in file "port.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, status,2, status,0, pclath, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0
   770 ;;      Temps:          1       0       0       0       0
   771 ;;      Totals:         1       0       0       0       0
   772 ;;Total ram usage:        1 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; Hardware stack levels required when called:    2
   775 ;; This function calls:
   776 ;;		_PORT_Init_Serial
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _PORT_Init
   784  0014                     _PORT_Init:
   785  0014                     l682:	
   786                           ;incstack = 0
   787                           ; Regs used in _PORT_Init: [wreg+status,2+status,0+pclath+cstack]
   788                           
   789                           
   790                           ;port.c: 47:     WPUB=0;
   791  0014  1683               	bsf	3,5	;RP0=1, select bank1
   792  0015  1303               	bcf	3,6	;RP1=0, select bank1
   793  0016  0195               	clrf	21	;volatile
   794                           
   795                           ;port.c: 48:     ANSELB = 0;
   796  0017  1683               	bsf	3,5	;RP0=1, select bank3
   797  0018  1703               	bsf	3,6	;RP1=1, select bank3
   798  0019  0186               	clrf	6	;volatile
   799  001A                     l684:
   800                           
   801                           ;port.c: 51:     TRISB = 0xFE;
   802  001A  30FE               	movlw	254
   803  001B  1683               	bsf	3,5	;RP0=1, select bank1
   804  001C  1303               	bcf	3,6	;RP1=0, select bank1
   805  001D  0086               	movwf	6	;volatile
   806  001E                     l686:
   807                           
   808                           ;port.c: 54:     OSCCON = 0x30;
   809  001E  3030               	movlw	48
   810  001F  0090               	movwf	16	;volatile
   811  0020                     l688:	
   812                           ;port.c: 55:     for( ; (OSCCON & 0xC) != 0xC ; );
   813                           
   814  0020  300C               	movlw	12
   815  0021  0510               	andwf	16,w	;volatile
   816  0022  00F2               	movwf	??_PORT_Init
   817  0023  300C               	movlw	12
   818  0024  0672               	xorwf	??_PORT_Init,w
   819  0025  1D03               	btfss	3,2
   820  0026  2828               	goto	u21
   821  0027  2829               	goto	u20
   822  0028                     u21:
   823  0028  2820               	goto	l688
   824  0029                     u20:
   825  0029                     l690:
   826                           
   827                           ;port.c: 59:     ANSELD = 0x00;
   828  0029  1683               	bsf	3,5	;RP0=1, select bank3
   829  002A  1703               	bsf	3,6	;RP1=1, select bank3
   830  002B  0188               	clrf	8	;volatile
   831  002C                     l692:
   832                           
   833                           ;port.c: 62:     TRISA = 0xFF;
   834  002C  30FF               	movlw	255
   835  002D  1683               	bsf	3,5	;RP0=1, select bank1
   836  002E  1303               	bcf	3,6	;RP1=0, select bank1
   837  002F  0085               	movwf	5	;volatile
   838  0030                     l694:
   839                           
   840                           ;port.c: 64:     TRISD = 0xF0;
   841  0030  30F0               	movlw	240
   842  0031  0088               	movwf	8	;volatile
   843  0032                     l696:
   844                           
   845                           ;port.c: 66:     PORT_Init_Serial();
   846  0032  120A  118A  204D  120A  118A  	fcall	_PORT_Init_Serial
   847  0037                     l698:
   848                           
   849                           ;port.c: 68:     ANSELA = 0x01;
   850  0037  3001               	movlw	1
   851  0038  1683               	bsf	3,5	;RP0=1, select bank3
   852  0039  1703               	bsf	3,6	;RP1=1, select bank3
   853  003A  0085               	movwf	5	;volatile
   854  003B                     l700:
   855                           
   856                           ;port.c: 70:     ADCON0=0x01;
   857  003B  3001               	movlw	1
   858  003C  1283               	bcf	3,5	;RP0=0, select bank0
   859  003D  1303               	bcf	3,6	;RP1=0, select bank0
   860  003E  009F               	movwf	31	;volatile
   861  003F                     l702:
   862                           
   863                           ;port.c: 71:     ADCON1=0x62;
   864  003F  3062               	movlw	98
   865  0040  1683               	bsf	3,5	;RP0=1, select bank1
   866  0041  1303               	bcf	3,6	;RP1=0, select bank1
   867  0042  009F               	movwf	31	;volatile
   868  0043                     l704:
   869                           
   870                           ;port.c: 73:     FVRCON=0;
   871  0043  019D               	clrf	29	;volatile
   872  0044                     l706:
   873                           
   874                           ;port.c: 74:     DACCON0=0x0;
   875  0044  1283               	bcf	3,5	;RP0=0, select bank2
   876  0045  1703               	bsf	3,6	;RP1=1, select bank2
   877  0046  0193               	clrf	19	;volatile
   878  0047                     l708:
   879                           
   880                           ;port.c: 75:     DACCON0=0x60;
   881  0047  3060               	movlw	96
   882  0048  0093               	movwf	19	;volatile
   883  0049                     l710:
   884                           
   885                           ;port.c: 76:     DACCON0|=0x80;
   886  0049  1793               	bsf	19,7	;volatile
   887  004A                     l712:
   888                           
   889                           ;port.c: 78:     DACCON1=0x18;
   890  004A  3018               	movlw	24
   891  004B  0094               	movwf	20	;volatile
   892  004C                     l83:
   893  004C  0008               	return
   894  004D                     __end_of_PORT_Init:
   895                           
   896                           	psect	text5
   897  004D                     __ptext5:	
   898 ;; *************** function _PORT_Init_Serial *****************
   899 ;; Defined at:
   900 ;;		line 15 in file "port.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, status,2
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0
   917 ;;      Totals:         0       0       0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    1
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_PORT_Init
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           
   929                           ;psect for function _PORT_Init_Serial
   930  004D                     _PORT_Init_Serial:
   931  004D                     l660:	
   932                           ;incstack = 0
   933                           ; Regs used in _PORT_Init_Serial: [wreg+status,2]
   934                           
   935                           
   936                           ;port.c: 18:     TRISC = 0xFF;
   937  004D  30FF               	movlw	255
   938  004E  1683               	bsf	3,5	;RP0=1, select bank1
   939  004F  1303               	bcf	3,6	;RP1=0, select bank1
   940  0050  0087               	movwf	7	;volatile
   941                           
   942                           ;port.c: 21:     SPBRG = 51;
   943  0051  3033               	movlw	51
   944  0052  0099               	movwf	25	;volatile
   945  0053                     l662:
   946                           
   947                           ;port.c: 25:     TXSTA = TXSTA & 0xDF;
   948  0053  0818               	movf	24,w	;volatile
   949  0054  39DF               	andlw	223
   950  0055  0098               	movwf	24	;volatile
   951  0056                     l664:
   952                           
   953                           ;port.c: 26:     TXSTA = TXSTA | 1;
   954  0056  0818               	movf	24,w	;volatile
   955  0057  3801               	iorlw	1
   956  0058  0098               	movwf	24	;volatile
   957  0059                     l666:
   958                           
   959                           ;port.c: 28:     TXSTA = TXSTA | 0x04;
   960  0059  0818               	movf	24,w	;volatile
   961  005A  3804               	iorlw	4
   962  005B  0098               	movwf	24	;volatile
   963  005C                     l668:
   964                           
   965                           ;port.c: 30:     RCSTA = RCSTA | 0x20;
   966  005C  1283               	bcf	3,5	;RP0=0, select bank0
   967  005D  1303               	bcf	3,6	;RP1=0, select bank0
   968  005E  0818               	movf	24,w	;volatile
   969  005F  3820               	iorlw	32
   970  0060  0098               	movwf	24	;volatile
   971  0061                     l670:
   972                           
   973                           ;port.c: 31:     RCSTA = RCSTA & 0xDF;
   974  0061  0818               	movf	24,w	;volatile
   975  0062  39DF               	andlw	223
   976  0063  0098               	movwf	24	;volatile
   977  0064                     l672:
   978                           
   979                           ;port.c: 32:     RCSTA = RCSTA | 0x04;
   980  0064  0818               	movf	24,w	;volatile
   981  0065  3804               	iorlw	4
   982  0066  0098               	movwf	24	;volatile
   983  0067                     l674:
   984                           
   985                           ;port.c: 33:     RCSTA = RCSTA | 0x02;
   986  0067  0818               	movf	24,w	;volatile
   987  0068  3802               	iorlw	2
   988  0069  0098               	movwf	24	;volatile
   989  006A                     l676:
   990                           
   991                           ;port.c: 35:     TXSTA = TXSTA & 0xEF;
   992  006A  1683               	bsf	3,5	;RP0=1, select bank1
   993  006B  1303               	bcf	3,6	;RP1=0, select bank1
   994  006C  0818               	movf	24,w	;volatile
   995  006D  39EF               	andlw	239
   996  006E  0098               	movwf	24	;volatile
   997  006F                     l678:
   998                           
   999                           ;port.c: 36:     TXSTA = TXSTA | 0x20;
  1000  006F  0818               	movf	24,w	;volatile
  1001  0070  3820               	iorlw	32
  1002  0071  0098               	movwf	24	;volatile
  1003  0072                     l680:
  1004                           
  1005                           ;port.c: 37:     RCSTA = RCSTA | 0x80;
  1006  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0074  0818               	movf	24,w	;volatile
  1009  0075  3880               	iorlw	128
  1010  0076  0098               	movwf	24	;volatile
  1011  0077                     l77:
  1012  0077  0008               	return
  1013  0078                     __end_of_PORT_Init_Serial:
  1014                           
  1015                           	psect	text6
  1016  00F0                     __ptext6:	
  1017 ;; *************** function _PORT_Blink_LED *****************
  1018 ;; Defined at:
  1019 ;;		line 84 in file "port.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		status,0
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; Hardware stack levels required when called:    1
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           
  1048                           ;psect for function _PORT_Blink_LED
  1049  00F0                     _PORT_Blink_LED:
  1050  00F0                     l734:	
  1051                           ;incstack = 0
  1052                           ; Regs used in _PORT_Blink_LED: [status,0]
  1053                           
  1054                           
  1055                           ;port.c: 85:     PORTBbits.RB0 = !PORTBbits.RB0;
  1056  00F0  1003               	clrc
  1057  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1058  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1059  00F3  1C06               	btfss	6,0	;volatile
  1060  00F4  1403               	setc
  1061  00F5  1803               	btfsc	3,0
  1062  00F6  28F8               	goto	u31
  1063  00F7  28FC               	goto	u30
  1064  00F8                     u31:
  1065  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1066  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1067  00FA  1406               	bsf	6,0	;volatile
  1068  00FB  28FF               	goto	u44
  1069  00FC                     u30:
  1070  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1071  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1072  00FE  1006               	bcf	6,0	;volatile
  1073  00FF                     u44:
  1074  00FF                     l86:
  1075  00FF  0008               	return
  1076  0100                     __end_of_PORT_Blink_LED:
  1077                           
  1078                           	psect	text7
  1079  00B6                     __ptext7:	
  1080 ;; *************** function _isr *****************
  1081 ;; Defined at:
  1082 ;;		line 80 in file "timer.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		None
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0
  1098 ;;      Temps:          2       0       0       0       0
  1099 ;;      Totals:         2       0       0       0       0
  1100 ;;Total ram usage:        2 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		Interrupt level 1
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           
  1110                           ;psect for function _isr
  1111  00B6                     _isr:
  1112  00B6                     i1l784:
  1113                           
  1114                           ;timer.c: 87: if (TMR1IF)
  1115  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1116  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1117  00B8  1C0C               	btfss	12,0	;volatile
  1118  00B9  28BB               	goto	u7_21
  1119  00BA  28BC               	goto	u7_20
  1120  00BB                     u7_21:
  1121  00BB  28BF               	goto	i1l144
  1122  00BC                     u7_20:
  1123  00BC                     i1l786:
  1124                           
  1125                           ;timer.c: 88:      {;timer.c: 90:      Fincompt1 = 1;
  1126  00BC  01F6               	clrf	_Fincompt1
  1127  00BD  0AF6               	incf	_Fincompt1,f
  1128                           
  1129                           ;timer.c: 93:      TMR1IF=0;
  1130  00BE  100C               	bcf	12,0	;volatile
  1131  00BF                     i1l144:	
  1132                           ;timer.c: 94:      }
  1133                           
  1134                           
  1135                           ;timer.c: 96: if (TMRAIF)
  1136  00BF  1E0D               	btfss	13,4	;volatile
  1137  00C0  28C2               	goto	u8_21
  1138  00C1  28C3               	goto	u8_20
  1139  00C2                     u8_21:
  1140  00C2  28C4               	goto	i1l146
  1141  00C3                     u8_20:
  1142  00C3                     i1l788:
  1143                           
  1144                           ;timer.c: 97:      {;timer.c: 102:      TMRAIF=0;
  1145  00C3  120D               	bcf	13,4	;volatile
  1146  00C4                     i1l146:
  1147  00C4  0871               	movf	??_isr+1,w
  1148  00C5  008A               	movwf	10
  1149  00C6  0E70               	swapf	??_isr^(0+4294967168),w
  1150  00C7  0083               	movwf	3
  1151  00C8  0EFE               	swapf	btemp,f
  1152  00C9  0E7E               	swapf	btemp,w
  1153  00CA  0009               	retfie
  1154  00CB                     __end_of_isr:
  1155  007E                     btemp	set	126	;btemp
  1156  007E                     wtemp0	set	126
  1157                           
  1158                           	psect	intentry
  1159  0004                     __pintentry:	
  1160                           ;incstack = 0
  1161                           ; Regs used in _isr: []
  1162                           
  1163  0004                     interrupt_function:
  1164  007E                     saved_w	set	btemp
  1165  0004  00FE               	movwf	btemp
  1166  0005  0E03               	swapf	3,w
  1167  0006  00F0               	movwf	??_isr
  1168  0007  080A               	movf	10,w
  1169  0008  00F1               	movwf	??_isr+1
  1170  0009  120A  118A  28B6   	ljmp	_isr
  1171                           
  1172                           	psect	config
  1173                           
  1174                           ;Config register CONFIG @ 0x2007
  1175                           ;	Oscillator Selection bits
  1176                           ;	FOSC = INTOSC, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O function
      +                            on RA7/OSC1/CLKIN
  1177                           ;	Watchdog Timer Enable bit
  1178                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1179                           ;	Power-up Timer Enable bit
  1180                           ;	PWRTE = OFF, PWRT disabled
  1181                           ;	RE3/MCLR Pin Function Select bit
  1182                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1183                           ;	Code Protection bit
  1184                           ;	CP = OFF, Program memory code protection is disabled
  1185                           ;	Brown-out Reset Selection bits
  1186                           ;	BOREN = ON, BOR enabled
  1187                           ;	Brown-out Reset Voltage Selection bit
  1188                           ;	BORV = 19, Brown-out Reset Voltage (VBOR) set to 1.9 V nominal
  1189                           ;	INTOSC PLLEN Enable Bit
  1190                           ;	PLLEN = ON, INTOSC Frequency is 16 MHz (32x)
  1191  2007                     	org	8199
  1192  2007  3FF5               	dw	16373
  1193                           
  1194                           ;Config register CONFIG2 @ 0x2008
  1195                           ;	Voltage Regulator Capacitor Enable bits
  1196                           ;	VCAPEN = OFF, All VCAP pin functions are disabled
  1197  2008                     	org	8200
  1198  2008  FFFF               	dw	65535

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            91      0       0

Pointer List with Targets:

    PORT_putString@chaine	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_PORT_putString
    _PORT_putString->_PORT_putchar

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     138
                     _PORT_Blink_LED
                          _PORT_Init
                     _PORT_putString
                  _TIMER_init_timer1
 ---------------------------------------------------------------------------------
 (1) _TIMER_init_timer1                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PORT_putString                                       3     3      0     138
                                              3 COMMON     3     3      0
                       _PORT_putchar
 ---------------------------------------------------------------------------------
 (2) _PORT_putchar                                         1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            1     1      0       0
                                              2 COMMON     1     1      0
                   _PORT_Init_Serial
 ---------------------------------------------------------------------------------
 (2) _PORT_Init_Serial                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PORT_Blink_LED                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PORT_Blink_LED
   _PORT_Init
     _PORT_Init_Serial
   _PORT_putString
     _PORT_putchar
   _TIMER_init_timer1

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
DATA                 0      0       7       6        0.0%
BITBANK1            50      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITBANK3            60      0       0       9        0.0%
BANK3               60      0       0      10        0.0%
BITBANK2            5B      0       0      11        0.0%
BANK2               5B      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon May 15 10:28:01 2023

                         pc 0002                          l83 004C                          l77 0077  
                        l86 00FF                          u10 0107                          u11 0106  
                        u20 0029                          u21 0028                          u30 00FC  
                        u31 00F8                          u44 00FF                          u90 009C  
                        u91 009B                          fsr 0004            ??_PORT_Blink_LED 0072  
                       l101 0101                         l110 009C                         l104 010B  
                       l139 00EF                         l700 003B                         l710 0049  
                       l702 003F                         l712 004A                         l704 0043  
                       l720 00E6                         l800 00A7                         l706 0044  
                       l730 00EB                         l722 00E7                         l714 00DE  
                       l802 00AC                         l660 004D                         l708 0047  
                       l732 00EE                         l724 00E8                         l716 00E2  
                       l734 00F0                         l670 0061                         l662 0053  
                       l726 00E9                         l718 00E5                         l680 0072  
                       l672 0064                         l664 0056                         l656 0101  
                       l728 00EA                         l674 0067                         l666 0059  
                       l690 0029                         l682 0014                         l658 0107  
                       l676 006A                         l668 005C                         l692 002C  
                       l684 001A                         l678 006F                         l694 0030  
                       l686 001E                         l790 0079                         l696 0032  
                       l688 0020                         l792 007C                         l698 0037  
                       l794 0089                         l796 008F                         l798 009D  
 __end_of_TIMER_init_timer1 00F0                         _isr 00B6                         fsr0 0004  
                      ?_isr 0070                        STR_1 00D1                        _TMRA 0110  
                      _WPUB 0095                        u7_20 00BC                        u7_21 00BB  
                      u8_20 00C3                        u8_21 00C2                        _main 009D  
                      btemp 007E                        start 000C                       ??_isr 0070  
                     ?_main 0070                       _ADRES 001E                       i1l144 00BF  
                     i1l146 00C4                       i1l784 00B6                       i1l786 00BC  
                     i1l788 00C3                       _RCSTA 0018                       _SPBRG 0099  
                     _PORTD 0008                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TXREG 0019  
                     _TXSTA 0098          __size_of_PORT_Init 0039                       pclath 000A  
                     status 0003                       wtemp0 007E             __initialization 000F  
             PORT_putchar@c 0072                __end_of_main 00B6                      ??_main 0076  
__size_of_TIMER_init_timer1 0012                      _ADCON0 001F                      _ADCON1 009F  
                    _ANSELA 0185                      _ANSELB 0186                      _ANSELD 0188  
                    _T1SYNC 0082                      _FVRCON 009D                      _OSCCON 0090  
                    _TMR1GE 047F                      _TMR1IE 0460                      _TMR1IF 0060  
                    _TMR1ON 0080                      _TMRAIF 006C                      _TMRCS0 0086  
                    _TMRCS1 0087           __end_of_PORT_Init 004D           ?_PORT_Init_Serial 0070  
        ??_PORT_Init_Serial 0072                      saved_w 007E            ??_PORT_putString 0073  
   __end_of__initialization 0010              __pcstackCOMMON 0070                  __pmaintext 009D  
                __pintentry 0004                     _DACCON0 0113                     _DACCON1 0114  
                   _T1CKPS0 0084                     _T1CKPS1 0085                     _T1OSCEN 0083  
                __stringtab 00CB                     __ptext1 00DE                     __ptext2 0078  
                   __ptext3 0100                     __ptext4 0014                     __ptext5 004D  
                   __ptext6 00F0                     __ptext7 00B6                __size_of_isr 0015  
      end_of_initialization 0010     __size_of_PORT_Blink_LED 0010                   _PORTBbits 0006  
                 _PORT_Init 0014               ?_PORT_putchar 0070   __size_of_PORT_Init_Serial 002B  
           PORT_putString@i 0073                   _Fincompt1 0076                  ?_PORT_Init 0070  
            ??_PORT_putchar 0072         start_initialization 000F                 __end_of_isr 00CB  
               __pbssCOMMON 0076                   ___latbits 0002              _PORT_Blink_LED 00F0  
   __size_of_PORT_putString 0025                   __pstrings 00CB                 ??_PORT_Init 0072  
    __end_of_PORT_Blink_LED 0100            _PORT_Init_Serial 004D           interrupt_function 0004  
      __end_of_PORT_putchar 010C                    _GO_nDONE 00F9                 __stringbase 00D0  
           ?_PORT_Blink_LED 0070          __end_of__stringtab 00D1               __size_of_main 0019  
            _PORT_putString 0078                    intlevel1 0000       __size_of_PORT_putchar 000C  
    __end_of_PORT_putString 009D                   stringcode 00CB    __end_of_PORT_Init_Serial 0078  
      PORT_putString@chaine 0075                    stringdir 00CB                    stringtab 00CB  
              _PORT_putchar 0100           _TIMER_init_timer1 00DE          ?_TIMER_init_timer1 0070  
           ?_PORT_putString 0070         ??_TIMER_init_timer1 0072  
